{
	"info": {
		"_postman_id": "887424a9-139a-40a4-9ce8-0745173a9945",
		"name": "Elastic Cloud API",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "deployments",
			"item": [
				{
					"name": "{deployment id}",
					"item": [
						{
							"name": "elasticsearch/{ref id}",
							"item": [
								{
									"name": "remote-clusters",
									"item": [
										{
											"name": "Set remote clusters",
											"_postman_id": "0147ce1c-4df4-4c99-b70a-dfefc8dfd85b",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"resources\": [\n    {\n      \"alias\": \"sed ullamco ut sit\",\n      \"deployment_id\": \"Lorem\",\n      \"elasticsearch_ref_id\": \"officia\",\n      \"info\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"skip_unavailable\": false\n    },\n    {\n      \"alias\": \"consectetur id commodo quis\",\n      \"deployment_id\": \"commodo mollit\",\n      \"elasticsearch_ref_id\": \"ea non\",\n      \"info\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"skip_unavailable\": true\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/deployments/:deployment_id/elasticsearch/:ref_id/remote-clusters",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"deployments",
														":deployment_id",
														"elasticsearch",
														":ref_id",
														"remote-clusters"
													],
													"variable": [
														{
															"id": "0aa9e7a8-d011-4adc-908d-002ffa45ec5c",
															"key": "deployment_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) Identifier for the Deployment.",
															"type": "string"
														},
														{
															"id": "155d1c60-44fc-4541-8b0a-d9e690e5b2cf",
															"key": "ref_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) User-specified RefId for the Resource.",
															"type": "string"
														}
													]
												},
												"description": "Overwrites or creates the remote clusters for the elasticsearch resource."
											},
											"response": [
												{
													"id": "2749df51-4038-4921-9440-771276d11aea",
													"name": "* The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)\n* The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"resources\": [\n    {\n      \"alias\": \"sunt et ipsum laborum\",\n      \"deployment_id\": \"ad veniam\",\n      \"elasticsearch_ref_id\": \"aliqua est nulla\",\n      \"info\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"skip_unavailable\": false\n    },\n    {\n      \"alias\": \"adipisicing consequat\",\n      \"deployment_id\": \"in\",\n      \"elasticsearch_ref_id\": \"anim enim cupidatat consectetur\",\n      \"info\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"skip_unavailable\": true\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/deployments/:deployment_id/elasticsearch/:ref_id/remote-clusters",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"deployments",
																":deployment_id",
																"elasticsearch",
																":ref_id",
																"remote-clusters"
															],
															"variable": [
																{
																	"key": "deployment_id",
																	"value": "cupidatat adipisicing",
																	"description": "(Required) Identifier for the Deployment."
																},
																{
																	"key": "ref_id",
																	"value": "cupidatat adipisicing",
																	"description": "(Required) User-specified RefId for the Resource."
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"disabled": false,
															"description": "The error codes associated with the response",
															"key": "x-cloud-error-codes",
															"value": "deployments.deployment_resource_not_found"
														},
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
												},
												{
													"id": "28f52dbb-b617-45bd-95c5-b904a4fee07f",
													"name": "Elevated permissions are required. (code: `root.unauthorized.rbac.elevated_permissions_required`)",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"resources\": [\n    {\n      \"alias\": \"sunt et ipsum laborum\",\n      \"deployment_id\": \"ad veniam\",\n      \"elasticsearch_ref_id\": \"aliqua est nulla\",\n      \"info\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"skip_unavailable\": false\n    },\n    {\n      \"alias\": \"adipisicing consequat\",\n      \"deployment_id\": \"in\",\n      \"elasticsearch_ref_id\": \"anim enim cupidatat consectetur\",\n      \"info\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"skip_unavailable\": true\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/deployments/:deployment_id/elasticsearch/:ref_id/remote-clusters",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"deployments",
																":deployment_id",
																"elasticsearch",
																":ref_id",
																"remote-clusters"
															],
															"variable": [
																{
																	"key": "deployment_id",
																	"value": "cupidatat adipisicing",
																	"description": "(Required) Identifier for the Deployment."
																},
																{
																	"key": "ref_id",
																	"value": "cupidatat adipisicing",
																	"description": "(Required) User-specified RefId for the Resource."
																}
															]
														}
													},
													"status": "Retry With",
													"code": 449,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"disabled": false,
															"description": "The error codes associated with the response",
															"key": "x-cloud-error-codes",
															"value": "root.unauthorized.rbac.elevated_permissions_required"
														},
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
												},
												{
													"id": "45e3cdbe-e01e-4a0d-a1ad-2fb327cef230",
													"name": "The Remote Clusters were updated",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"resources\": [\n    {\n      \"alias\": \"sunt et ipsum laborum\",\n      \"deployment_id\": \"ad veniam\",\n      \"elasticsearch_ref_id\": \"aliqua est nulla\",\n      \"info\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"skip_unavailable\": false\n    },\n    {\n      \"alias\": \"adipisicing consequat\",\n      \"deployment_id\": \"in\",\n      \"elasticsearch_ref_id\": \"anim enim cupidatat consectetur\",\n      \"info\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"skip_unavailable\": true\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/deployments/:deployment_id/elasticsearch/:ref_id/remote-clusters",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"deployments",
																":deployment_id",
																"elasticsearch",
																":ref_id",
																"remote-clusters"
															],
															"variable": [
																{
																	"key": "deployment_id",
																	"value": "cupidatat adipisicing",
																	"description": "(Required) Identifier for the Deployment."
																},
																{
																	"key": "ref_id",
																	"value": "cupidatat adipisicing",
																	"description": "(Required) User-specified RefId for the Resource."
																}
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{}"
												}
											]
										},
										{
											"name": "Get remote clusters",
											"_postman_id": "833e38f7-0eba-4886-ac06-59d14588c6e1",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/deployments/:deployment_id/elasticsearch/:ref_id/remote-clusters",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"deployments",
														":deployment_id",
														"elasticsearch",
														":ref_id",
														"remote-clusters"
													],
													"variable": [
														{
															"id": "f5638a46-fc2f-4884-8fb4-dc9e5dc17ec7",
															"key": "deployment_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) Identifier for the Deployment.",
															"type": "string"
														},
														{
															"id": "75e3acf6-7e09-4df1-8beb-97690bf32470",
															"key": "ref_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) User-specified RefId for the Resource.",
															"type": "string"
														}
													]
												},
												"description": "Returns the list of remote clusters for the elasticsearch resource."
											},
											"response": [
												{
													"id": "657cd31a-08cf-416b-9c41-5121995c0beb",
													"name": "* The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)\n* The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/deployments/:deployment_id/elasticsearch/:ref_id/remote-clusters",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"deployments",
																":deployment_id",
																"elasticsearch",
																":ref_id",
																"remote-clusters"
															],
															"variable": [
																{
																	"key": "deployment_id",
																	"value": "cupidatat adipisicing",
																	"description": "(Required) Identifier for the Deployment."
																},
																{
																	"key": "ref_id",
																	"value": "cupidatat adipisicing",
																	"description": "(Required) User-specified RefId for the Resource."
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"disabled": false,
															"description": "The error codes associated with the response",
															"key": "x-cloud-error-codes",
															"value": "deployments.deployment_resource_not_found"
														},
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
												},
												{
													"id": "c36fbab5-a7ba-4e95-b41f-dd75d8d4951c",
													"name": "List of remote clusters for the resource",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/deployments/:deployment_id/elasticsearch/:ref_id/remote-clusters",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"deployments",
																":deployment_id",
																"elasticsearch",
																":ref_id",
																"remote-clusters"
															],
															"variable": [
																{
																	"key": "deployment_id",
																	"value": "cupidatat adipisicing",
																	"description": "(Required) Identifier for the Deployment."
																},
																{
																	"key": "ref_id",
																	"value": "cupidatat adipisicing",
																	"description": "(Required) User-specified RefId for the Resource."
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"resources\": [\n    {\n      \"alias\": \"sunt et ipsum laborum\",\n      \"deployment_id\": \"ad veniam\",\n      \"elasticsearch_ref_id\": \"aliqua est nulla\",\n      \"info\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"skip_unavailable\": false\n    },\n    {\n      \"alias\": \"adipisicing consequat\",\n      \"deployment_id\": \"in\",\n      \"elasticsearch_ref_id\": \"anim enim cupidatat consectetur\",\n      \"info\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"skip_unavailable\": true\n    }\n  ]\n}"
												}
											]
										}
									],
									"_postman_id": "4a5d47cc-7cea-4ffc-83b5-8dd6ea5ecf7b",
									"_postman_isSubFolder": true
								},
								{
									"name": "keystore",
									"item": [
										{
											"name": "Add or remove items from the Elasticsearch resource keystore",
											"_postman_id": "b0805a87-008e-44f5-bcc8-ba3c8239a1ad",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"secrets\": {\n    \"fugiat_a\": {\n      \"as_file\": true,\n      \"value\": {}\n    }\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/deployments/:deployment_id/elasticsearch/:ref_id/keystore",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"deployments",
														":deployment_id",
														"elasticsearch",
														":ref_id",
														"keystore"
													],
													"variable": [
														{
															"id": "0f775bbe-5a4a-4611-907b-838618fb6d4b",
															"key": "deployment_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) Identifier for the Deployment",
															"type": "string"
														},
														{
															"id": "c8915786-2955-4080-a4f2-3531ebab7f8f",
															"key": "ref_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) User-specified RefId for the Resource",
															"type": "string"
														}
													]
												},
												"description": "Adds the specified values to the Elasticsearch keystore, or removes the keys for the unspecified values."
											},
											"response": [
												{
													"id": "29f0ecca-12ac-48ae-9d63-428992f5e42b",
													"name": "Elevated permissions are required. (code: `root.unauthorized.rbac.elevated_permissions_required`)",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"secrets\": {\n    \"fugiat_a\": {\n      \"as_file\": true,\n      \"value\": {}\n    }\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/deployments/:deployment_id/elasticsearch/:ref_id/keystore",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"deployments",
																":deployment_id",
																"elasticsearch",
																":ref_id",
																"keystore"
															],
															"variable": [
																{
																	"key": "deployment_id",
																	"value": "cupidatat adipisicing",
																	"description": "(Required) Identifier for the Deployment"
																},
																{
																	"key": "ref_id",
																	"value": "cupidatat adipisicing",
																	"description": "(Required) User-specified RefId for the Resource"
																}
															]
														}
													},
													"status": "Retry With",
													"code": 449,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"disabled": false,
															"description": "The error codes associated with the response",
															"key": "x-cloud-error-codes",
															"value": "root.unauthorized.rbac.elevated_permissions_required"
														},
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
												},
												{
													"id": "829a5c3d-2a7c-4182-91a0-1d483160c5d5",
													"name": "* The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)\n* The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"secrets\": {\n    \"fugiat_a\": {\n      \"as_file\": true,\n      \"value\": {}\n    }\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/deployments/:deployment_id/elasticsearch/:ref_id/keystore",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"deployments",
																":deployment_id",
																"elasticsearch",
																":ref_id",
																"keystore"
															],
															"variable": [
																{
																	"key": "deployment_id",
																	"value": "cupidatat adipisicing",
																	"description": "(Required) Identifier for the Deployment"
																},
																{
																	"key": "ref_id",
																	"value": "cupidatat adipisicing",
																	"description": "(Required) User-specified RefId for the Resource"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"disabled": false,
															"description": "The error codes associated with the response",
															"key": "x-cloud-error-codes",
															"value": "deployments.deployment_resource_not_found"
														},
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
												},
												{
													"id": "aa24b27d-0094-4df2-8454-545f38832654",
													"name": "We have failed you. (code: `deployments.metadata_internal_error`)",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"secrets\": {\n    \"fugiat_a\": {\n      \"as_file\": true,\n      \"value\": {}\n    }\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/deployments/:deployment_id/elasticsearch/:ref_id/keystore",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"deployments",
																":deployment_id",
																"elasticsearch",
																":ref_id",
																"keystore"
															],
															"variable": [
																{
																	"key": "deployment_id",
																	"value": "cupidatat adipisicing",
																	"description": "(Required) Identifier for the Deployment"
																},
																{
																	"key": "ref_id",
																	"value": "cupidatat adipisicing",
																	"description": "(Required) User-specified RefId for the Resource"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"disabled": false,
															"description": "The error codes associated with the response",
															"key": "x-cloud-error-codes",
															"value": "deployments.metadata_internal_error"
														},
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
												},
												{
													"id": "c1d27592-786c-4931-bf88-04cac6f01218",
													"name": "The new contents of the Elasticsearch keystore",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"secrets\": {\n    \"fugiat_a\": {\n      \"as_file\": true,\n      \"value\": {}\n    }\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/deployments/:deployment_id/elasticsearch/:ref_id/keystore",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"deployments",
																":deployment_id",
																"elasticsearch",
																":ref_id",
																"keystore"
															],
															"variable": [
																{
																	"key": "deployment_id",
																	"value": "cupidatat adipisicing",
																	"description": "(Required) Identifier for the Deployment"
																},
																{
																	"key": "ref_id",
																	"value": "cupidatat adipisicing",
																	"description": "(Required) User-specified RefId for the Resource"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"secrets\": {\n    \"fugiat_a\": {\n      \"as_file\": true,\n      \"value\": {}\n    }\n  }\n}"
												}
											]
										},
										{
											"name": "Get the items in the Elasticsearch resource keystore",
											"_postman_id": "cbbe0cc4-b0d2-4eb9-9fdc-19d0fe945440",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/deployments/:deployment_id/elasticsearch/:ref_id/keystore",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"deployments",
														":deployment_id",
														"elasticsearch",
														":ref_id",
														"keystore"
													],
													"variable": [
														{
															"id": "52da3210-9800-4fb6-80ef-e327c2884a7f",
															"key": "deployment_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) Identifier for the Deployment",
															"type": "string"
														},
														{
															"id": "376517e2-079e-43cb-8a2b-3cc414e45287",
															"key": "ref_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) User-specified RefId for the Resource",
															"type": "string"
														}
													]
												},
												"description": "Fetches the current values of the keystore for the Elasticsearch resource."
											},
											"response": [
												{
													"id": "1e91688b-3cd1-4798-af74-54d53704388f",
													"name": "* The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)\n* The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/deployments/:deployment_id/elasticsearch/:ref_id/keystore",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"deployments",
																":deployment_id",
																"elasticsearch",
																":ref_id",
																"keystore"
															],
															"variable": [
																{
																	"key": "deployment_id",
																	"value": "cupidatat adipisicing",
																	"description": "(Required) Identifier for the Deployment"
																},
																{
																	"key": "ref_id",
																	"value": "cupidatat adipisicing",
																	"description": "(Required) User-specified RefId for the Resource"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"disabled": false,
															"description": "The error codes associated with the response",
															"key": "x-cloud-error-codes",
															"value": "deployments.deployment_resource_not_found"
														},
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
												},
												{
													"id": "7e83a85b-71fc-4aab-93b9-60b04cff78d4",
													"name": "Elevated permissions are required. (code: `root.unauthorized.rbac.elevated_permissions_required`)",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/deployments/:deployment_id/elasticsearch/:ref_id/keystore",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"deployments",
																":deployment_id",
																"elasticsearch",
																":ref_id",
																"keystore"
															],
															"variable": [
																{
																	"key": "deployment_id",
																	"value": "cupidatat adipisicing",
																	"description": "(Required) Identifier for the Deployment"
																},
																{
																	"key": "ref_id",
																	"value": "cupidatat adipisicing",
																	"description": "(Required) User-specified RefId for the Resource"
																}
															]
														}
													},
													"status": "Retry With",
													"code": 449,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"disabled": false,
															"description": "The error codes associated with the response",
															"key": "x-cloud-error-codes",
															"value": "root.unauthorized.rbac.elevated_permissions_required"
														},
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
												},
												{
													"id": "9cbf5ee1-11d7-430e-a530-c6b73ffcb74e",
													"name": "We have failed you. (code: `deployments.metadata_internal_error`)",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/deployments/:deployment_id/elasticsearch/:ref_id/keystore",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"deployments",
																":deployment_id",
																"elasticsearch",
																":ref_id",
																"keystore"
															],
															"variable": [
																{
																	"key": "deployment_id",
																	"value": "cupidatat adipisicing",
																	"description": "(Required) Identifier for the Deployment"
																},
																{
																	"key": "ref_id",
																	"value": "cupidatat adipisicing",
																	"description": "(Required) User-specified RefId for the Resource"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"disabled": false,
															"description": "The error codes associated with the response",
															"key": "x-cloud-error-codes",
															"value": "deployments.metadata_internal_error"
														},
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
												},
												{
													"id": "fd30695b-a522-4a67-9bbb-4058b8da89b4",
													"name": "The contents of the Elasticsearch keystore",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/deployments/:deployment_id/elasticsearch/:ref_id/keystore",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"deployments",
																":deployment_id",
																"elasticsearch",
																":ref_id",
																"keystore"
															],
															"variable": [
																{
																	"key": "deployment_id",
																	"value": "cupidatat adipisicing",
																	"description": "(Required) Identifier for the Deployment"
																},
																{
																	"key": "ref_id",
																	"value": "cupidatat adipisicing",
																	"description": "(Required) User-specified RefId for the Resource"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"secrets\": {\n    \"fugiat_a\": {\n      \"as_file\": true,\n      \"value\": {}\n    }\n  }\n}"
												}
											]
										}
									],
									"_postman_id": "73cd7a79-f5b2-4862-949e-d7277647d5c1",
									"_postman_isSubFolder": true
								},
								{
									"name": "Get Deployment Elasticsearch Resource Info",
									"_postman_id": "c023d401-216f-4301-be3d-ef969bd1baa6",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/deployments/:deployment_id/elasticsearch/:ref_id?show_security=false&show_metadata=false&show_plans=true&show_plan_logs=false&show_plan_history=false&show_plan_defaults=false&convert_legacy_plans=false&show_system_alerts=0&show_settings=false&enrich_with_template=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"deployments",
												":deployment_id",
												"elasticsearch",
												":ref_id"
											],
											"query": [
												{
													"key": "show_security",
													"value": "false",
													"description": "Whether to include the Elasticsearch 2.x security information in the response - can be large per cluster and also include credentials."
												},
												{
													"key": "show_metadata",
													"value": "false",
													"description": "Whether to include the full cluster metadata in the response - can be large per cluster and also include credentials."
												},
												{
													"key": "show_plans",
													"value": "true",
													"description": "Whether to include the full current and pending plan information in the response - can be large per cluster."
												},
												{
													"key": "show_plan_logs",
													"value": "false",
													"description": "Whether to include with the current and pending plan information the attempt log - can be very large per cluster."
												},
												{
													"key": "show_plan_history",
													"value": "false",
													"description": "Whether to include with the current and pending plan information the plan history- can be very large per cluster."
												},
												{
													"key": "show_plan_defaults",
													"value": "false",
													"description": "If showing plans, whether to show values that are left at their default value (less readable but more informative)."
												},
												{
													"key": "convert_legacy_plans",
													"value": "false",
													"description": "If showing plans, whether to leave pre-2.0.0 plans in their legacy format (the default), or whether to update them to 2.0.x+ format (if 'true')."
												},
												{
													"key": "show_system_alerts",
													"value": "0",
													"description": "Number of system alerts (such as forced restarts due to memory limits) to be included in the response - can be large per cluster. Negative numbers or 0 will not return field."
												},
												{
													"key": "show_settings",
													"value": "false",
													"description": "Whether to show cluster settings in the response."
												},
												{
													"key": "enrich_with_template",
													"value": "true",
													"description": "If showing plans, whether to enrich the plan by including the missing elements from the deployment template it is based on."
												}
											],
											"variable": [
												{
													"id": "af699a69-25fb-4d3d-96ac-d9179ab2d204",
													"key": "deployment_id",
													"value": "cupidatat adipisicing",
													"description": "(Required) Identifier for the Deployment",
													"type": "string"
												},
												{
													"id": "395e62d5-dd03-488e-9550-fa65a940c3db",
													"key": "ref_id",
													"value": "cupidatat adipisicing",
													"description": "(Required) User-specified RefId for the Resource",
													"type": "string"
												}
											]
										},
										"description": "Get info about an Elasticsearch Resource belonging to a given Deployment."
									},
									"response": [
										{
											"id": "05984b31-43e7-4ad2-8004-8487776f0416",
											"name": "We have failed you. (code: `deployments.deployment_resource_no_longer_exists`)",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/deployments/:deployment_id/elasticsearch/:ref_id?show_security=false&show_metadata=false&show_plans=true&show_plan_logs=false&show_plan_history=false&show_plan_defaults=false&convert_legacy_plans=false&show_system_alerts=0&show_settings=false&enrich_with_template=true",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"deployments",
														":deployment_id",
														"elasticsearch",
														":ref_id"
													],
													"query": [
														{
															"key": "show_security",
															"value": "false"
														},
														{
															"key": "show_metadata",
															"value": "false"
														},
														{
															"key": "show_plans",
															"value": "true"
														},
														{
															"key": "show_plan_logs",
															"value": "false"
														},
														{
															"key": "show_plan_history",
															"value": "false"
														},
														{
															"key": "show_plan_defaults",
															"value": "false"
														},
														{
															"key": "convert_legacy_plans",
															"value": "false"
														},
														{
															"key": "show_system_alerts",
															"value": "0"
														},
														{
															"key": "show_settings",
															"value": "false"
														},
														{
															"key": "enrich_with_template",
															"value": "true"
														}
													],
													"variable": [
														{
															"key": "deployment_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) Identifier for the Deployment"
														},
														{
															"key": "ref_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) User-specified RefId for the Resource"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"disabled": false,
													"description": "The error codes associated with the response",
													"key": "x-cloud-error-codes",
													"value": "deployments.deployment_resource_no_longer_exists"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
										},
										{
											"id": "1d05e23e-db2d-479f-95d2-29846bccffa3",
											"name": "Standard response.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/deployments/:deployment_id/elasticsearch/:ref_id?show_security=false&show_metadata=false&show_plans=true&show_plan_logs=false&show_plan_history=false&show_plan_defaults=false&convert_legacy_plans=false&show_system_alerts=0&show_settings=false&enrich_with_template=true",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"deployments",
														":deployment_id",
														"elasticsearch",
														":ref_id"
													],
													"query": [
														{
															"key": "show_security",
															"value": "false"
														},
														{
															"key": "show_metadata",
															"value": "false"
														},
														{
															"key": "show_plans",
															"value": "true"
														},
														{
															"key": "show_plan_logs",
															"value": "false"
														},
														{
															"key": "show_plan_history",
															"value": "false"
														},
														{
															"key": "show_plan_defaults",
															"value": "false"
														},
														{
															"key": "convert_legacy_plans",
															"value": "false"
														},
														{
															"key": "show_system_alerts",
															"value": "0"
														},
														{
															"key": "show_settings",
															"value": "false"
														},
														{
															"key": "enrich_with_template",
															"value": "true"
														}
													],
													"variable": [
														{
															"key": "deployment_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) Identifier for the Deployment"
														},
														{
															"key": "ref_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) User-specified RefId for the Resource"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"id\": \"tempor qui\",\n  \"info\": {\n    \"associated_apm_clusters\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"associated_appsearch_clusters\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"associated_enterprise_search_clusters\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"associated_kibana_clusters\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"cluster_id\": \"elit pariatur\",\n    \"cluster_name\": \"est veniam Excepteur\",\n    \"elasticsearch\": {\n      \"blocking_issues\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"healthy\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"master_info\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"shard_info\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"cluster_blocking_issues\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"shards_status\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"external_links\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"healthy\": true,\n    \"metadata\": {\n      \"last_modified\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"version\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"endpoint\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"cloud_id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"aliased_endpoint\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"raw\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"service_url\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"aliased_url\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"services_urls\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"ports\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"plan_info\": {\n      \"healthy\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"history\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"current\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"pending\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"snapshots\": {\n      \"count\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"healthy\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"recent_success\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"scheduled_time\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"latest_end_time\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"latest_successful\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"latest_successful_end_time\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"latest_status\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"status\": \"reconfiguring\",\n    \"topology\": {\n      \"healthy\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"instances\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"links\": {\n      \"consequatb\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"settings\": {\n      \"monitoring\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"curation\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"snapshot\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"traffic_filter\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"trust\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dedicated_masters_threshold\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"region\": \"consequat Excepteur aliqua do\",\n    \"elasticsearch_monitoring_info\": {\n      \"destination_cluster_ids\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"healthy\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"last_modified\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"last_update_status\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"source_cluster_ids\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"system_alerts\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"deployment_id\": \"ut\",\n    \"security\": {\n      \"last_modified\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"roles\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"users\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"users_roles\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"version\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"ref_id\": \"eiusmod dolor aute culpa tempor\",\n  \"region\": \"consequat non Duis adipisicing\"\n}"
										},
										{
											"id": "fc607bf4-f6ed-4206-826c-2eac8df856b1",
											"name": "The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/deployments/:deployment_id/elasticsearch/:ref_id?show_security=false&show_metadata=false&show_plans=true&show_plan_logs=false&show_plan_history=false&show_plan_defaults=false&convert_legacy_plans=false&show_system_alerts=0&show_settings=false&enrich_with_template=true",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"deployments",
														":deployment_id",
														"elasticsearch",
														":ref_id"
													],
													"query": [
														{
															"key": "show_security",
															"value": "false"
														},
														{
															"key": "show_metadata",
															"value": "false"
														},
														{
															"key": "show_plans",
															"value": "true"
														},
														{
															"key": "show_plan_logs",
															"value": "false"
														},
														{
															"key": "show_plan_history",
															"value": "false"
														},
														{
															"key": "show_plan_defaults",
															"value": "false"
														},
														{
															"key": "convert_legacy_plans",
															"value": "false"
														},
														{
															"key": "show_system_alerts",
															"value": "0"
														},
														{
															"key": "show_settings",
															"value": "false"
														},
														{
															"key": "enrich_with_template",
															"value": "true"
														}
													],
													"variable": [
														{
															"key": "deployment_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) Identifier for the Deployment"
														},
														{
															"key": "ref_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) User-specified RefId for the Resource"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"disabled": false,
													"description": "The error codes associated with the response",
													"key": "x-cloud-error-codes",
													"value": "deployments.deployment_not_found"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Shutdown Deployment Elasticsearch Resource",
									"_postman_id": "08e1302b-e824-4324-8b43-8f39580c7dde",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/deployments/:deployment_id/elasticsearch/:ref_id/_shutdown?hide=true&skip_snapshot=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"deployments",
												":deployment_id",
												"elasticsearch",
												":ref_id",
												"_shutdown"
											],
											"query": [
												{
													"key": "hide",
													"value": "true",
													"description": "Hide cluster on shutdown. Hidden clusters are not listed by default. Only applicable for Platform administrators."
												},
												{
													"key": "skip_snapshot",
													"value": "false",
													"description": "If true, will skip taking a snapshot of the cluster before shutting the cluster down (if even possible)."
												}
											],
											"variable": [
												{
													"id": "4205b581-e541-481a-87ce-dea2e191bb88",
													"key": "deployment_id",
													"value": "cupidatat adipisicing",
													"description": "(Required) Identifier for the Deployment.",
													"type": "string"
												},
												{
													"id": "b737a41d-b0ec-417e-af3e-4fd0e31a9e9e",
													"key": "ref_id",
													"value": "cupidatat adipisicing",
													"description": "(Required) User-specified RefId for the Resource.",
													"type": "string"
												}
											]
										},
										"description": "Shutdown Elasticsearch Resource belonging to a given Deployment."
									},
									"response": [
										{
											"id": "21bda9a4-af7e-45d6-a02e-1cc51ddf501c",
											"name": "A Resource that was previously stored no longer exists. (code: `deployments.deployment_resource_no_longer_exists`)",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/deployments/:deployment_id/elasticsearch/:ref_id/_shutdown?hide=true&skip_snapshot=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"deployments",
														":deployment_id",
														"elasticsearch",
														":ref_id",
														"_shutdown"
													],
													"query": [
														{
															"key": "hide",
															"value": "true"
														},
														{
															"key": "skip_snapshot",
															"value": "false"
														}
													],
													"variable": [
														{
															"key": "deployment_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) Identifier for the Deployment."
														},
														{
															"key": "ref_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) User-specified RefId for the Resource."
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"disabled": false,
													"description": "The error codes associated with the response",
													"key": "x-cloud-error-codes",
													"value": "deployments.deployment_resource_no_longer_exists"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
										},
										{
											"id": "4ce9d4fb-63ee-4780-95ba-b974a7220514",
											"name": "* The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)\n* The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/deployments/:deployment_id/elasticsearch/:ref_id/_shutdown?hide=true&skip_snapshot=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"deployments",
														":deployment_id",
														"elasticsearch",
														":ref_id",
														"_shutdown"
													],
													"query": [
														{
															"key": "hide",
															"value": "true"
														},
														{
															"key": "skip_snapshot",
															"value": "false"
														}
													],
													"variable": [
														{
															"key": "deployment_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) Identifier for the Deployment."
														},
														{
															"key": "ref_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) User-specified RefId for the Resource."
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"disabled": false,
													"description": "The error codes associated with the response",
													"key": "x-cloud-error-codes",
													"value": "deployments.deployment_resource_not_found"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
										},
										{
											"id": "54cc2320-4aa5-4bd2-8221-4f4764cbfa6b",
											"name": "Parameter is restricted and can only be set by a Platform administrator. (code: `deployments.restricted_parameter`)",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/deployments/:deployment_id/elasticsearch/:ref_id/_shutdown?hide=true&skip_snapshot=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"deployments",
														":deployment_id",
														"elasticsearch",
														":ref_id",
														"_shutdown"
													],
													"query": [
														{
															"key": "hide",
															"value": "true"
														},
														{
															"key": "skip_snapshot",
															"value": "false"
														}
													],
													"variable": [
														{
															"key": "deployment_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) Identifier for the Deployment."
														},
														{
															"key": "ref_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) User-specified RefId for the Resource."
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"disabled": false,
													"description": "The error codes associated with the response",
													"key": "x-cloud-error-codes",
													"value": "deployments.restricted_parameter"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
										},
										{
											"id": "9ef72926-8b0c-4c9b-8d18-f4035766a542",
											"name": "Standard response.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/deployments/:deployment_id/elasticsearch/:ref_id/_shutdown?hide=true&skip_snapshot=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"deployments",
														":deployment_id",
														"elasticsearch",
														":ref_id",
														"_shutdown"
													],
													"query": [
														{
															"key": "hide",
															"value": "true"
														},
														{
															"key": "skip_snapshot",
															"value": "false"
														}
													],
													"variable": [
														{
															"key": "deployment_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) Identifier for the Deployment."
														},
														{
															"key": "ref_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) User-specified RefId for the Resource."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"warnings\": [\n    {\n      \"code\": \"in laborum cupidatat\",\n      \"message\": \"magna sed commodo dolor\"\n    },\n    {\n      \"code\": \"ullamco labore \",\n      \"message\": \"nisi id\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Migrate Elasticsearch resource to use SLM",
									"_postman_id": "458ddfa1-3c89-4341-906d-62ceca08f6a8",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/deployments/:deployment_id/elasticsearch/:ref_id/_enable-slm?validate_only=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"deployments",
												":deployment_id",
												"elasticsearch",
												":ref_id",
												"_enable-slm"
											],
											"query": [
												{
													"key": "validate_only",
													"value": "false",
													"description": "When `true`, does not enable SLM but returns warnings if any applications may lose availability during SLM migration."
												}
											],
											"variable": [
												{
													"id": "ee10541c-4fa6-4258-9054-4f288e12a82e",
													"key": "deployment_id",
													"value": "cupidatat adipisicing",
													"description": "(Required) Identifier for the Deployment.",
													"type": "string"
												},
												{
													"id": "18046e44-700b-4918-841c-f9175b7ca64a",
													"key": "ref_id",
													"value": "cupidatat adipisicing",
													"description": "(Required) User-specified RefId for the Resource.",
													"type": "string"
												}
											]
										},
										"description": "Migrates the specified Elasticsearch resource to use SLM."
									},
									"response": [
										{
											"id": "206cbed7-b24f-41a9-be59-456417180e24",
											"name": "Elevated permissions are required. (code: `root.unauthorized.rbac.elevated_permissions_required`)",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/deployments/:deployment_id/elasticsearch/:ref_id/_enable-slm?validate_only=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"deployments",
														":deployment_id",
														"elasticsearch",
														":ref_id",
														"_enable-slm"
													],
													"query": [
														{
															"key": "validate_only",
															"value": "false"
														}
													],
													"variable": [
														{
															"key": "deployment_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) Identifier for the Deployment."
														},
														{
															"key": "ref_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) User-specified RefId for the Resource."
														}
													]
												}
											},
											"status": "Retry With",
											"code": 449,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"disabled": false,
													"description": "The error codes associated with the response",
													"key": "x-cloud-error-codes",
													"value": "root.unauthorized.rbac.elevated_permissions_required"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
										},
										{
											"id": "4b12ea75-aede-4b1a-815f-5f92a7fdf29f",
											"name": "* The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)\n* The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/deployments/:deployment_id/elasticsearch/:ref_id/_enable-slm?validate_only=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"deployments",
														":deployment_id",
														"elasticsearch",
														":ref_id",
														"_enable-slm"
													],
													"query": [
														{
															"key": "validate_only",
															"value": "false"
														}
													],
													"variable": [
														{
															"key": "deployment_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) Identifier for the Deployment."
														},
														{
															"key": "ref_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) User-specified RefId for the Resource."
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"disabled": false,
													"description": "The error codes associated with the response",
													"key": "x-cloud-error-codes",
													"value": "deployments.deployment_resource_not_found"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
										},
										{
											"id": "57fbddc2-a601-4160-bc00-e27dc24450a0",
											"name": "Standard response",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/deployments/:deployment_id/elasticsearch/:ref_id/_enable-slm?validate_only=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"deployments",
														":deployment_id",
														"elasticsearch",
														":ref_id",
														"_enable-slm"
													],
													"query": [
														{
															"key": "validate_only",
															"value": "false"
														}
													],
													"variable": [
														{
															"key": "deployment_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) Identifier for the Deployment."
														},
														{
															"key": "ref_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) User-specified RefId for the Resource."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"warnings\": [\n    {\n      \"code\": \"ex anim o\",\n      \"message\": \"in sit sint ut dese\"\n    },\n    {\n      \"code\": \"nulla sit\",\n      \"message\": \"cupidatat elit adipis\"\n    }\n  ]\n}"
										},
										{
											"id": "82a92e68-d133-45bc-b5c0-aa9fb64d0515",
											"name": "We have failed you. (code: `deployments.deployment_resource_no_longer_exists`)",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/deployments/:deployment_id/elasticsearch/:ref_id/_enable-slm?validate_only=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"deployments",
														":deployment_id",
														"elasticsearch",
														":ref_id",
														"_enable-slm"
													],
													"query": [
														{
															"key": "validate_only",
															"value": "false"
														}
													],
													"variable": [
														{
															"key": "deployment_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) Identifier for the Deployment."
														},
														{
															"key": "ref_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) User-specified RefId for the Resource."
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"disabled": false,
													"description": "The error codes associated with the response",
													"key": "x-cloud-error-codes",
													"value": "deployments.deployment_resource_no_longer_exists"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Restart Deployment Elasticsearch Resource",
									"_postman_id": "018ef5e6-c07b-4e00-81d7-43b64564cc9b",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/deployments/:deployment_id/elasticsearch/:ref_id/_restart?restore_snapshot=true&skip_snapshot=true&cancel_pending=false&group_attribute=__zone__&shard_init_wait_time=600",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"deployments",
												":deployment_id",
												"elasticsearch",
												":ref_id",
												"_restart"
											],
											"query": [
												{
													"key": "restore_snapshot",
													"value": "true",
													"description": "When set to true and restoring from shutdown, then will restore the cluster from the last snapshot (if available)."
												},
												{
													"key": "skip_snapshot",
													"value": "true",
													"description": "If true, will not take a snapshot of the cluster before restarting."
												},
												{
													"key": "cancel_pending",
													"value": "false",
													"description": "If true, cancels any pending plans before restarting. If false and there are pending plans, returns an error."
												},
												{
													"key": "group_attribute",
													"value": "__zone__",
													"description": "Indicates the property or properties used to divide the list of instances to restart in groups. Valid options are: '\\_\\_all\\_\\_' (restart all at once), '\\_\\_zone\\_\\_' by logical zone, '\\_\\_name\\_\\_' one instance at a time, or a comma-separated list of attributes of the instances"
												},
												{
													"key": "shard_init_wait_time",
													"value": "600",
													"description": "The time, in seconds, to wait for shards that show no progress of initializing, before rolling the next group (default: 10 minutes)"
												}
											],
											"variable": [
												{
													"id": "75231ce6-144a-47b2-83cd-c82fe50a3750",
													"key": "deployment_id",
													"value": "cupidatat adipisicing",
													"description": "(Required) Identifier for the Deployment.",
													"type": "string"
												},
												{
													"id": "541ac55c-752a-4725-a529-88cd5b85b6a1",
													"key": "ref_id",
													"value": "cupidatat adipisicing",
													"description": "(Required) User-specified RefId for the Resource.",
													"type": "string"
												}
											]
										},
										"description": "Restarts an Elasticsearch Resource. If a Resource is active: this command re-applies the existing plan but applies a \"cluster_reboot\", which issues a restart command and waits for it to complete. If a Resource is inactive: this command starts it up with the most recent successful plan."
									},
									"response": [
										{
											"id": "5fab5bbf-26dd-41e2-835d-3d7429aac047",
											"name": "The command sent to a Resource found the Resource in an illegal state, the error message gives more details. (code: `deployments.deployment_resource_plan_change_error`)",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/deployments/:deployment_id/elasticsearch/:ref_id/_restart?restore_snapshot=true&skip_snapshot=true&cancel_pending=false&group_attribute=__zone__&shard_init_wait_time=600",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"deployments",
														":deployment_id",
														"elasticsearch",
														":ref_id",
														"_restart"
													],
													"query": [
														{
															"key": "restore_snapshot",
															"value": "true"
														},
														{
															"key": "skip_snapshot",
															"value": "true"
														},
														{
															"key": "cancel_pending",
															"value": "false"
														},
														{
															"key": "group_attribute",
															"value": "__zone__"
														},
														{
															"key": "shard_init_wait_time",
															"value": "600"
														}
													],
													"variable": [
														{
															"key": "deployment_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) Identifier for the Deployment."
														},
														{
															"key": "ref_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) User-specified RefId for the Resource."
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"disabled": false,
													"description": "The error codes associated with the response",
													"key": "x-cloud-error-codes",
													"value": "deployments.deployment_resource_plan_change_error"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
										},
										{
											"id": "624224bb-877b-49bd-9a95-c99aac8cc0c8",
											"name": "Elevated permissions are required. (code: `root.unauthorized.rbac.elevated_permissions_required`)",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/deployments/:deployment_id/elasticsearch/:ref_id/_restart?restore_snapshot=true&skip_snapshot=true&cancel_pending=false&group_attribute=__zone__&shard_init_wait_time=600",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"deployments",
														":deployment_id",
														"elasticsearch",
														":ref_id",
														"_restart"
													],
													"query": [
														{
															"key": "restore_snapshot",
															"value": "true"
														},
														{
															"key": "skip_snapshot",
															"value": "true"
														},
														{
															"key": "cancel_pending",
															"value": "false"
														},
														{
															"key": "group_attribute",
															"value": "__zone__"
														},
														{
															"key": "shard_init_wait_time",
															"value": "600"
														}
													],
													"variable": [
														{
															"key": "deployment_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) Identifier for the Deployment."
														},
														{
															"key": "ref_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) User-specified RefId for the Resource."
														}
													]
												}
											},
											"status": "Retry With",
											"code": 449,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"disabled": false,
													"description": "The error codes associated with the response",
													"key": "x-cloud-error-codes",
													"value": "root.unauthorized.rbac.elevated_permissions_required"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
										},
										{
											"id": "89e96929-0b1b-4cda-a0d6-483d13dbc5b8",
											"name": "The restart command was issued successfully.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/deployments/:deployment_id/elasticsearch/:ref_id/_restart?restore_snapshot=true&skip_snapshot=true&cancel_pending=false&group_attribute=__zone__&shard_init_wait_time=600",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"deployments",
														":deployment_id",
														"elasticsearch",
														":ref_id",
														"_restart"
													],
													"query": [
														{
															"key": "restore_snapshot",
															"value": "true"
														},
														{
															"key": "skip_snapshot",
															"value": "true"
														},
														{
															"key": "cancel_pending",
															"value": "false"
														},
														{
															"key": "group_attribute",
															"value": "__zone__"
														},
														{
															"key": "shard_init_wait_time",
															"value": "600"
														}
													],
													"variable": [
														{
															"key": "deployment_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) Identifier for the Deployment."
														},
														{
															"key": "ref_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) User-specified RefId for the Resource."
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"warnings\": [\n    {\n      \"code\": \"ex anim o\",\n      \"message\": \"in sit sint ut dese\"\n    },\n    {\n      \"code\": \"nulla sit\",\n      \"message\": \"cupidatat elit adipis\"\n    }\n  ]\n}"
										},
										{
											"id": "8d31efcd-03f8-436c-96d8-cd541b577fcd",
											"name": "* The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)\n* The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/deployments/:deployment_id/elasticsearch/:ref_id/_restart?restore_snapshot=true&skip_snapshot=true&cancel_pending=false&group_attribute=__zone__&shard_init_wait_time=600",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"deployments",
														":deployment_id",
														"elasticsearch",
														":ref_id",
														"_restart"
													],
													"query": [
														{
															"key": "restore_snapshot",
															"value": "true"
														},
														{
															"key": "skip_snapshot",
															"value": "true"
														},
														{
															"key": "cancel_pending",
															"value": "false"
														},
														{
															"key": "group_attribute",
															"value": "__zone__"
														},
														{
															"key": "shard_init_wait_time",
															"value": "600"
														}
													],
													"variable": [
														{
															"key": "deployment_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) Identifier for the Deployment."
														},
														{
															"key": "ref_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) User-specified RefId for the Resource."
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"disabled": false,
													"description": "The error codes associated with the response",
													"key": "x-cloud-error-codes",
													"value": "deployments.deployment_resource_not_found"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
										},
										{
											"id": "9143374a-5227-43a1-b9c2-8f7d3dccd30f",
											"name": "A Resource that was previously stored no longer exists. (code: `deployments.deployment_resource_no_longer_exists`)",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/deployments/:deployment_id/elasticsearch/:ref_id/_restart?restore_snapshot=true&skip_snapshot=true&cancel_pending=false&group_attribute=__zone__&shard_init_wait_time=600",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"deployments",
														":deployment_id",
														"elasticsearch",
														":ref_id",
														"_restart"
													],
													"query": [
														{
															"key": "restore_snapshot",
															"value": "true"
														},
														{
															"key": "skip_snapshot",
															"value": "true"
														},
														{
															"key": "cancel_pending",
															"value": "false"
														},
														{
															"key": "group_attribute",
															"value": "__zone__"
														},
														{
															"key": "shard_init_wait_time",
															"value": "600"
														}
													],
													"variable": [
														{
															"key": "deployment_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) Identifier for the Deployment."
														},
														{
															"key": "ref_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) User-specified RefId for the Resource."
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"disabled": false,
													"description": "The error codes associated with the response",
													"key": "x-cloud-error-codes",
													"value": "deployments.deployment_resource_no_longer_exists"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Reset 'elastic' user password",
									"_postman_id": "41e78aa3-179b-4531-84d3-6aa924070afb",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/deployments/:deployment_id/elasticsearch/:ref_id/_reset-password",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"deployments",
												":deployment_id",
												"elasticsearch",
												":ref_id",
												"_reset-password"
											],
											"variable": [
												{
													"id": "831f2f13-6e99-4a00-b1dc-a2aae87e4506",
													"key": "deployment_id",
													"value": "cupidatat adipisicing",
													"description": "(Required) Identifier for the Deployment.",
													"type": "string"
												},
												{
													"id": "6545ce03-d740-4ccd-94f8-61511329a958",
													"key": "ref_id",
													"value": "cupidatat adipisicing",
													"description": "(Required) User-specified RefId for the Resource.",
													"type": "string"
												}
											]
										},
										"description": "Resets the password of the 'elastic' user."
									},
									"response": [
										{
											"id": "6b824d8b-4c73-47d0-a4b8-74231ebb00d6",
											"name": "The password reset was out carried successfully",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/deployments/:deployment_id/elasticsearch/:ref_id/_reset-password",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"deployments",
														":deployment_id",
														"elasticsearch",
														":ref_id",
														"_reset-password"
													],
													"variable": [
														{
															"key": "deployment_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) Identifier for the Deployment."
														},
														{
															"key": "ref_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) User-specified RefId for the Resource."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"password\": \"nulla\",\n  \"username\": \"culpa reprehenderit quis ad\"\n}"
										},
										{
											"id": "7beeddb6-36b0-4745-99fe-930210865910",
											"name": "Failed to reset the 'elastic' user's password. (code: `deployments.elasticsearch.password_reset_error`)",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/deployments/:deployment_id/elasticsearch/:ref_id/_reset-password",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"deployments",
														":deployment_id",
														"elasticsearch",
														":ref_id",
														"_reset-password"
													],
													"variable": [
														{
															"key": "deployment_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) Identifier for the Deployment."
														},
														{
															"key": "ref_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) User-specified RefId for the Resource."
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"disabled": false,
													"description": "The error codes associated with the response",
													"key": "x-cloud-error-codes",
													"value": "deployments.elasticsearch.password_reset_error"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
										},
										{
											"id": "c61e939f-ec8b-4ff6-9591-f7264fbb3851",
											"name": "* The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)\n* The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/deployments/:deployment_id/elasticsearch/:ref_id/_reset-password",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"deployments",
														":deployment_id",
														"elasticsearch",
														":ref_id",
														"_reset-password"
													],
													"variable": [
														{
															"key": "deployment_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) Identifier for the Deployment."
														},
														{
															"key": "ref_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) User-specified RefId for the Resource."
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"disabled": false,
													"description": "The error codes associated with the response",
													"key": "x-cloud-error-codes",
													"value": "deployments.deployment_resource_not_found"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
										},
										{
											"id": "d9b64476-c555-4a27-b92b-0dd200473799",
											"name": "Elevated permissions are required. (code: `root.unauthorized.rbac.elevated_permissions_required`)",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/deployments/:deployment_id/elasticsearch/:ref_id/_reset-password",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"deployments",
														":deployment_id",
														"elasticsearch",
														":ref_id",
														"_reset-password"
													],
													"variable": [
														{
															"key": "deployment_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) Identifier for the Deployment."
														},
														{
															"key": "ref_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) User-specified RefId for the Resource."
														}
													]
												}
											},
											"status": "Retry With",
											"code": 449,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"disabled": false,
													"description": "The error codes associated with the response",
													"key": "x-cloud-error-codes",
													"value": "root.unauthorized.rbac.elevated_permissions_required"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Migrate Elasticsearch and associated Kibana resources to enable CCR",
									"_postman_id": "cf7c479a-9c8c-4022-b2fc-e6644c7a0429",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/deployments/:deployment_id/elasticsearch/:ref_id/_enable-ccr?validate_only=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"deployments",
												":deployment_id",
												"elasticsearch",
												":ref_id",
												"_enable-ccr"
											],
											"query": [
												{
													"key": "validate_only",
													"value": "false",
													"description": "When `true`, will not enable CCR but returns warnings if any elements may lose availability during CCR enablement"
												}
											],
											"variable": [
												{
													"id": "99222997-a008-43b2-b627-5fc6c5237f5d",
													"key": "deployment_id",
													"value": "cupidatat adipisicing",
													"description": "(Required) Identifier for the Deployment.",
													"type": "string"
												},
												{
													"id": "392d934a-4933-43b7-8368-657b24554a7e",
													"key": "ref_id",
													"value": "cupidatat adipisicing",
													"description": "(Required) User-specified RefId for the Resource.",
													"type": "string"
												}
											]
										},
										"description": "Migrates the specified Elasticsearch resource and its associated Kibana to enable CCR (if supported)."
									},
									"response": [
										{
											"id": "35286291-d7d1-48ad-91bf-dbf5b7e02cec",
											"name": "Standard response",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/deployments/:deployment_id/elasticsearch/:ref_id/_enable-ccr?validate_only=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"deployments",
														":deployment_id",
														"elasticsearch",
														":ref_id",
														"_enable-ccr"
													],
													"query": [
														{
															"key": "validate_only",
															"value": "false"
														}
													],
													"variable": [
														{
															"key": "deployment_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) Identifier for the Deployment."
														},
														{
															"key": "ref_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) User-specified RefId for the Resource."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"warnings\": [\n    {\n      \"code\": \"ex anim o\",\n      \"message\": \"in sit sint ut dese\"\n    },\n    {\n      \"code\": \"nulla sit\",\n      \"message\": \"cupidatat elit adipis\"\n    }\n  ]\n}"
										},
										{
											"id": "72a4e332-dd16-4bda-b121-5a45fcb1c21e",
											"name": "* The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)\n* The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/deployments/:deployment_id/elasticsearch/:ref_id/_enable-ccr?validate_only=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"deployments",
														":deployment_id",
														"elasticsearch",
														":ref_id",
														"_enable-ccr"
													],
													"query": [
														{
															"key": "validate_only",
															"value": "false"
														}
													],
													"variable": [
														{
															"key": "deployment_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) Identifier for the Deployment."
														},
														{
															"key": "ref_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) User-specified RefId for the Resource."
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"disabled": false,
													"description": "The error codes associated with the response",
													"key": "x-cloud-error-codes",
													"value": "deployments.deployment_resource_not_found"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
										},
										{
											"id": "fee3ae67-872c-4a3a-8228-85527e455b02",
											"name": "Elevated permissions are required. (code: `root.unauthorized.rbac.elevated_permissions_required`)",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/deployments/:deployment_id/elasticsearch/:ref_id/_enable-ccr?validate_only=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"deployments",
														":deployment_id",
														"elasticsearch",
														":ref_id",
														"_enable-ccr"
													],
													"query": [
														{
															"key": "validate_only",
															"value": "false"
														}
													],
													"variable": [
														{
															"key": "deployment_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) Identifier for the Deployment."
														},
														{
															"key": "ref_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) User-specified RefId for the Resource."
														}
													]
												}
											},
											"status": "Retry With",
											"code": 449,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"disabled": false,
													"description": "The error codes associated with the response",
													"key": "x-cloud-error-codes",
													"value": "root.unauthorized.rbac.elevated_permissions_required"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Get eligible remote clusters",
									"_postman_id": "084497be-d6f4-45c8-9952-2a556eedd5d0",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"query\": {\n    \"match_all\": {},\n    \"exists\": {\n      \"field\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"term\": {\n      \"adipisicing6\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"reprehenderit3\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"nested\": {\n      \"path\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"query\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"score_mode\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"prefix\": {\n      \"aliquip_be7\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"bool\": {\n      \"filter\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"minimum_should_match\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"should\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"must_not\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"must\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"query_string\": {\n      \"query\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"default_operator\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"default_field\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"allow_leading_wildcard\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"analyzer\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"range\": {\n      \"laboris_4\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"match_none\": {},\n    \"match\": {\n      \"proident_20\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"Excepteur_e6\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"from\": 17044529,\n  \"size\": -92893606\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/deployments/:deployment_id/elasticsearch/:ref_id/eligible-remote-clusters",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"deployments",
												":deployment_id",
												"elasticsearch",
												":ref_id",
												"eligible-remote-clusters"
											],
											"variable": [
												{
													"id": "f8bb7a20-f7fd-4f47-a178-14f8bd0406a8",
													"key": "deployment_id",
													"value": "cupidatat adipisicing",
													"description": "(Required) Identifier for the Deployment.",
													"type": "string"
												},
												{
													"id": "1abe56bb-550c-403b-84b5-a280ed993d54",
													"key": "ref_id",
													"value": "cupidatat adipisicing",
													"description": "(Required) User-specified RefId for the Resource.",
													"type": "string"
												}
											]
										},
										"description": "Returns the list of deployments which contain eligible remote clusters for the elasticsearch resource."
									},
									"response": [
										{
											"id": "187997ae-8ece-4469-afbf-a29a82eaaae4",
											"name": "The resource specified doesn't yet have a valid version for the current plan or the pending plan. (code: `deployments.resource_does_not_have_a_valid_version`)",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/deployments/:deployment_id/elasticsearch/:ref_id/eligible-remote-clusters",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"deployments",
														":deployment_id",
														"elasticsearch",
														":ref_id",
														"eligible-remote-clusters"
													],
													"variable": [
														{
															"key": "deployment_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) Identifier for the Deployment."
														},
														{
															"key": "ref_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) User-specified RefId for the Resource."
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"disabled": false,
													"description": "The error codes associated with the response",
													"key": "x-cloud-error-codes",
													"value": "deployments.resource_does_not_have_a_valid_version"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
										},
										{
											"id": "e871fcb9-83c3-4006-a6a5-5270b43bd368",
											"name": "List of deployments which contains eligible remote clusters for the resource",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/deployments/:deployment_id/elasticsearch/:ref_id/eligible-remote-clusters",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"deployments",
														":deployment_id",
														"elasticsearch",
														":ref_id",
														"eligible-remote-clusters"
													],
													"variable": [
														{
															"key": "deployment_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) Identifier for the Deployment."
														},
														{
															"key": "ref_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) User-specified RefId for the Resource."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"deployments\": [\n    {\n      \"healthy\": false,\n      \"id\": \"esse sint\",\n      \"name\": \"dolor do ex Lore\",\n      \"resources\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"settings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"alias\": \"ullamco culpa\",\n      \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"healthy\": false,\n      \"id\": \"exercitation minim nulla\",\n      \"name\": \"velit do\",\n      \"resources\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"settings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"alias\": \"ad labore minim commodo Ut\",\n      \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"return_count\": 48827681,\n  \"match_count\": 95772866\n}"
										},
										{
											"id": "f76e2f70-9883-4b80-82d2-c003b5832404",
											"name": "* The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)\n* The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/deployments/:deployment_id/elasticsearch/:ref_id/eligible-remote-clusters",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"deployments",
														":deployment_id",
														"elasticsearch",
														":ref_id",
														"eligible-remote-clusters"
													],
													"variable": [
														{
															"key": "deployment_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) Identifier for the Deployment."
														},
														{
															"key": "ref_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) User-specified RefId for the Resource."
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"disabled": false,
													"description": "The error codes associated with the response",
													"key": "x-cloud-error-codes",
													"value": "deployments.deployment_resource_not_found"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Migrate Elasticsearch resource to use ILM",
									"_postman_id": "be73bc02-aabf-4842-9afd-186da4f4c5ad",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"index_patterns\": [\n    {\n      \"index_pattern\": \"qui sed\",\n      \"policy_name\": \"occaecat\",\n      \"node_attributes\": {\n        \"consectetur8\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"Loremffa\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    },\n    {\n      \"index_pattern\": \"id cillum et\",\n      \"policy_name\": \"amet sint fugiat ullamco\",\n      \"node_attributes\": {\n        \"ipsum196\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"Duis_84\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"labore_39\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/deployments/:deployment_id/elasticsearch/:ref_id/_enable-ilm?validate_only=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"deployments",
												":deployment_id",
												"elasticsearch",
												":ref_id",
												"_enable-ilm"
											],
											"query": [
												{
													"key": "validate_only",
													"value": "false",
													"description": "When `true`, does not enable ILM but returns warnings if any applications may lose availability during ILM migration."
												}
											],
											"variable": [
												{
													"id": "090d0c0b-44ec-412e-89a7-4f99e730778e",
													"key": "deployment_id",
													"value": "cupidatat adipisicing",
													"description": "(Required) Identifier for the Deployment.",
													"type": "string"
												},
												{
													"id": "5238248e-e563-4488-b346-f283c53ced3c",
													"key": "ref_id",
													"value": "cupidatat adipisicing",
													"description": "(Required) User-specified RefId for the Resource.",
													"type": "string"
												}
											]
										},
										"description": "Migrates the specified Elasticsearch resource to use ILM."
									},
									"response": [
										{
											"id": "1981b2c8-4967-4fab-bb5f-ad0964d02075",
											"name": "We have failed you. (code: `deployments.deployment_resource_no_longer_exists`)",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"index_patterns\": [\n    {\n      \"index_pattern\": \"in magna culpa amet\",\n      \"policy_name\": \"in dolor sit anim\",\n      \"node_attributes\": {\n        \"ut_e66\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"magnac37\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"ullamco53e\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"occaecat_de0\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    },\n    {\n      \"index_pattern\": \"id culpa consequat\",\n      \"policy_name\": \"officia aute consequat ut Duis\",\n      \"node_attributes\": {\n        \"in_ca9\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"minim_b_6\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"Duis_ea9\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/deployments/:deployment_id/elasticsearch/:ref_id/_enable-ilm?validate_only=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"deployments",
														":deployment_id",
														"elasticsearch",
														":ref_id",
														"_enable-ilm"
													],
													"query": [
														{
															"key": "validate_only",
															"value": "false"
														}
													],
													"variable": [
														{
															"key": "deployment_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) Identifier for the Deployment."
														},
														{
															"key": "ref_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) User-specified RefId for the Resource."
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"disabled": false,
													"description": "The error codes associated with the response",
													"key": "x-cloud-error-codes",
													"value": "deployments.deployment_resource_no_longer_exists"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
										},
										{
											"id": "391a0472-ac96-4cbd-96ba-6b5a9a02a335",
											"name": "Elevated permissions are required. (code: `root.unauthorized.rbac.elevated_permissions_required`)",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"index_patterns\": [\n    {\n      \"index_pattern\": \"in magna culpa amet\",\n      \"policy_name\": \"in dolor sit anim\",\n      \"node_attributes\": {\n        \"ut_e66\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"magnac37\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"ullamco53e\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"occaecat_de0\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    },\n    {\n      \"index_pattern\": \"id culpa consequat\",\n      \"policy_name\": \"officia aute consequat ut Duis\",\n      \"node_attributes\": {\n        \"in_ca9\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"minim_b_6\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"Duis_ea9\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/deployments/:deployment_id/elasticsearch/:ref_id/_enable-ilm?validate_only=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"deployments",
														":deployment_id",
														"elasticsearch",
														":ref_id",
														"_enable-ilm"
													],
													"query": [
														{
															"key": "validate_only",
															"value": "false"
														}
													],
													"variable": [
														{
															"key": "deployment_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) Identifier for the Deployment."
														},
														{
															"key": "ref_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) User-specified RefId for the Resource."
														}
													]
												}
											},
											"status": "Retry With",
											"code": 449,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"disabled": false,
													"description": "The error codes associated with the response",
													"key": "x-cloud-error-codes",
													"value": "root.unauthorized.rbac.elevated_permissions_required"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
										},
										{
											"id": "b6d87d01-ee63-4d93-964e-6ec0b8c032a4",
											"name": "* The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)\n* The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"index_patterns\": [\n    {\n      \"index_pattern\": \"in magna culpa amet\",\n      \"policy_name\": \"in dolor sit anim\",\n      \"node_attributes\": {\n        \"ut_e66\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"magnac37\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"ullamco53e\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"occaecat_de0\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    },\n    {\n      \"index_pattern\": \"id culpa consequat\",\n      \"policy_name\": \"officia aute consequat ut Duis\",\n      \"node_attributes\": {\n        \"in_ca9\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"minim_b_6\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"Duis_ea9\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/deployments/:deployment_id/elasticsearch/:ref_id/_enable-ilm?validate_only=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"deployments",
														":deployment_id",
														"elasticsearch",
														":ref_id",
														"_enable-ilm"
													],
													"query": [
														{
															"key": "validate_only",
															"value": "false"
														}
													],
													"variable": [
														{
															"key": "deployment_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) Identifier for the Deployment."
														},
														{
															"key": "ref_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) User-specified RefId for the Resource."
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"disabled": false,
													"description": "The error codes associated with the response",
													"key": "x-cloud-error-codes",
													"value": "deployments.deployment_resource_not_found"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
										},
										{
											"id": "dddb7401-aa11-4ef7-816d-3497c8f92782",
											"name": "Standard response",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"index_patterns\": [\n    {\n      \"index_pattern\": \"in magna culpa amet\",\n      \"policy_name\": \"in dolor sit anim\",\n      \"node_attributes\": {\n        \"ut_e66\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"magnac37\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"ullamco53e\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"occaecat_de0\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    },\n    {\n      \"index_pattern\": \"id culpa consequat\",\n      \"policy_name\": \"officia aute consequat ut Duis\",\n      \"node_attributes\": {\n        \"in_ca9\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"minim_b_6\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"Duis_ea9\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/deployments/:deployment_id/elasticsearch/:ref_id/_enable-ilm?validate_only=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"deployments",
														":deployment_id",
														"elasticsearch",
														":ref_id",
														"_enable-ilm"
													],
													"query": [
														{
															"key": "validate_only",
															"value": "false"
														}
													],
													"variable": [
														{
															"key": "deployment_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) Identifier for the Deployment."
														},
														{
															"key": "ref_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) User-specified RefId for the Resource."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"warnings\": [\n    {\n      \"code\": \"ex anim o\",\n      \"message\": \"in sit sint ut dese\"\n    },\n    {\n      \"code\": \"nulla sit\",\n      \"message\": \"cupidatat elit adipis\"\n    }\n  ]\n}"
										}
									]
								}
							],
							"_postman_id": "7cf10215-e2d0-4c47-99d2-6a25200dfc7f",
							"_postman_isSubFolder": true
						},
						{
							"name": "{resource kind}/{ref id}",
							"item": [
								{
									"name": "instances",
									"item": [
										{
											"name": "{instance ids}",
											"item": [
												{
													"name": "maintenance-mode",
													"item": [
														{
															"name": "Start maintenance mode",
															"_postman_id": "04d85115-9c99-43df-8fe9-d318f38c5a3e",
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/deployments/:deployment_id/:resource_kind/:ref_id/instances/:instance_ids/maintenance-mode/_start?ignore_missing=false",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"deployments",
																		":deployment_id",
																		":resource_kind",
																		":ref_id",
																		"instances",
																		":instance_ids",
																		"maintenance-mode",
																		"_start"
																	],
																	"query": [
																		{
																			"key": "ignore_missing",
																			"value": "false",
																			"description": "If true and the instance does not exist then quietly proceed to the next instance, otherwise treated as an error."
																		}
																	],
																	"variable": [
																		{
																			"id": "b94c3993-4374-48e0-aee7-c1483bc40e44",
																			"key": "deployment_id",
																			"value": "cupidatat adipisicing",
																			"description": "(Required) Identifier for the Deployment.",
																			"type": "string"
																		},
																		{
																			"id": "74e57a2e-b5f9-424f-99a9-ce1d107c1057",
																			"key": "resource_kind",
																			"value": "cupidatat adipisicing",
																			"description": "(Required) The kind of resource (one of elasticsearch, kibana, apm, or integrations_server).",
																			"type": "string"
																		},
																		{
																			"id": "d71e50c7-7cdd-4502-b8b8-b6e1427118cf",
																			"key": "ref_id",
																			"value": "cupidatat adipisicing",
																			"description": "(Required) User-specified RefId for the Resource.",
																			"type": "string"
																		},
																		{
																			"id": "da52aa78-68f8-4fba-8177-595e4a789b0d",
																			"key": "instance_ids",
																			"value": "dolor sit al,aute minim",
																			"description": "(Required) A comma-separated list of instance identifiers.",
																			"type": "string"
																		}
																	]
																},
																"description": "Starts maintenance mode of instances belonging to a Deployment Resource."
															},
															"response": [
																{
																	"id": "70093ef6-3789-40dc-afe2-0bbda17f4885",
																	"name": "* The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)\n* The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)\n* One or more instances of the given resour",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/deployments/:deployment_id/:resource_kind/:ref_id/instances/:instance_ids/maintenance-mode/_start?ignore_missing=false",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"deployments",
																				":deployment_id",
																				":resource_kind",
																				":ref_id",
																				"instances",
																				":instance_ids",
																				"maintenance-mode",
																				"_start"
																			],
																			"query": [
																				{
																					"key": "ignore_missing",
																					"value": "false"
																				}
																			],
																			"variable": [
																				{
																					"key": "deployment_id",
																					"value": "cupidatat adipisicing",
																					"description": "(Required) Identifier for the Deployment."
																				},
																				{
																					"key": "resource_kind",
																					"value": "cupidatat adipisicing",
																					"description": "(Required) The kind of resource (one of elasticsearch, kibana, apm, or integrations_server)."
																				},
																				{
																					"key": "ref_id",
																					"value": "cupidatat adipisicing",
																					"description": "(Required) User-specified RefId for the Resource."
																				},
																				{
																					"key": "instance_ids",
																					"value": "dolor sit al,aute minim",
																					"description": "(Required) A comma-separated list of instance identifiers."
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"disabled": false,
																			"description": "The error codes associated with the response",
																			"key": "x-cloud-error-codes",
																			"value": "deployments.instances_missing_on_update_error"
																		},
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"responseTime": null,
																	"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
																},
																{
																	"id": "75b57bd1-ec4a-43f9-831d-0f5b7cf2f846",
																	"name": "The start maintenance mode command was prohibited for the given Resource. (code: `deployments.instance_update_prohibited_error`)",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/deployments/:deployment_id/:resource_kind/:ref_id/instances/:instance_ids/maintenance-mode/_start?ignore_missing=false",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"deployments",
																				":deployment_id",
																				":resource_kind",
																				":ref_id",
																				"instances",
																				":instance_ids",
																				"maintenance-mode",
																				"_start"
																			],
																			"query": [
																				{
																					"key": "ignore_missing",
																					"value": "false"
																				}
																			],
																			"variable": [
																				{
																					"key": "deployment_id",
																					"value": "cupidatat adipisicing",
																					"description": "(Required) Identifier for the Deployment."
																				},
																				{
																					"key": "resource_kind",
																					"value": "cupidatat adipisicing",
																					"description": "(Required) The kind of resource (one of elasticsearch, kibana, apm, or integrations_server)."
																				},
																				{
																					"key": "ref_id",
																					"value": "cupidatat adipisicing",
																					"description": "(Required) User-specified RefId for the Resource."
																				},
																				{
																					"key": "instance_ids",
																					"value": "dolor sit al,aute minim",
																					"description": "(Required) A comma-separated list of instance identifiers."
																				}
																			]
																		}
																	},
																	"status": "Forbidden",
																	"code": 403,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"disabled": false,
																			"description": "The error codes associated with the response",
																			"key": "x-cloud-error-codes",
																			"value": "deployments.instance_update_prohibited_error"
																		},
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"responseTime": null,
																	"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
																},
																{
																	"id": "a217094c-74cc-459c-9c87-f70495efd089",
																	"name": "A Resource that was previously stored no longer exists. (code: `deployments.deployment_resource_no_longer_exists`)",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/deployments/:deployment_id/:resource_kind/:ref_id/instances/:instance_ids/maintenance-mode/_start?ignore_missing=false",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"deployments",
																				":deployment_id",
																				":resource_kind",
																				":ref_id",
																				"instances",
																				":instance_ids",
																				"maintenance-mode",
																				"_start"
																			],
																			"query": [
																				{
																					"key": "ignore_missing",
																					"value": "false"
																				}
																			],
																			"variable": [
																				{
																					"key": "deployment_id",
																					"value": "cupidatat adipisicing",
																					"description": "(Required) Identifier for the Deployment."
																				},
																				{
																					"key": "resource_kind",
																					"value": "cupidatat adipisicing",
																					"description": "(Required) The kind of resource (one of elasticsearch, kibana, apm, or integrations_server)."
																				},
																				{
																					"key": "ref_id",
																					"value": "cupidatat adipisicing",
																					"description": "(Required) User-specified RefId for the Resource."
																				},
																				{
																					"key": "instance_ids",
																					"value": "dolor sit al,aute minim",
																					"description": "(Required) A comma-separated list of instance identifiers."
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"disabled": false,
																			"description": "The error codes associated with the response",
																			"key": "x-cloud-error-codes",
																			"value": "deployments.deployment_resource_no_longer_exists"
																		},
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"responseTime": null,
																	"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
																},
																{
																	"id": "e868a766-8bee-4331-9200-5897c0122b28",
																	"name": "Elevated permissions are required. (code: `root.unauthorized.rbac.elevated_permissions_required`)",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/deployments/:deployment_id/:resource_kind/:ref_id/instances/:instance_ids/maintenance-mode/_start?ignore_missing=false",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"deployments",
																				":deployment_id",
																				":resource_kind",
																				":ref_id",
																				"instances",
																				":instance_ids",
																				"maintenance-mode",
																				"_start"
																			],
																			"query": [
																				{
																					"key": "ignore_missing",
																					"value": "false"
																				}
																			],
																			"variable": [
																				{
																					"key": "deployment_id",
																					"value": "cupidatat adipisicing",
																					"description": "(Required) Identifier for the Deployment."
																				},
																				{
																					"key": "resource_kind",
																					"value": "cupidatat adipisicing",
																					"description": "(Required) The kind of resource (one of elasticsearch, kibana, apm, or integrations_server)."
																				},
																				{
																					"key": "ref_id",
																					"value": "cupidatat adipisicing",
																					"description": "(Required) User-specified RefId for the Resource."
																				},
																				{
																					"key": "instance_ids",
																					"value": "dolor sit al,aute minim",
																					"description": "(Required) A comma-separated list of instance identifiers."
																				}
																			]
																		}
																	},
																	"status": "Retry With",
																	"code": 449,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"disabled": false,
																			"description": "The error codes associated with the response",
																			"key": "x-cloud-error-codes",
																			"value": "root.unauthorized.rbac.elevated_permissions_required"
																		},
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"responseTime": null,
																	"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
																},
																{
																	"id": "e968da05-75b8-4933-99bd-dc05acec999b",
																	"name": "The start maintenance command was issued successfully.",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/deployments/:deployment_id/:resource_kind/:ref_id/instances/:instance_ids/maintenance-mode/_start?ignore_missing=false",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"deployments",
																				":deployment_id",
																				":resource_kind",
																				":ref_id",
																				"instances",
																				":instance_ids",
																				"maintenance-mode",
																				"_start"
																			],
																			"query": [
																				{
																					"key": "ignore_missing",
																					"value": "false"
																				}
																			],
																			"variable": [
																				{
																					"key": "deployment_id",
																					"value": "cupidatat adipisicing",
																					"description": "(Required) Identifier for the Deployment."
																				},
																				{
																					"key": "resource_kind",
																					"value": "cupidatat adipisicing",
																					"description": "(Required) The kind of resource (one of elasticsearch, kibana, apm, or integrations_server)."
																				},
																				{
																					"key": "ref_id",
																					"value": "cupidatat adipisicing",
																					"description": "(Required) User-specified RefId for the Resource."
																				},
																				{
																					"key": "instance_ids",
																					"value": "dolor sit al,aute minim",
																					"description": "(Required) A comma-separated list of instance identifiers."
																				}
																			]
																		}
																	},
																	"status": "Accepted",
																	"code": 202,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"responseTime": null,
																	"body": "{\n  \"warnings\": [\n    {\n      \"code\": \"ex anim o\",\n      \"message\": \"in sit sint ut dese\"\n    },\n    {\n      \"code\": \"nulla sit\",\n      \"message\": \"cupidatat elit adipis\"\n    }\n  ]\n}"
																}
															]
														},
														{
															"name": "Stop maintenance mode",
															"_postman_id": "7a66c026-53d1-41f4-93a6-1abcc0e98593",
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/deployments/:deployment_id/:resource_kind/:ref_id/instances/:instance_ids/maintenance-mode/_stop?ignore_missing=false",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"deployments",
																		":deployment_id",
																		":resource_kind",
																		":ref_id",
																		"instances",
																		":instance_ids",
																		"maintenance-mode",
																		"_stop"
																	],
																	"query": [
																		{
																			"key": "ignore_missing",
																			"value": "false",
																			"description": "If true and the instance does not exist then quietly proceed to the next instance, otherwise treated as an error."
																		}
																	],
																	"variable": [
																		{
																			"id": "3e4ba3a4-d570-4086-b506-ba6ff2e12e86",
																			"key": "deployment_id",
																			"value": "cupidatat adipisicing",
																			"description": "(Required) Identifier for the Deployment.",
																			"type": "string"
																		},
																		{
																			"id": "ea9b75ee-1a61-4650-be70-a94cf36e72c2",
																			"key": "resource_kind",
																			"value": "cupidatat adipisicing",
																			"description": "(Required) The kind of resource (one of elasticsearch, kibana, apm, or integrations_server).",
																			"type": "string"
																		},
																		{
																			"id": "9eca0d01-66a5-4e1b-9ab9-1df6a8814974",
																			"key": "ref_id",
																			"value": "cupidatat adipisicing",
																			"description": "(Required) User-specified RefId for the Resource.",
																			"type": "string"
																		},
																		{
																			"id": "4f32fd20-bd6c-46fe-ac8d-58e698310865",
																			"key": "instance_ids",
																			"value": "dolor sit al,aute minim",
																			"description": "(Required) A comma-separated list of instance identifiers.",
																			"type": "string"
																		}
																	]
																},
																"description": "Stops maintenance mode of instances belonging to a Resource."
															},
															"response": [
																{
																	"id": "61853c80-7b15-4647-a83e-17086c146094",
																	"name": "The stop maintenance mode command was prohibited for the given Resource. (code: `deployments.instance_update_prohibited_error`)",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/deployments/:deployment_id/:resource_kind/:ref_id/instances/:instance_ids/maintenance-mode/_stop?ignore_missing=false",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"deployments",
																				":deployment_id",
																				":resource_kind",
																				":ref_id",
																				"instances",
																				":instance_ids",
																				"maintenance-mode",
																				"_stop"
																			],
																			"query": [
																				{
																					"key": "ignore_missing",
																					"value": "false"
																				}
																			],
																			"variable": [
																				{
																					"key": "deployment_id",
																					"value": "cupidatat adipisicing",
																					"description": "(Required) Identifier for the Deployment."
																				},
																				{
																					"key": "resource_kind",
																					"value": "cupidatat adipisicing",
																					"description": "(Required) The kind of resource (one of elasticsearch, kibana, apm, or integrations_server)."
																				},
																				{
																					"key": "ref_id",
																					"value": "cupidatat adipisicing",
																					"description": "(Required) User-specified RefId for the Resource."
																				},
																				{
																					"key": "instance_ids",
																					"value": "dolor sit al,aute minim",
																					"description": "(Required) A comma-separated list of instance identifiers."
																				}
																			]
																		}
																	},
																	"status": "Forbidden",
																	"code": 403,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"disabled": false,
																			"description": "The error codes associated with the response",
																			"key": "x-cloud-error-codes",
																			"value": "deployments.instance_update_prohibited_error"
																		},
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"responseTime": null,
																	"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
																},
																{
																	"id": "95f563fa-3ade-4e54-8091-6415b4ea81ed",
																	"name": "* The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)\n* The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)\n* One or more instances of the given resour",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/deployments/:deployment_id/:resource_kind/:ref_id/instances/:instance_ids/maintenance-mode/_stop?ignore_missing=false",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"deployments",
																				":deployment_id",
																				":resource_kind",
																				":ref_id",
																				"instances",
																				":instance_ids",
																				"maintenance-mode",
																				"_stop"
																			],
																			"query": [
																				{
																					"key": "ignore_missing",
																					"value": "false"
																				}
																			],
																			"variable": [
																				{
																					"key": "deployment_id",
																					"value": "cupidatat adipisicing",
																					"description": "(Required) Identifier for the Deployment."
																				},
																				{
																					"key": "resource_kind",
																					"value": "cupidatat adipisicing",
																					"description": "(Required) The kind of resource (one of elasticsearch, kibana, apm, or integrations_server)."
																				},
																				{
																					"key": "ref_id",
																					"value": "cupidatat adipisicing",
																					"description": "(Required) User-specified RefId for the Resource."
																				},
																				{
																					"key": "instance_ids",
																					"value": "dolor sit al,aute minim",
																					"description": "(Required) A comma-separated list of instance identifiers."
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"disabled": false,
																			"description": "The error codes associated with the response",
																			"key": "x-cloud-error-codes",
																			"value": "deployments.instances_missing_on_update_error"
																		},
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"responseTime": null,
																	"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
																},
																{
																	"id": "a7278b8e-baff-4f68-a3da-b7e8f0dce9c7",
																	"name": "A Resource that was previously stored no longer exists. (code: `deployments.deployment_resource_no_longer_exists`)",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/deployments/:deployment_id/:resource_kind/:ref_id/instances/:instance_ids/maintenance-mode/_stop?ignore_missing=false",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"deployments",
																				":deployment_id",
																				":resource_kind",
																				":ref_id",
																				"instances",
																				":instance_ids",
																				"maintenance-mode",
																				"_stop"
																			],
																			"query": [
																				{
																					"key": "ignore_missing",
																					"value": "false"
																				}
																			],
																			"variable": [
																				{
																					"key": "deployment_id",
																					"value": "cupidatat adipisicing",
																					"description": "(Required) Identifier for the Deployment."
																				},
																				{
																					"key": "resource_kind",
																					"value": "cupidatat adipisicing",
																					"description": "(Required) The kind of resource (one of elasticsearch, kibana, apm, or integrations_server)."
																				},
																				{
																					"key": "ref_id",
																					"value": "cupidatat adipisicing",
																					"description": "(Required) User-specified RefId for the Resource."
																				},
																				{
																					"key": "instance_ids",
																					"value": "dolor sit al,aute minim",
																					"description": "(Required) A comma-separated list of instance identifiers."
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"disabled": false,
																			"description": "The error codes associated with the response",
																			"key": "x-cloud-error-codes",
																			"value": "deployments.deployment_resource_no_longer_exists"
																		},
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"responseTime": null,
																	"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
																},
																{
																	"id": "ca9ce302-dd88-42c8-8f32-926b3ec68708",
																	"name": "The stop maintenance mode command was issued successfully.",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/deployments/:deployment_id/:resource_kind/:ref_id/instances/:instance_ids/maintenance-mode/_stop?ignore_missing=false",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"deployments",
																				":deployment_id",
																				":resource_kind",
																				":ref_id",
																				"instances",
																				":instance_ids",
																				"maintenance-mode",
																				"_stop"
																			],
																			"query": [
																				{
																					"key": "ignore_missing",
																					"value": "false"
																				}
																			],
																			"variable": [
																				{
																					"key": "deployment_id",
																					"value": "cupidatat adipisicing",
																					"description": "(Required) Identifier for the Deployment."
																				},
																				{
																					"key": "resource_kind",
																					"value": "cupidatat adipisicing",
																					"description": "(Required) The kind of resource (one of elasticsearch, kibana, apm, or integrations_server)."
																				},
																				{
																					"key": "ref_id",
																					"value": "cupidatat adipisicing",
																					"description": "(Required) User-specified RefId for the Resource."
																				},
																				{
																					"key": "instance_ids",
																					"value": "dolor sit al,aute minim",
																					"description": "(Required) A comma-separated list of instance identifiers."
																				}
																			]
																		}
																	},
																	"status": "Accepted",
																	"code": 202,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"responseTime": null,
																	"body": "{\n  \"warnings\": [\n    {\n      \"code\": \"ex anim o\",\n      \"message\": \"in sit sint ut dese\"\n    },\n    {\n      \"code\": \"nulla sit\",\n      \"message\": \"cupidatat elit adipis\"\n    }\n  ]\n}"
																},
																{
																	"id": "eaff5f5c-f765-4e79-a8f9-4949e532952a",
																	"name": "Elevated permissions are required. (code: `root.unauthorized.rbac.elevated_permissions_required`)",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/deployments/:deployment_id/:resource_kind/:ref_id/instances/:instance_ids/maintenance-mode/_stop?ignore_missing=false",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"deployments",
																				":deployment_id",
																				":resource_kind",
																				":ref_id",
																				"instances",
																				":instance_ids",
																				"maintenance-mode",
																				"_stop"
																			],
																			"query": [
																				{
																					"key": "ignore_missing",
																					"value": "false"
																				}
																			],
																			"variable": [
																				{
																					"key": "deployment_id",
																					"value": "cupidatat adipisicing",
																					"description": "(Required) Identifier for the Deployment."
																				},
																				{
																					"key": "resource_kind",
																					"value": "cupidatat adipisicing",
																					"description": "(Required) The kind of resource (one of elasticsearch, kibana, apm, or integrations_server)."
																				},
																				{
																					"key": "ref_id",
																					"value": "cupidatat adipisicing",
																					"description": "(Required) User-specified RefId for the Resource."
																				},
																				{
																					"key": "instance_ids",
																					"value": "dolor sit al,aute minim",
																					"description": "(Required) A comma-separated list of instance identifiers."
																				}
																			]
																		}
																	},
																	"status": "Retry With",
																	"code": 449,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"disabled": false,
																			"description": "The error codes associated with the response",
																			"key": "x-cloud-error-codes",
																			"value": "root.unauthorized.rbac.elevated_permissions_required"
																		},
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"responseTime": null,
																	"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
																}
															]
														}
													],
													"_postman_id": "ce8fc642-5efc-4772-adb3-048aed6e03b6",
													"_postman_isSubFolder": true
												},
												{
													"name": "Stop instances",
													"_postman_id": "e0cd4153-8f7e-459f-afc9-68f07be7ce1a",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/deployments/:deployment_id/:resource_kind/:ref_id/instances/:instance_ids/_stop?ignore_missing=false",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"deployments",
																":deployment_id",
																":resource_kind",
																":ref_id",
																"instances",
																":instance_ids",
																"_stop"
															],
															"query": [
																{
																	"key": "ignore_missing",
																	"value": "false",
																	"description": "If true and the instance does not exist then quietly proceed to the next instance, otherwise treated as an error."
																}
															],
															"variable": [
																{
																	"id": "7c9f8651-2b0a-4da0-952f-f106d42f0857",
																	"key": "deployment_id",
																	"value": "cupidatat adipisicing",
																	"description": "(Required) Identifier for the Deployment.",
																	"type": "string"
																},
																{
																	"id": "0c332674-fd03-4eca-9b30-b1ad94d46f2b",
																	"key": "resource_kind",
																	"value": "cupidatat adipisicing",
																	"description": "(Required) The kind of resource (one of elasticsearch, kibana, apm, or integrations_server).",
																	"type": "string"
																},
																{
																	"id": "8b39c9c3-ffe4-4873-a689-7f1c84bec561",
																	"key": "ref_id",
																	"value": "cupidatat adipisicing",
																	"description": "(Required) User-specified RefId for the Resource.",
																	"type": "string"
																},
																{
																	"id": "29221e68-cc55-4d1f-b7cd-507ac7487ee3",
																	"key": "instance_ids",
																	"value": "dolor sit al,aute minim",
																	"description": "(Required) A comma-separated list of instance identifiers.",
																	"type": "string"
																}
															]
														},
														"description": "Stops instances belonging to a Deployment Resource."
													},
													"response": [
														{
															"id": "0a995e6c-b51f-4335-8def-9f80f7424e8a",
															"name": "* The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)\n* The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)\n* One or more instances of the given resour",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/deployments/:deployment_id/:resource_kind/:ref_id/instances/:instance_ids/_stop?ignore_missing=false",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"deployments",
																		":deployment_id",
																		":resource_kind",
																		":ref_id",
																		"instances",
																		":instance_ids",
																		"_stop"
																	],
																	"query": [
																		{
																			"key": "ignore_missing",
																			"value": "false"
																		}
																	],
																	"variable": [
																		{
																			"key": "deployment_id",
																			"value": "cupidatat adipisicing",
																			"description": "(Required) Identifier for the Deployment."
																		},
																		{
																			"key": "resource_kind",
																			"value": "cupidatat adipisicing",
																			"description": "(Required) The kind of resource (one of elasticsearch, kibana, apm, or integrations_server)."
																		},
																		{
																			"key": "ref_id",
																			"value": "cupidatat adipisicing",
																			"description": "(Required) User-specified RefId for the Resource."
																		},
																		{
																			"key": "instance_ids",
																			"value": "dolor sit al,aute minim",
																			"description": "(Required) A comma-separated list of instance identifiers."
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"disabled": false,
																	"description": "The error codes associated with the response",
																	"key": "x-cloud-error-codes",
																	"value": "deployments.instances_missing_on_update_error"
																},
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"responseTime": null,
															"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
														},
														{
															"id": "0b45cefa-8dc7-4a2b-aa12-d75ee7a9cb95",
															"name": "The stop command was issued successfully.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/deployments/:deployment_id/:resource_kind/:ref_id/instances/:instance_ids/_stop?ignore_missing=false",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"deployments",
																		":deployment_id",
																		":resource_kind",
																		":ref_id",
																		"instances",
																		":instance_ids",
																		"_stop"
																	],
																	"query": [
																		{
																			"key": "ignore_missing",
																			"value": "false"
																		}
																	],
																	"variable": [
																		{
																			"key": "deployment_id",
																			"value": "cupidatat adipisicing",
																			"description": "(Required) Identifier for the Deployment."
																		},
																		{
																			"key": "resource_kind",
																			"value": "cupidatat adipisicing",
																			"description": "(Required) The kind of resource (one of elasticsearch, kibana, apm, or integrations_server)."
																		},
																		{
																			"key": "ref_id",
																			"value": "cupidatat adipisicing",
																			"description": "(Required) User-specified RefId for the Resource."
																		},
																		{
																			"key": "instance_ids",
																			"value": "dolor sit al,aute minim",
																			"description": "(Required) A comma-separated list of instance identifiers."
																		}
																	]
																}
															},
															"status": "Accepted",
															"code": 202,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"responseTime": null,
															"body": "{\n  \"warnings\": [\n    {\n      \"code\": \"ex anim o\",\n      \"message\": \"in sit sint ut dese\"\n    },\n    {\n      \"code\": \"nulla sit\",\n      \"message\": \"cupidatat elit adipis\"\n    }\n  ]\n}"
														},
														{
															"id": "7996026c-66fd-4536-bbec-795e02c12966",
															"name": "A Resource that was previously stored no longer exists. (code: `deployments.deployment_resource_no_longer_exists`)",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/deployments/:deployment_id/:resource_kind/:ref_id/instances/:instance_ids/_stop?ignore_missing=false",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"deployments",
																		":deployment_id",
																		":resource_kind",
																		":ref_id",
																		"instances",
																		":instance_ids",
																		"_stop"
																	],
																	"query": [
																		{
																			"key": "ignore_missing",
																			"value": "false"
																		}
																	],
																	"variable": [
																		{
																			"key": "deployment_id",
																			"value": "cupidatat adipisicing",
																			"description": "(Required) Identifier for the Deployment."
																		},
																		{
																			"key": "resource_kind",
																			"value": "cupidatat adipisicing",
																			"description": "(Required) The kind of resource (one of elasticsearch, kibana, apm, or integrations_server)."
																		},
																		{
																			"key": "ref_id",
																			"value": "cupidatat adipisicing",
																			"description": "(Required) User-specified RefId for the Resource."
																		},
																		{
																			"key": "instance_ids",
																			"value": "dolor sit al,aute minim",
																			"description": "(Required) A comma-separated list of instance identifiers."
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"disabled": false,
																	"description": "The error codes associated with the response",
																	"key": "x-cloud-error-codes",
																	"value": "deployments.deployment_resource_no_longer_exists"
																},
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"responseTime": null,
															"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
														},
														{
															"id": "7c5236e8-ea1a-4a82-8dc9-0b2638e01835",
															"name": "The start maintenance mode command was prohibited for the given Resource. (code: `deployments.instance_update_prohibited_error`)",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/deployments/:deployment_id/:resource_kind/:ref_id/instances/:instance_ids/_stop?ignore_missing=false",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"deployments",
																		":deployment_id",
																		":resource_kind",
																		":ref_id",
																		"instances",
																		":instance_ids",
																		"_stop"
																	],
																	"query": [
																		{
																			"key": "ignore_missing",
																			"value": "false"
																		}
																	],
																	"variable": [
																		{
																			"key": "deployment_id",
																			"value": "cupidatat adipisicing",
																			"description": "(Required) Identifier for the Deployment."
																		},
																		{
																			"key": "resource_kind",
																			"value": "cupidatat adipisicing",
																			"description": "(Required) The kind of resource (one of elasticsearch, kibana, apm, or integrations_server)."
																		},
																		{
																			"key": "ref_id",
																			"value": "cupidatat adipisicing",
																			"description": "(Required) User-specified RefId for the Resource."
																		},
																		{
																			"key": "instance_ids",
																			"value": "dolor sit al,aute minim",
																			"description": "(Required) A comma-separated list of instance identifiers."
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"disabled": false,
																	"description": "The error codes associated with the response",
																	"key": "x-cloud-error-codes",
																	"value": "deployments.instance_update_prohibited_error"
																},
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"responseTime": null,
															"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
														},
														{
															"id": "7fac02ab-e8ac-46e5-8c7f-8424423c3fe7",
															"name": "Elevated permissions are required. (code: `root.unauthorized.rbac.elevated_permissions_required`)",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/deployments/:deployment_id/:resource_kind/:ref_id/instances/:instance_ids/_stop?ignore_missing=false",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"deployments",
																		":deployment_id",
																		":resource_kind",
																		":ref_id",
																		"instances",
																		":instance_ids",
																		"_stop"
																	],
																	"query": [
																		{
																			"key": "ignore_missing",
																			"value": "false"
																		}
																	],
																	"variable": [
																		{
																			"key": "deployment_id",
																			"value": "cupidatat adipisicing",
																			"description": "(Required) Identifier for the Deployment."
																		},
																		{
																			"key": "resource_kind",
																			"value": "cupidatat adipisicing",
																			"description": "(Required) The kind of resource (one of elasticsearch, kibana, apm, or integrations_server)."
																		},
																		{
																			"key": "ref_id",
																			"value": "cupidatat adipisicing",
																			"description": "(Required) User-specified RefId for the Resource."
																		},
																		{
																			"key": "instance_ids",
																			"value": "dolor sit al,aute minim",
																			"description": "(Required) A comma-separated list of instance identifiers."
																		}
																	]
																}
															},
															"status": "Retry With",
															"code": 449,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"disabled": false,
																	"description": "The error codes associated with the response",
																	"key": "x-cloud-error-codes",
																	"value": "root.unauthorized.rbac.elevated_permissions_required"
																},
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"responseTime": null,
															"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
														}
													]
												},
												{
													"name": "Start instances",
													"_postman_id": "8ec06550-9727-47ed-8dc5-65aabb6e4f06",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/deployments/:deployment_id/:resource_kind/:ref_id/instances/:instance_ids/_start?ignore_missing=false",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"deployments",
																":deployment_id",
																":resource_kind",
																":ref_id",
																"instances",
																":instance_ids",
																"_start"
															],
															"query": [
																{
																	"key": "ignore_missing",
																	"value": "false",
																	"description": "If true and the instance does not exist then quietly proceed to the next instance, otherwise treated as an error"
																}
															],
															"variable": [
																{
																	"id": "8411aadb-8f34-4f67-8e0a-6f387f1fcf53",
																	"key": "deployment_id",
																	"value": "cupidatat adipisicing",
																	"description": "(Required) Identifier for the Deployment.",
																	"type": "string"
																},
																{
																	"id": "5917f4d3-d65f-4b68-a055-b5fdef56fcf9",
																	"key": "resource_kind",
																	"value": "cupidatat adipisicing",
																	"description": "(Required) The kind of resource (one of elasticsearch, kibana, apm, or integrations_server).",
																	"type": "string"
																},
																{
																	"id": "6233694f-4aca-44db-80ce-c56eba821f6c",
																	"key": "ref_id",
																	"value": "cupidatat adipisicing",
																	"description": "(Required) User-specified RefId for the Resource.",
																	"type": "string"
																},
																{
																	"id": "25ecc3ba-d529-4eac-bed4-0a302ef450c7",
																	"key": "instance_ids",
																	"value": "dolor sit al,aute minim",
																	"description": "(Required) A comma-separated list of instance identifiers.",
																	"type": "string"
																}
															]
														},
														"description": "Starts instances belonging to a Deployment Resource."
													},
													"response": [
														{
															"id": "078c566f-78c0-4edd-b811-bae61ff4ccf8",
															"name": "* The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)\n* The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)\n* One or more instances of the given resour",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/deployments/:deployment_id/:resource_kind/:ref_id/instances/:instance_ids/_start?ignore_missing=false",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"deployments",
																		":deployment_id",
																		":resource_kind",
																		":ref_id",
																		"instances",
																		":instance_ids",
																		"_start"
																	],
																	"query": [
																		{
																			"key": "ignore_missing",
																			"value": "false"
																		}
																	],
																	"variable": [
																		{
																			"key": "deployment_id",
																			"value": "cupidatat adipisicing",
																			"description": "(Required) Identifier for the Deployment."
																		},
																		{
																			"key": "resource_kind",
																			"value": "cupidatat adipisicing",
																			"description": "(Required) The kind of resource (one of elasticsearch, kibana, apm, or integrations_server)."
																		},
																		{
																			"key": "ref_id",
																			"value": "cupidatat adipisicing",
																			"description": "(Required) User-specified RefId for the Resource."
																		},
																		{
																			"key": "instance_ids",
																			"value": "dolor sit al,aute minim",
																			"description": "(Required) A comma-separated list of instance identifiers."
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"disabled": false,
																	"description": "The error codes associated with the response",
																	"key": "x-cloud-error-codes",
																	"value": "deployments.instances_missing_on_update_error"
																},
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"responseTime": null,
															"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
														},
														{
															"id": "42765956-d94b-47d1-9492-e730ca0b7af7",
															"name": "The start maintenance mode command was prohibited for the given Resource. (code: `deployments.instance_update_prohibited_error`)",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/deployments/:deployment_id/:resource_kind/:ref_id/instances/:instance_ids/_start?ignore_missing=false",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"deployments",
																		":deployment_id",
																		":resource_kind",
																		":ref_id",
																		"instances",
																		":instance_ids",
																		"_start"
																	],
																	"query": [
																		{
																			"key": "ignore_missing",
																			"value": "false"
																		}
																	],
																	"variable": [
																		{
																			"key": "deployment_id",
																			"value": "cupidatat adipisicing",
																			"description": "(Required) Identifier for the Deployment."
																		},
																		{
																			"key": "resource_kind",
																			"value": "cupidatat adipisicing",
																			"description": "(Required) The kind of resource (one of elasticsearch, kibana, apm, or integrations_server)."
																		},
																		{
																			"key": "ref_id",
																			"value": "cupidatat adipisicing",
																			"description": "(Required) User-specified RefId for the Resource."
																		},
																		{
																			"key": "instance_ids",
																			"value": "dolor sit al,aute minim",
																			"description": "(Required) A comma-separated list of instance identifiers."
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"disabled": false,
																	"description": "The error codes associated with the response",
																	"key": "x-cloud-error-codes",
																	"value": "deployments.instance_update_prohibited_error"
																},
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"responseTime": null,
															"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
														},
														{
															"id": "7fcf3729-87e3-4dcb-b0d8-94ae2fb0444b",
															"name": "The start command was issued successfully.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/deployments/:deployment_id/:resource_kind/:ref_id/instances/:instance_ids/_start?ignore_missing=false",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"deployments",
																		":deployment_id",
																		":resource_kind",
																		":ref_id",
																		"instances",
																		":instance_ids",
																		"_start"
																	],
																	"query": [
																		{
																			"key": "ignore_missing",
																			"value": "false"
																		}
																	],
																	"variable": [
																		{
																			"key": "deployment_id",
																			"value": "cupidatat adipisicing",
																			"description": "(Required) Identifier for the Deployment."
																		},
																		{
																			"key": "resource_kind",
																			"value": "cupidatat adipisicing",
																			"description": "(Required) The kind of resource (one of elasticsearch, kibana, apm, or integrations_server)."
																		},
																		{
																			"key": "ref_id",
																			"value": "cupidatat adipisicing",
																			"description": "(Required) User-specified RefId for the Resource."
																		},
																		{
																			"key": "instance_ids",
																			"value": "dolor sit al,aute minim",
																			"description": "(Required) A comma-separated list of instance identifiers."
																		}
																	]
																}
															},
															"status": "Accepted",
															"code": 202,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"responseTime": null,
															"body": "{\n  \"warnings\": [\n    {\n      \"code\": \"ex anim o\",\n      \"message\": \"in sit sint ut dese\"\n    },\n    {\n      \"code\": \"nulla sit\",\n      \"message\": \"cupidatat elit adipis\"\n    }\n  ]\n}"
														},
														{
															"id": "aa4922a9-5480-4dcc-86ff-ef9264a664eb",
															"name": "A Resource that was previously stored no longer exists. (code: `deployments.deployment_resource_no_longer_exists`)",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/deployments/:deployment_id/:resource_kind/:ref_id/instances/:instance_ids/_start?ignore_missing=false",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"deployments",
																		":deployment_id",
																		":resource_kind",
																		":ref_id",
																		"instances",
																		":instance_ids",
																		"_start"
																	],
																	"query": [
																		{
																			"key": "ignore_missing",
																			"value": "false"
																		}
																	],
																	"variable": [
																		{
																			"key": "deployment_id",
																			"value": "cupidatat adipisicing",
																			"description": "(Required) Identifier for the Deployment."
																		},
																		{
																			"key": "resource_kind",
																			"value": "cupidatat adipisicing",
																			"description": "(Required) The kind of resource (one of elasticsearch, kibana, apm, or integrations_server)."
																		},
																		{
																			"key": "ref_id",
																			"value": "cupidatat adipisicing",
																			"description": "(Required) User-specified RefId for the Resource."
																		},
																		{
																			"key": "instance_ids",
																			"value": "dolor sit al,aute minim",
																			"description": "(Required) A comma-separated list of instance identifiers."
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"disabled": false,
																	"description": "The error codes associated with the response",
																	"key": "x-cloud-error-codes",
																	"value": "deployments.deployment_resource_no_longer_exists"
																},
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"responseTime": null,
															"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
														},
														{
															"id": "ad1cf058-342f-4b99-bb36-78338fbca84e",
															"name": "Elevated permissions are required. (code: `root.unauthorized.rbac.elevated_permissions_required`)",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/deployments/:deployment_id/:resource_kind/:ref_id/instances/:instance_ids/_start?ignore_missing=false",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"deployments",
																		":deployment_id",
																		":resource_kind",
																		":ref_id",
																		"instances",
																		":instance_ids",
																		"_start"
																	],
																	"query": [
																		{
																			"key": "ignore_missing",
																			"value": "false"
																		}
																	],
																	"variable": [
																		{
																			"key": "deployment_id",
																			"value": "cupidatat adipisicing",
																			"description": "(Required) Identifier for the Deployment."
																		},
																		{
																			"key": "resource_kind",
																			"value": "cupidatat adipisicing",
																			"description": "(Required) The kind of resource (one of elasticsearch, kibana, apm, or integrations_server)."
																		},
																		{
																			"key": "ref_id",
																			"value": "cupidatat adipisicing",
																			"description": "(Required) User-specified RefId for the Resource."
																		},
																		{
																			"key": "instance_ids",
																			"value": "dolor sit al,aute minim",
																			"description": "(Required) A comma-separated list of instance identifiers."
																		}
																	]
																}
															},
															"status": "Retry With",
															"code": 449,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"disabled": false,
																	"description": "The error codes associated with the response",
																	"key": "x-cloud-error-codes",
																	"value": "root.unauthorized.rbac.elevated_permissions_required"
																},
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"responseTime": null,
															"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
														}
													]
												}
											],
											"_postman_id": "117a8cc2-f3ba-4e69-a80e-69d23b9b8b68",
											"_postman_isSubFolder": true
										},
										{
											"name": "maintenance-mode",
											"item": [
												{
													"name": "Start maintenance mode (all instances)",
													"_postman_id": "ed0c8673-50e1-4459-879e-2ebeb7b398e0",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/deployments/:deployment_id/:resource_kind/:ref_id/instances/maintenance-mode/_start",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"deployments",
																":deployment_id",
																":resource_kind",
																":ref_id",
																"instances",
																"maintenance-mode",
																"_start"
															],
															"variable": [
																{
																	"id": "3e2995a0-386e-44ff-b5a5-7ea373e3b696",
																	"key": "deployment_id",
																	"value": "cupidatat adipisicing",
																	"description": "(Required) Identifier for the Deployment.",
																	"type": "string"
																},
																{
																	"id": "11f35880-aa7e-4fb8-8e61-ca691c5c3e35",
																	"key": "resource_kind",
																	"value": "cupidatat adipisicing",
																	"description": "(Required) The kind of resource (one of elasticsearch, kibana, apm, or integrations_server).",
																	"type": "string"
																},
																{
																	"id": "e9208fd6-55b0-40be-b077-0145c1a81d2c",
																	"key": "ref_id",
																	"value": "cupidatat adipisicing",
																	"description": "(Required) User-specified RefId for the Resource.",
																	"type": "string"
																}
															]
														},
														"description": "Starts maintenance mode of all instances belonging to a Deployment Resource."
													},
													"response": [
														{
															"id": "206f364d-916d-492a-88fc-546616655386",
															"name": "The start maintenance command was issued successfully.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/deployments/:deployment_id/:resource_kind/:ref_id/instances/maintenance-mode/_start",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"deployments",
																		":deployment_id",
																		":resource_kind",
																		":ref_id",
																		"instances",
																		"maintenance-mode",
																		"_start"
																	],
																	"variable": [
																		{
																			"key": "deployment_id",
																			"value": "cupidatat adipisicing",
																			"description": "(Required) Identifier for the Deployment."
																		},
																		{
																			"key": "resource_kind",
																			"value": "cupidatat adipisicing",
																			"description": "(Required) The kind of resource (one of elasticsearch, kibana, apm, or integrations_server)."
																		},
																		{
																			"key": "ref_id",
																			"value": "cupidatat adipisicing",
																			"description": "(Required) User-specified RefId for the Resource."
																		}
																	]
																}
															},
															"status": "Accepted",
															"code": 202,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"responseTime": null,
															"body": "{\n  \"warnings\": [\n    {\n      \"code\": \"ex anim o\",\n      \"message\": \"in sit sint ut dese\"\n    },\n    {\n      \"code\": \"nulla sit\",\n      \"message\": \"cupidatat elit adipis\"\n    }\n  ]\n}"
														},
														{
															"id": "3773a6ad-9891-449d-ba1a-df6ea372e203",
															"name": "A Resource that was previously stored no longer exists. (code: `deployments.deployment_resource_no_longer_exists`)",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/deployments/:deployment_id/:resource_kind/:ref_id/instances/maintenance-mode/_start",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"deployments",
																		":deployment_id",
																		":resource_kind",
																		":ref_id",
																		"instances",
																		"maintenance-mode",
																		"_start"
																	],
																	"variable": [
																		{
																			"key": "deployment_id",
																			"value": "cupidatat adipisicing",
																			"description": "(Required) Identifier for the Deployment."
																		},
																		{
																			"key": "resource_kind",
																			"value": "cupidatat adipisicing",
																			"description": "(Required) The kind of resource (one of elasticsearch, kibana, apm, or integrations_server)."
																		},
																		{
																			"key": "ref_id",
																			"value": "cupidatat adipisicing",
																			"description": "(Required) User-specified RefId for the Resource."
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"disabled": false,
																	"description": "The error codes associated with the response",
																	"key": "x-cloud-error-codes",
																	"value": "deployments.deployment_resource_no_longer_exists"
																},
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"responseTime": null,
															"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
														},
														{
															"id": "3cbd2bbe-e2ef-45b6-8a1b-4e9400dea159",
															"name": "The start maintenance mode command was prohibited for the given Resource. (code: `deployments.instance_update_prohibited_error`)",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/deployments/:deployment_id/:resource_kind/:ref_id/instances/maintenance-mode/_start",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"deployments",
																		":deployment_id",
																		":resource_kind",
																		":ref_id",
																		"instances",
																		"maintenance-mode",
																		"_start"
																	],
																	"variable": [
																		{
																			"key": "deployment_id",
																			"value": "cupidatat adipisicing",
																			"description": "(Required) Identifier for the Deployment."
																		},
																		{
																			"key": "resource_kind",
																			"value": "cupidatat adipisicing",
																			"description": "(Required) The kind of resource (one of elasticsearch, kibana, apm, or integrations_server)."
																		},
																		{
																			"key": "ref_id",
																			"value": "cupidatat adipisicing",
																			"description": "(Required) User-specified RefId for the Resource."
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"disabled": false,
																	"description": "The error codes associated with the response",
																	"key": "x-cloud-error-codes",
																	"value": "deployments.instance_update_prohibited_error"
																},
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"responseTime": null,
															"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
														},
														{
															"id": "43010703-4db7-4a1e-87dc-259ab9dade39",
															"name": "* The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)\n* The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)\n* One or more instances of the given resour",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/deployments/:deployment_id/:resource_kind/:ref_id/instances/maintenance-mode/_start",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"deployments",
																		":deployment_id",
																		":resource_kind",
																		":ref_id",
																		"instances",
																		"maintenance-mode",
																		"_start"
																	],
																	"variable": [
																		{
																			"key": "deployment_id",
																			"value": "cupidatat adipisicing",
																			"description": "(Required) Identifier for the Deployment."
																		},
																		{
																			"key": "resource_kind",
																			"value": "cupidatat adipisicing",
																			"description": "(Required) The kind of resource (one of elasticsearch, kibana, apm, or integrations_server)."
																		},
																		{
																			"key": "ref_id",
																			"value": "cupidatat adipisicing",
																			"description": "(Required) User-specified RefId for the Resource."
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"disabled": false,
																	"description": "The error codes associated with the response",
																	"key": "x-cloud-error-codes",
																	"value": "deployments.instances_missing_on_update_error"
																},
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"responseTime": null,
															"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
														},
														{
															"id": "f9b8d956-925e-41dd-87dd-cfac2845ecf5",
															"name": "Elevated permissions are required. (code: `root.unauthorized.rbac.elevated_permissions_required`)",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/deployments/:deployment_id/:resource_kind/:ref_id/instances/maintenance-mode/_start",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"deployments",
																		":deployment_id",
																		":resource_kind",
																		":ref_id",
																		"instances",
																		"maintenance-mode",
																		"_start"
																	],
																	"variable": [
																		{
																			"key": "deployment_id",
																			"value": "cupidatat adipisicing",
																			"description": "(Required) Identifier for the Deployment."
																		},
																		{
																			"key": "resource_kind",
																			"value": "cupidatat adipisicing",
																			"description": "(Required) The kind of resource (one of elasticsearch, kibana, apm, or integrations_server)."
																		},
																		{
																			"key": "ref_id",
																			"value": "cupidatat adipisicing",
																			"description": "(Required) User-specified RefId for the Resource."
																		}
																	]
																}
															},
															"status": "Retry With",
															"code": 449,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"disabled": false,
																	"description": "The error codes associated with the response",
																	"key": "x-cloud-error-codes",
																	"value": "root.unauthorized.rbac.elevated_permissions_required"
																},
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"responseTime": null,
															"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
														}
													]
												},
												{
													"name": "Stop maintenance mode (all instances)",
													"_postman_id": "cd892fb2-d4dd-43b7-b62d-43d5a8190e3b",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/deployments/:deployment_id/:resource_kind/:ref_id/instances/maintenance-mode/_stop",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"deployments",
																":deployment_id",
																":resource_kind",
																":ref_id",
																"instances",
																"maintenance-mode",
																"_stop"
															],
															"variable": [
																{
																	"id": "33827155-a66b-42c2-b9be-32bc76da4c97",
																	"key": "deployment_id",
																	"value": "cupidatat adipisicing",
																	"description": "(Required) Identifier for the Deployment.",
																	"type": "string"
																},
																{
																	"id": "59a36c63-96a9-410a-bd19-d07b9e8eedb6",
																	"key": "resource_kind",
																	"value": "cupidatat adipisicing",
																	"description": "(Required) The kind of resource (one of elasticsearch, kibana, apm, or integrations_server).",
																	"type": "string"
																},
																{
																	"id": "78912b55-514b-49d7-9fde-60e438c672f2",
																	"key": "ref_id",
																	"value": "cupidatat adipisicing",
																	"description": "(Required) User-specified RefId for the Resource.",
																	"type": "string"
																}
															]
														},
														"description": "Stops maintenance mode of all instances belonging to a Deployment Resource."
													},
													"response": [
														{
															"id": "36be5480-4c11-4582-a41c-36499faead30",
															"name": "A Resource that was previously stored no longer exists. (code: `deployments.deployment_resource_no_longer_exists`)",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/deployments/:deployment_id/:resource_kind/:ref_id/instances/maintenance-mode/_stop",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"deployments",
																		":deployment_id",
																		":resource_kind",
																		":ref_id",
																		"instances",
																		"maintenance-mode",
																		"_stop"
																	],
																	"variable": [
																		{
																			"key": "deployment_id",
																			"value": "cupidatat adipisicing",
																			"description": "(Required) Identifier for the Deployment."
																		},
																		{
																			"key": "resource_kind",
																			"value": "cupidatat adipisicing",
																			"description": "(Required) The kind of resource (one of elasticsearch, kibana, apm, or integrations_server)."
																		},
																		{
																			"key": "ref_id",
																			"value": "cupidatat adipisicing",
																			"description": "(Required) User-specified RefId for the Resource."
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"disabled": false,
																	"description": "The error codes associated with the response",
																	"key": "x-cloud-error-codes",
																	"value": "deployments.deployment_resource_no_longer_exists"
																},
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"responseTime": null,
															"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
														},
														{
															"id": "450b4e80-095f-4529-a261-fa6d62a629cc",
															"name": "* The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)\n* The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)\n* One or more instances of the given resour",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/deployments/:deployment_id/:resource_kind/:ref_id/instances/maintenance-mode/_stop",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"deployments",
																		":deployment_id",
																		":resource_kind",
																		":ref_id",
																		"instances",
																		"maintenance-mode",
																		"_stop"
																	],
																	"variable": [
																		{
																			"key": "deployment_id",
																			"value": "cupidatat adipisicing",
																			"description": "(Required) Identifier for the Deployment."
																		},
																		{
																			"key": "resource_kind",
																			"value": "cupidatat adipisicing",
																			"description": "(Required) The kind of resource (one of elasticsearch, kibana, apm, or integrations_server)."
																		},
																		{
																			"key": "ref_id",
																			"value": "cupidatat adipisicing",
																			"description": "(Required) User-specified RefId for the Resource."
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"disabled": false,
																	"description": "The error codes associated with the response",
																	"key": "x-cloud-error-codes",
																	"value": "deployments.instances_missing_on_update_error"
																},
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"responseTime": null,
															"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
														},
														{
															"id": "9ba0ea1d-d91b-4ff6-9a4d-199d79760352",
															"name": "The stop maintenance mode command was issued successfully.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/deployments/:deployment_id/:resource_kind/:ref_id/instances/maintenance-mode/_stop",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"deployments",
																		":deployment_id",
																		":resource_kind",
																		":ref_id",
																		"instances",
																		"maintenance-mode",
																		"_stop"
																	],
																	"variable": [
																		{
																			"key": "deployment_id",
																			"value": "cupidatat adipisicing",
																			"description": "(Required) Identifier for the Deployment."
																		},
																		{
																			"key": "resource_kind",
																			"value": "cupidatat adipisicing",
																			"description": "(Required) The kind of resource (one of elasticsearch, kibana, apm, or integrations_server)."
																		},
																		{
																			"key": "ref_id",
																			"value": "cupidatat adipisicing",
																			"description": "(Required) User-specified RefId for the Resource."
																		}
																	]
																}
															},
															"status": "Accepted",
															"code": 202,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"responseTime": null,
															"body": "{\n  \"warnings\": [\n    {\n      \"code\": \"ex anim o\",\n      \"message\": \"in sit sint ut dese\"\n    },\n    {\n      \"code\": \"nulla sit\",\n      \"message\": \"cupidatat elit adipis\"\n    }\n  ]\n}"
														},
														{
															"id": "9de31690-b750-4301-bc7c-fd89e6428f7e",
															"name": "The stop maintenance mode command was prohibited for the given Resource. (code: `deployments.instance_update_prohibited_error`)",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/deployments/:deployment_id/:resource_kind/:ref_id/instances/maintenance-mode/_stop",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"deployments",
																		":deployment_id",
																		":resource_kind",
																		":ref_id",
																		"instances",
																		"maintenance-mode",
																		"_stop"
																	],
																	"variable": [
																		{
																			"key": "deployment_id",
																			"value": "cupidatat adipisicing",
																			"description": "(Required) Identifier for the Deployment."
																		},
																		{
																			"key": "resource_kind",
																			"value": "cupidatat adipisicing",
																			"description": "(Required) The kind of resource (one of elasticsearch, kibana, apm, or integrations_server)."
																		},
																		{
																			"key": "ref_id",
																			"value": "cupidatat adipisicing",
																			"description": "(Required) User-specified RefId for the Resource."
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"disabled": false,
																	"description": "The error codes associated with the response",
																	"key": "x-cloud-error-codes",
																	"value": "deployments.instance_update_prohibited_error"
																},
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"responseTime": null,
															"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
														},
														{
															"id": "d02b9dd6-f4c3-4c4c-9230-43deb0bf0e9f",
															"name": "Elevated permissions are required. (code: `root.unauthorized.rbac.elevated_permissions_required`)",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/deployments/:deployment_id/:resource_kind/:ref_id/instances/maintenance-mode/_stop",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"deployments",
																		":deployment_id",
																		":resource_kind",
																		":ref_id",
																		"instances",
																		"maintenance-mode",
																		"_stop"
																	],
																	"variable": [
																		{
																			"key": "deployment_id",
																			"value": "cupidatat adipisicing",
																			"description": "(Required) Identifier for the Deployment."
																		},
																		{
																			"key": "resource_kind",
																			"value": "cupidatat adipisicing",
																			"description": "(Required) The kind of resource (one of elasticsearch, kibana, apm, or integrations_server)."
																		},
																		{
																			"key": "ref_id",
																			"value": "cupidatat adipisicing",
																			"description": "(Required) User-specified RefId for the Resource."
																		}
																	]
																}
															},
															"status": "Retry With",
															"code": 449,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"disabled": false,
																	"description": "The error codes associated with the response",
																	"key": "x-cloud-error-codes",
																	"value": "root.unauthorized.rbac.elevated_permissions_required"
																},
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"responseTime": null,
															"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
														}
													]
												}
											],
											"_postman_id": "568ef3fb-ce86-4839-b1af-90930e48ae6f",
											"_postman_isSubFolder": true
										},
										{
											"name": "Start all instances",
											"_postman_id": "e5104831-1fb5-4727-aa7a-f6d46c829b67",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/deployments/:deployment_id/:resource_kind/:ref_id/instances/_start",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"deployments",
														":deployment_id",
														":resource_kind",
														":ref_id",
														"instances",
														"_start"
													],
													"variable": [
														{
															"id": "6a6dbe8d-c39d-4525-af2e-a549e81b4087",
															"key": "deployment_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) Identifier for the Deployment.",
															"type": "string"
														},
														{
															"id": "3367f673-1946-4b8c-bec1-07f87d3ad18e",
															"key": "resource_kind",
															"value": "cupidatat adipisicing",
															"description": "(Required) The kind of resource (one of elasticsearch, kibana, apm, or integrations_server).",
															"type": "string"
														},
														{
															"id": "4288ff5a-9e04-4d4b-adf6-3494d0ac293f",
															"key": "ref_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) User-specified RefId for the Resource.",
															"type": "string"
														}
													]
												},
												"description": "Starts all instances belonging to a Deployment Resource."
											},
											"response": [
												{
													"id": "1603881a-26da-4fa6-809e-c81fa99d7771",
													"name": "A Resource that was previously stored no longer exists. (code: `deployments.deployment_resource_no_longer_exists`)",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/deployments/:deployment_id/:resource_kind/:ref_id/instances/_start",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"deployments",
																":deployment_id",
																":resource_kind",
																":ref_id",
																"instances",
																"_start"
															],
															"variable": [
																{
																	"key": "deployment_id",
																	"value": "cupidatat adipisicing",
																	"description": "(Required) Identifier for the Deployment."
																},
																{
																	"key": "resource_kind",
																	"value": "cupidatat adipisicing",
																	"description": "(Required) The kind of resource (one of elasticsearch, kibana, apm, or integrations_server)."
																},
																{
																	"key": "ref_id",
																	"value": "cupidatat adipisicing",
																	"description": "(Required) User-specified RefId for the Resource."
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"disabled": false,
															"description": "The error codes associated with the response",
															"key": "x-cloud-error-codes",
															"value": "deployments.deployment_resource_no_longer_exists"
														},
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
												},
												{
													"id": "39411f28-11bc-46ce-87e1-cc9864f2a284",
													"name": "* The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)\n* The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)\n* One or more instances of the given resour",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/deployments/:deployment_id/:resource_kind/:ref_id/instances/_start",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"deployments",
																":deployment_id",
																":resource_kind",
																":ref_id",
																"instances",
																"_start"
															],
															"variable": [
																{
																	"key": "deployment_id",
																	"value": "cupidatat adipisicing",
																	"description": "(Required) Identifier for the Deployment."
																},
																{
																	"key": "resource_kind",
																	"value": "cupidatat adipisicing",
																	"description": "(Required) The kind of resource (one of elasticsearch, kibana, apm, or integrations_server)."
																},
																{
																	"key": "ref_id",
																	"value": "cupidatat adipisicing",
																	"description": "(Required) User-specified RefId for the Resource."
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"disabled": false,
															"description": "The error codes associated with the response",
															"key": "x-cloud-error-codes",
															"value": "deployments.instances_missing_on_update_error"
														},
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
												},
												{
													"id": "42eef4c7-a04d-4816-a152-cd24a43d3ce4",
													"name": "The start maintenance mode command was prohibited for the given Resource. (code: `deployments.instance_update_prohibited_error`)",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/deployments/:deployment_id/:resource_kind/:ref_id/instances/_start",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"deployments",
																":deployment_id",
																":resource_kind",
																":ref_id",
																"instances",
																"_start"
															],
															"variable": [
																{
																	"key": "deployment_id",
																	"value": "cupidatat adipisicing",
																	"description": "(Required) Identifier for the Deployment."
																},
																{
																	"key": "resource_kind",
																	"value": "cupidatat adipisicing",
																	"description": "(Required) The kind of resource (one of elasticsearch, kibana, apm, or integrations_server)."
																},
																{
																	"key": "ref_id",
																	"value": "cupidatat adipisicing",
																	"description": "(Required) User-specified RefId for the Resource."
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"disabled": false,
															"description": "The error codes associated with the response",
															"key": "x-cloud-error-codes",
															"value": "deployments.instance_update_prohibited_error"
														},
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
												},
												{
													"id": "8017e77b-7ef1-40c8-ba29-50ae2495b237",
													"name": "Elevated permissions are required. (code: `root.unauthorized.rbac.elevated_permissions_required`)",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/deployments/:deployment_id/:resource_kind/:ref_id/instances/_start",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"deployments",
																":deployment_id",
																":resource_kind",
																":ref_id",
																"instances",
																"_start"
															],
															"variable": [
																{
																	"key": "deployment_id",
																	"value": "cupidatat adipisicing",
																	"description": "(Required) Identifier for the Deployment."
																},
																{
																	"key": "resource_kind",
																	"value": "cupidatat adipisicing",
																	"description": "(Required) The kind of resource (one of elasticsearch, kibana, apm, or integrations_server)."
																},
																{
																	"key": "ref_id",
																	"value": "cupidatat adipisicing",
																	"description": "(Required) User-specified RefId for the Resource."
																}
															]
														}
													},
													"status": "Retry With",
													"code": 449,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"disabled": false,
															"description": "The error codes associated with the response",
															"key": "x-cloud-error-codes",
															"value": "root.unauthorized.rbac.elevated_permissions_required"
														},
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
												},
												{
													"id": "a5aa0571-9d63-4f11-b1a9-94956a266d87",
													"name": "The start command was issued successfully.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/deployments/:deployment_id/:resource_kind/:ref_id/instances/_start",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"deployments",
																":deployment_id",
																":resource_kind",
																":ref_id",
																"instances",
																"_start"
															],
															"variable": [
																{
																	"key": "deployment_id",
																	"value": "cupidatat adipisicing",
																	"description": "(Required) Identifier for the Deployment."
																},
																{
																	"key": "resource_kind",
																	"value": "cupidatat adipisicing",
																	"description": "(Required) The kind of resource (one of elasticsearch, kibana, apm, or integrations_server)."
																},
																{
																	"key": "ref_id",
																	"value": "cupidatat adipisicing",
																	"description": "(Required) User-specified RefId for the Resource."
																}
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"warnings\": [\n    {\n      \"code\": \"ex anim o\",\n      \"message\": \"in sit sint ut dese\"\n    },\n    {\n      \"code\": \"nulla sit\",\n      \"message\": \"cupidatat elit adipis\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Stop all instances",
											"_postman_id": "fab87ccf-0512-447a-9660-bb1cb1f40f89",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/deployments/:deployment_id/:resource_kind/:ref_id/instances/_stop",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"deployments",
														":deployment_id",
														":resource_kind",
														":ref_id",
														"instances",
														"_stop"
													],
													"variable": [
														{
															"id": "46bcb386-f709-4367-a7eb-93966088fb71",
															"key": "deployment_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) Identifier for the Deployment.",
															"type": "string"
														},
														{
															"id": "4c320680-4cc2-42a5-ac45-5d2ffadc96fe",
															"key": "resource_kind",
															"value": "cupidatat adipisicing",
															"description": "(Required) The kind of resource (one of elasticsearch, kibana, apm, or integrations_server).",
															"type": "string"
														},
														{
															"id": "f4e141df-56a6-403e-801d-e420a6b5e7e0",
															"key": "ref_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) User-specified RefId for the Resource.",
															"type": "string"
														}
													]
												},
												"description": "Stops all instances belonging to a Deployment Resource."
											},
											"response": [
												{
													"id": "107ba7b3-47dc-4831-a56d-21ead4a8e883",
													"name": "The stop command was issued successfully.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/deployments/:deployment_id/:resource_kind/:ref_id/instances/_stop",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"deployments",
																":deployment_id",
																":resource_kind",
																":ref_id",
																"instances",
																"_stop"
															],
															"variable": [
																{
																	"key": "deployment_id",
																	"value": "cupidatat adipisicing",
																	"description": "(Required) Identifier for the Deployment."
																},
																{
																	"key": "resource_kind",
																	"value": "cupidatat adipisicing",
																	"description": "(Required) The kind of resource (one of elasticsearch, kibana, apm, or integrations_server)."
																},
																{
																	"key": "ref_id",
																	"value": "cupidatat adipisicing",
																	"description": "(Required) User-specified RefId for the Resource."
																}
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"warnings\": [\n    {\n      \"code\": \"ex anim o\",\n      \"message\": \"in sit sint ut dese\"\n    },\n    {\n      \"code\": \"nulla sit\",\n      \"message\": \"cupidatat elit adipis\"\n    }\n  ]\n}"
												},
												{
													"id": "a391b5dd-3b77-4d75-86cc-13c6676367bd",
													"name": "* The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)\n* The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)\n* One or more instances of the given resour",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/deployments/:deployment_id/:resource_kind/:ref_id/instances/_stop",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"deployments",
																":deployment_id",
																":resource_kind",
																":ref_id",
																"instances",
																"_stop"
															],
															"variable": [
																{
																	"key": "deployment_id",
																	"value": "cupidatat adipisicing",
																	"description": "(Required) Identifier for the Deployment."
																},
																{
																	"key": "resource_kind",
																	"value": "cupidatat adipisicing",
																	"description": "(Required) The kind of resource (one of elasticsearch, kibana, apm, or integrations_server)."
																},
																{
																	"key": "ref_id",
																	"value": "cupidatat adipisicing",
																	"description": "(Required) User-specified RefId for the Resource."
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"disabled": false,
															"description": "The error codes associated with the response",
															"key": "x-cloud-error-codes",
															"value": "deployments.instances_missing_on_update_error"
														},
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
												},
												{
													"id": "b8a7a5b8-c83a-43bf-8eda-78a82277466a",
													"name": "The stop maintenance mode command was prohibited for the given Resource. (code: `deployments.instance_update_prohibited_error`)",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/deployments/:deployment_id/:resource_kind/:ref_id/instances/_stop",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"deployments",
																":deployment_id",
																":resource_kind",
																":ref_id",
																"instances",
																"_stop"
															],
															"variable": [
																{
																	"key": "deployment_id",
																	"value": "cupidatat adipisicing",
																	"description": "(Required) Identifier for the Deployment."
																},
																{
																	"key": "resource_kind",
																	"value": "cupidatat adipisicing",
																	"description": "(Required) The kind of resource (one of elasticsearch, kibana, apm, or integrations_server)."
																},
																{
																	"key": "ref_id",
																	"value": "cupidatat adipisicing",
																	"description": "(Required) User-specified RefId for the Resource."
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"disabled": false,
															"description": "The error codes associated with the response",
															"key": "x-cloud-error-codes",
															"value": "deployments.instance_update_prohibited_error"
														},
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
												},
												{
													"id": "cb529fb1-d823-4738-8c4d-518ebe2a8628",
													"name": "Elevated permissions are required. (code: `root.unauthorized.rbac.elevated_permissions_required`)",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/deployments/:deployment_id/:resource_kind/:ref_id/instances/_stop",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"deployments",
																":deployment_id",
																":resource_kind",
																":ref_id",
																"instances",
																"_stop"
															],
															"variable": [
																{
																	"key": "deployment_id",
																	"value": "cupidatat adipisicing",
																	"description": "(Required) Identifier for the Deployment."
																},
																{
																	"key": "resource_kind",
																	"value": "cupidatat adipisicing",
																	"description": "(Required) The kind of resource (one of elasticsearch, kibana, apm, or integrations_server)."
																},
																{
																	"key": "ref_id",
																	"value": "cupidatat adipisicing",
																	"description": "(Required) User-specified RefId for the Resource."
																}
															]
														}
													},
													"status": "Retry With",
													"code": 449,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"disabled": false,
															"description": "The error codes associated with the response",
															"key": "x-cloud-error-codes",
															"value": "root.unauthorized.rbac.elevated_permissions_required"
														},
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
												},
												{
													"id": "d1baf788-3b35-47a3-920f-f022f362cd1c",
													"name": "A Resource that was previously stored no longer exists. (code: `deployments.deployment_resource_no_longer_exists`)",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/deployments/:deployment_id/:resource_kind/:ref_id/instances/_stop",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"deployments",
																":deployment_id",
																":resource_kind",
																":ref_id",
																"instances",
																"_stop"
															],
															"variable": [
																{
																	"key": "deployment_id",
																	"value": "cupidatat adipisicing",
																	"description": "(Required) Identifier for the Deployment."
																},
																{
																	"key": "resource_kind",
																	"value": "cupidatat adipisicing",
																	"description": "(Required) The kind of resource (one of elasticsearch, kibana, apm, or integrations_server)."
																},
																{
																	"key": "ref_id",
																	"value": "cupidatat adipisicing",
																	"description": "(Required) User-specified RefId for the Resource."
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"disabled": false,
															"description": "The error codes associated with the response",
															"key": "x-cloud-error-codes",
															"value": "deployments.deployment_resource_no_longer_exists"
														},
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
												}
											]
										}
									],
									"_postman_id": "97f3438a-488c-4199-b674-0da11c1dff73",
									"_postman_isSubFolder": true
								},
								{
									"name": "Restores a shutdown resource",
									"_postman_id": "2d87d765-01fd-496e-abd3-d7084fd5b1fd",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/deployments/:deployment_id/:resource_kind/:ref_id/_restore?restore_snapshot=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"deployments",
												":deployment_id",
												":resource_kind",
												":ref_id",
												"_restore"
											],
											"query": [
												{
													"key": "restore_snapshot",
													"value": "false",
													"description": "Whether or not to restore a snapshot for those resources that allow it."
												}
											],
											"variable": [
												{
													"id": "da3797c5-bc54-4142-9747-bc29a8cf973c",
													"key": "deployment_id",
													"value": "cupidatat adipisicing",
													"description": "(Required) Identifier for the Deployment",
													"type": "string"
												},
												{
													"id": "449d60dd-f920-4e06-bcab-9bcb9214545d",
													"key": "resource_kind",
													"value": "enterprise_search",
													"description": "(Required) The kind of resource",
													"type": "string"
												},
												{
													"id": "354de3b0-5bd6-471a-8351-300fe9f75ebe",
													"key": "ref_id",
													"value": "cupidatat adipisicing",
													"description": "(Required) User-specified RefId for the Resource",
													"type": "string"
												}
											]
										},
										"description": "Restores a shutdown resource belonging to a given Deployment."
									},
									"response": [
										{
											"id": "45872c5f-aba2-47c3-b609-e60623d2bb84",
											"name": "* The Resource does not have a pending plan. (code: `deployments.resource_does_not_have_a_pending_plan`)\n* The resource is not shut down. (code: `deployments.resource_not_shutdown`)",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/deployments/:deployment_id/:resource_kind/:ref_id/_restore?restore_snapshot=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"deployments",
														":deployment_id",
														":resource_kind",
														":ref_id",
														"_restore"
													],
													"query": [
														{
															"key": "restore_snapshot",
															"value": "false"
														}
													],
													"variable": [
														{
															"key": "deployment_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) Identifier for the Deployment"
														},
														{
															"key": "resource_kind",
															"value": "enterprise_search",
															"description": "(Required) The kind of resource"
														},
														{
															"key": "ref_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) User-specified RefId for the Resource"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"disabled": false,
													"description": "The error codes associated with the response",
													"key": "x-cloud-error-codes",
													"value": "deployments.resource_not_shutdown"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
										},
										{
											"id": "5d080f2b-ec0f-4ab1-9aeb-e68e43bce06b",
											"name": "Standard Deployment Resource Crud Response",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/deployments/:deployment_id/:resource_kind/:ref_id/_restore?restore_snapshot=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"deployments",
														":deployment_id",
														":resource_kind",
														":ref_id",
														"_restore"
													],
													"query": [
														{
															"key": "restore_snapshot",
															"value": "false"
														}
													],
													"variable": [
														{
															"key": "deployment_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) Identifier for the Deployment"
														},
														{
															"key": "resource_kind",
															"value": "enterprise_search",
															"description": "(Required) The kind of resource"
														},
														{
															"key": "ref_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) User-specified RefId for the Resource"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"id\": \"veniam ad sunt iru\",\n  \"kind\": \"in dolore ut Excepteur sunt\",\n  \"ref_id\": \"Excepteur proident voluptate pariatur\"\n}"
										},
										{
											"id": "95332ba7-0d54-4622-a595-42fed137d513",
											"name": "The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/deployments/:deployment_id/:resource_kind/:ref_id/_restore?restore_snapshot=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"deployments",
														":deployment_id",
														":resource_kind",
														":ref_id",
														"_restore"
													],
													"query": [
														{
															"key": "restore_snapshot",
															"value": "false"
														}
													],
													"variable": [
														{
															"key": "deployment_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) Identifier for the Deployment"
														},
														{
															"key": "resource_kind",
															"value": "enterprise_search",
															"description": "(Required) The kind of resource"
														},
														{
															"key": "ref_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) User-specified RefId for the Resource"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"disabled": false,
													"description": "The error codes associated with the response",
													"key": "x-cloud-error-codes",
													"value": "deployments.deployment_not_found"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
										},
										{
											"id": "d70dc94d-aeb1-448b-92c4-fb859470bd3c",
											"name": "Elevated permissions are required. (code: `root.unauthorized.rbac.elevated_permissions_required`)",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/deployments/:deployment_id/:resource_kind/:ref_id/_restore?restore_snapshot=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"deployments",
														":deployment_id",
														":resource_kind",
														":ref_id",
														"_restore"
													],
													"query": [
														{
															"key": "restore_snapshot",
															"value": "false"
														}
													],
													"variable": [
														{
															"key": "deployment_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) Identifier for the Deployment"
														},
														{
															"key": "resource_kind",
															"value": "enterprise_search",
															"description": "(Required) The kind of resource"
														},
														{
															"key": "ref_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) User-specified RefId for the Resource"
														}
													]
												}
											},
											"status": "Retry With",
											"code": 449,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"disabled": false,
													"description": "The error codes associated with the response",
													"key": "x-cloud-error-codes",
													"value": "root.unauthorized.rbac.elevated_permissions_required"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Cancel resource pending plan",
									"_postman_id": "40868905-ebeb-476e-a057-c4fdabc8dda8",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/deployments/:deployment_id/:resource_kind/:ref_id/plan/pending?force_delete=false&ignore_missing=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"deployments",
												":deployment_id",
												":resource_kind",
												":ref_id",
												"plan",
												"pending"
											],
											"query": [
												{
													"key": "force_delete",
													"value": "false",
													"description": "When `true`, deletes the pending plan instead of attempting a graceful cancellation. The default is `false`."
												},
												{
													"key": "ignore_missing",
													"value": "false",
													"description": "When `true`, returns successfully, even when plans are missing. The default is `false`."
												}
											],
											"variable": [
												{
													"id": "d369a54c-5566-402b-8b28-5adabfc7c41d",
													"key": "deployment_id",
													"value": "cupidatat adipisicing",
													"description": "(Required) Identifier for the Deployment",
													"type": "string"
												},
												{
													"id": "8d56eeaa-7843-45c3-a178-4e0f63495f6b",
													"key": "resource_kind",
													"value": "enterprise_search",
													"description": "(Required) The kind of resource",
													"type": "string"
												},
												{
													"id": "d9f592f2-5623-49b1-8c41-ba42ecdb036d",
													"key": "ref_id",
													"value": "cupidatat adipisicing",
													"description": "(Required) User-specified RefId for the Resource",
													"type": "string"
												}
											]
										},
										"description": "Cancels the pending plan of a Resource belonging to a given Deployment."
									},
									"response": [
										{
											"id": "2b2f7fd8-3e0e-4117-be17-acbcc100e900",
											"name": "We have failed you. (code: `deployments.deployment_resource_no_longer_exists`)",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/deployments/:deployment_id/:resource_kind/:ref_id/plan/pending?force_delete=false&ignore_missing=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"deployments",
														":deployment_id",
														":resource_kind",
														":ref_id",
														"plan",
														"pending"
													],
													"query": [
														{
															"key": "force_delete",
															"value": "false"
														},
														{
															"key": "ignore_missing",
															"value": "false"
														}
													],
													"variable": [
														{
															"key": "deployment_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) Identifier for the Deployment"
														},
														{
															"key": "resource_kind",
															"value": "enterprise_search",
															"description": "(Required) The kind of resource"
														},
														{
															"key": "ref_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) User-specified RefId for the Resource"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"disabled": false,
													"description": "The error codes associated with the response",
													"key": "x-cloud-error-codes",
													"value": "deployments.deployment_resource_no_longer_exists"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
										},
										{
											"id": "4eaea8cc-05e9-437f-9265-555ddd0c64fe",
											"name": "The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/deployments/:deployment_id/:resource_kind/:ref_id/plan/pending?force_delete=false&ignore_missing=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"deployments",
														":deployment_id",
														":resource_kind",
														":ref_id",
														"plan",
														"pending"
													],
													"query": [
														{
															"key": "force_delete",
															"value": "false"
														},
														{
															"key": "ignore_missing",
															"value": "false"
														}
													],
													"variable": [
														{
															"key": "deployment_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) Identifier for the Deployment"
														},
														{
															"key": "resource_kind",
															"value": "enterprise_search",
															"description": "(Required) The kind of resource"
														},
														{
															"key": "ref_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) User-specified RefId for the Resource"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"disabled": false,
													"description": "The error codes associated with the response",
													"key": "x-cloud-error-codes",
													"value": "deployments.deployment_not_found"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
										},
										{
											"id": "81e12b1d-ecb9-4670-90b0-ad1e9078adb7",
											"name": "Elevated permissions are required. (code: `root.unauthorized.rbac.elevated_permissions_required`)",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/deployments/:deployment_id/:resource_kind/:ref_id/plan/pending?force_delete=false&ignore_missing=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"deployments",
														":deployment_id",
														":resource_kind",
														":ref_id",
														"plan",
														"pending"
													],
													"query": [
														{
															"key": "force_delete",
															"value": "false"
														},
														{
															"key": "ignore_missing",
															"value": "false"
														}
													],
													"variable": [
														{
															"key": "deployment_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) Identifier for the Deployment"
														},
														{
															"key": "resource_kind",
															"value": "enterprise_search",
															"description": "(Required) The kind of resource"
														},
														{
															"key": "ref_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) User-specified RefId for the Resource"
														}
													]
												}
											},
											"status": "Retry With",
											"code": 449,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"disabled": false,
													"description": "The error codes associated with the response",
													"key": "x-cloud-error-codes",
													"value": "root.unauthorized.rbac.elevated_permissions_required"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
										},
										{
											"id": "9c3bfe9a-d4da-47fb-8a0b-2c307e04d937",
											"name": "The Resource does not have a pending plan. (code: `deployments.resource_does_not_have_a_pending_plan`)",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/deployments/:deployment_id/:resource_kind/:ref_id/plan/pending?force_delete=false&ignore_missing=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"deployments",
														":deployment_id",
														":resource_kind",
														":ref_id",
														"plan",
														"pending"
													],
													"query": [
														{
															"key": "force_delete",
															"value": "false"
														},
														{
															"key": "ignore_missing",
															"value": "false"
														}
													],
													"variable": [
														{
															"key": "deployment_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) Identifier for the Deployment"
														},
														{
															"key": "resource_kind",
															"value": "enterprise_search",
															"description": "(Required) The kind of resource"
														},
														{
															"key": "ref_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) User-specified RefId for the Resource"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"disabled": false,
													"description": "The error codes associated with the response",
													"key": "x-cloud-error-codes",
													"value": "deployments.resource_does_not_have_a_pending_plan"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
										},
										{
											"id": "a6a20372-48aa-49c6-8d75-fd20d3d5c9f8",
											"name": "Standard Deployment Resource Crud Response",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/deployments/:deployment_id/:resource_kind/:ref_id/plan/pending?force_delete=false&ignore_missing=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"deployments",
														":deployment_id",
														":resource_kind",
														":ref_id",
														"plan",
														"pending"
													],
													"query": [
														{
															"key": "force_delete",
															"value": "false"
														},
														{
															"key": "ignore_missing",
															"value": "false"
														}
													],
													"variable": [
														{
															"key": "deployment_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) Identifier for the Deployment"
														},
														{
															"key": "resource_kind",
															"value": "enterprise_search",
															"description": "(Required) The kind of resource"
														},
														{
															"key": "ref_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) User-specified RefId for the Resource"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"id\": \"veniam ad sunt iru\",\n  \"kind\": \"in dolore ut Excepteur sunt\",\n  \"ref_id\": \"Excepteur proident voluptate pariatur\"\n}"
										}
									]
								}
							],
							"_postman_id": "e5bb8b67-9da9-4592-9f6f-77bd7540f51a",
							"_postman_isSubFolder": true
						},
						{
							"name": "apm/{ref id}",
							"item": [
								{
									"name": "Get Deployment APM Resource Info",
									"_postman_id": "9bbbffd2-6bbf-4595-9777-b234158c7f04",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/deployments/:deployment_id/apm/:ref_id?show_metadata=false&show_plans=true&show_plan_logs=false&show_plan_history=false&show_plan_defaults=false&show_settings=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"deployments",
												":deployment_id",
												"apm",
												":ref_id"
											],
											"query": [
												{
													"key": "show_metadata",
													"value": "false",
													"description": "Whether to include the full cluster metadata in the response - can be large per cluster and also include credentials."
												},
												{
													"key": "show_plans",
													"value": "true",
													"description": "Whether to include the full current and pending plan information in the response - can be large per cluster."
												},
												{
													"key": "show_plan_logs",
													"value": "false",
													"description": "Whether to include with the current and pending plan information the attempt log - can be very large per cluster."
												},
												{
													"key": "show_plan_history",
													"value": "false",
													"description": "Whether to include with the current and pending plan information the plan history- can be very large per cluster."
												},
												{
													"key": "show_plan_defaults",
													"value": "false",
													"description": "If showing plans, whether to show values that are left at their default value (less readable but more informative)."
												},
												{
													"key": "show_settings",
													"value": "false",
													"description": "Whether to show cluster settings in the response."
												}
											],
											"variable": [
												{
													"id": "6201e7c8-ec1a-487e-9974-48c54193b43f",
													"key": "deployment_id",
													"value": "cupidatat adipisicing",
													"description": "(Required) Identifier for the Deployment",
													"type": "string"
												},
												{
													"id": "25f5b2c6-c52f-4724-8960-29cc8e3239fe",
													"key": "ref_id",
													"value": "cupidatat adipisicing",
													"description": "(Required) User-specified RefId for the Resource",
													"type": "string"
												}
											]
										},
										"description": "Get info about an APM Resource belonging to a given Deployment."
									},
									"response": [
										{
											"id": "11be21c2-ed29-48a2-ac0c-15f2faabf5a8",
											"name": "The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/deployments/:deployment_id/apm/:ref_id?show_metadata=false&show_plans=true&show_plan_logs=false&show_plan_history=false&show_plan_defaults=false&show_settings=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"deployments",
														":deployment_id",
														"apm",
														":ref_id"
													],
													"query": [
														{
															"key": "show_metadata",
															"value": "false"
														},
														{
															"key": "show_plans",
															"value": "true"
														},
														{
															"key": "show_plan_logs",
															"value": "false"
														},
														{
															"key": "show_plan_history",
															"value": "false"
														},
														{
															"key": "show_plan_defaults",
															"value": "false"
														},
														{
															"key": "show_settings",
															"value": "false"
														}
													],
													"variable": [
														{
															"key": "deployment_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) Identifier for the Deployment"
														},
														{
															"key": "ref_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) User-specified RefId for the Resource"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"disabled": false,
													"description": "The error codes associated with the response",
													"key": "x-cloud-error-codes",
													"value": "deployments.deployment_not_found"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
										},
										{
											"id": "37f1a35f-413a-40c2-b7d3-95685d2a9a5c",
											"name": "We have failed you. (code: `deployments.deployment_resource_no_longer_exists`)",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/deployments/:deployment_id/apm/:ref_id?show_metadata=false&show_plans=true&show_plan_logs=false&show_plan_history=false&show_plan_defaults=false&show_settings=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"deployments",
														":deployment_id",
														"apm",
														":ref_id"
													],
													"query": [
														{
															"key": "show_metadata",
															"value": "false"
														},
														{
															"key": "show_plans",
															"value": "true"
														},
														{
															"key": "show_plan_logs",
															"value": "false"
														},
														{
															"key": "show_plan_history",
															"value": "false"
														},
														{
															"key": "show_plan_defaults",
															"value": "false"
														},
														{
															"key": "show_settings",
															"value": "false"
														}
													],
													"variable": [
														{
															"key": "deployment_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) Identifier for the Deployment"
														},
														{
															"key": "ref_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) User-specified RefId for the Resource"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"disabled": false,
													"description": "The error codes associated with the response",
													"key": "x-cloud-error-codes",
													"value": "deployments.deployment_resource_no_longer_exists"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
										},
										{
											"id": "c589107d-a100-472a-ac4d-ab29e22a55e6",
											"name": "Standard response.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/deployments/:deployment_id/apm/:ref_id?show_metadata=false&show_plans=true&show_plan_logs=false&show_plan_history=false&show_plan_defaults=false&show_settings=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"deployments",
														":deployment_id",
														"apm",
														":ref_id"
													],
													"query": [
														{
															"key": "show_metadata",
															"value": "false"
														},
														{
															"key": "show_plans",
															"value": "true"
														},
														{
															"key": "show_plan_logs",
															"value": "false"
														},
														{
															"key": "show_plan_history",
															"value": "false"
														},
														{
															"key": "show_plan_defaults",
															"value": "false"
														},
														{
															"key": "show_settings",
															"value": "false"
														}
													],
													"variable": [
														{
															"key": "deployment_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) Identifier for the Deployment"
														},
														{
															"key": "ref_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) User-specified RefId for the Resource"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"elasticsearch_cluster_ref_id\": \"anim\",\n  \"id\": \"incididunt anim aute\",\n  \"info\": {\n    \"elasticsearch_cluster\": {\n      \"elasticsearch_id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"links\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"external_links\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"healthy\": false,\n    \"id\": \"velit sit\",\n    \"name\": \"dolor non\",\n    \"plan_info\": {\n      \"healthy\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"history\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"current\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"pending\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"status\": \"initializing\",\n    \"topology\": {\n      \"healthy\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"instances\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"apm_server_mode\": \"managed\",\n    \"links\": {\n      \"est9b\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"ullamco_a2\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"sit9\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"region\": \"aute\",\n    \"settings\": {\n      \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"deployment_id\": \"aliqua sunt commodo\",\n    \"metadata\": {\n      \"last_modified\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"version\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"endpoint\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"cloud_id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"aliased_endpoint\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"raw\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"service_url\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"aliased_url\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"services_urls\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"ports\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"ref_id\": \"cupidatat amet in dolore\",\n  \"region\": \"do mollit ali\"\n}"
										}
									]
								},
								{
									"name": "Reset the secret token for an APM resource.",
									"_postman_id": "26ace4f0-c66c-4abd-a0c5-c5751da46e17",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/deployments/:deployment_id/apm/:ref_id/_reset-token",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"deployments",
												":deployment_id",
												"apm",
												":ref_id",
												"_reset-token"
											],
											"variable": [
												{
													"id": "5e359038-87ca-4c26-8262-d0850c6aaadd",
													"key": "deployment_id",
													"value": "cupidatat adipisicing",
													"description": "(Required) Identifier for the Deployment.",
													"type": "string"
												},
												{
													"id": "3bd17402-0509-4484-a724-254174222d6f",
													"key": "ref_id",
													"value": "cupidatat adipisicing",
													"description": "(Required) User-specified RefId for the Resource.",
													"type": "string"
												}
											]
										},
										"description": "Reset the token of an APM resource."
									},
									"response": [
										{
											"id": "200984ea-789b-4293-85fe-3f4e73617bf3",
											"name": "Reset token is not supported when APM is managed by Elastic Agent. (code: `clusters.cluster_plan_state_error`)",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/deployments/:deployment_id/apm/:ref_id/_reset-token",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"deployments",
														":deployment_id",
														"apm",
														":ref_id",
														"_reset-token"
													],
													"variable": [
														{
															"key": "deployment_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) Identifier for the Deployment."
														},
														{
															"key": "ref_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) User-specified RefId for the Resource."
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"disabled": false,
													"description": "The error codes associated with the response",
													"key": "x-cloud-error-codes",
													"value": "clusters.cluster_plan_state_error"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
										},
										{
											"id": "27089538-ef0d-46f1-90ad-be985f505670",
											"name": "* The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)\n* The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/deployments/:deployment_id/apm/:ref_id/_reset-token",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"deployments",
														":deployment_id",
														"apm",
														":ref_id",
														"_reset-token"
													],
													"variable": [
														{
															"key": "deployment_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) Identifier for the Deployment."
														},
														{
															"key": "ref_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) User-specified RefId for the Resource."
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"disabled": false,
													"description": "The error codes associated with the response",
													"key": "x-cloud-error-codes",
													"value": "deployments.deployment_resource_not_found"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
										},
										{
											"id": "4af8630a-54b0-4c56-83c7-4b350fdb9aab",
											"name": "We have failed you. (code: `deployments.deployment_resource_no_longer_exists`)",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/deployments/:deployment_id/apm/:ref_id/_reset-token",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"deployments",
														":deployment_id",
														"apm",
														":ref_id",
														"_reset-token"
													],
													"variable": [
														{
															"key": "deployment_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) Identifier for the Deployment."
														},
														{
															"key": "ref_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) User-specified RefId for the Resource."
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"disabled": false,
													"description": "The error codes associated with the response",
													"key": "x-cloud-error-codes",
													"value": "deployments.deployment_resource_no_longer_exists"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
										},
										{
											"id": "59dded6e-3d05-42e5-8274-077d3b85d38e",
											"name": "Elevated permissions are required. (code: `root.unauthorized.rbac.elevated_permissions_required`)",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/deployments/:deployment_id/apm/:ref_id/_reset-token",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"deployments",
														":deployment_id",
														"apm",
														":ref_id",
														"_reset-token"
													],
													"variable": [
														{
															"key": "deployment_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) Identifier for the Deployment."
														},
														{
															"key": "ref_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) User-specified RefId for the Resource."
														}
													]
												}
											},
											"status": "Retry With",
											"code": 449,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"disabled": false,
													"description": "The error codes associated with the response",
													"key": "x-cloud-error-codes",
													"value": "root.unauthorized.rbac.elevated_permissions_required"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
										},
										{
											"id": "617c6608-d953-4601-bfe4-53aff6acb492",
											"name": "Response containing the new secret token, plan to apply it starts",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/deployments/:deployment_id/apm/:ref_id/_reset-token",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"deployments",
														":deployment_id",
														"apm",
														":ref_id",
														"_reset-token"
													],
													"variable": [
														{
															"key": "deployment_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) Identifier for the Deployment."
														},
														{
															"key": "ref_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) User-specified RefId for the Resource."
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"secret_token\": \"occaecat nisi\",\n  \"apm_id\": \"labore minim aute ipsum\",\n  \"diagnostics\": {}\n}"
										}
									]
								}
							],
							"_postman_id": "f20acd59-efa8-4d0a-aee1-3f4e16d5a3f9",
							"_postman_isSubFolder": true
						},
						{
							"name": "appsearch/{ref id}",
							"item": [
								{
									"name": "read only mode",
									"item": [
										{
											"name": "Set AppSearch read-only status",
											"_postman_id": "aca46971-5223-4a59-b5a9-7d1a73749c88",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"enabled\": true\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/deployments/:deployment_id/appsearch/:ref_id/read_only_mode",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"deployments",
														":deployment_id",
														"appsearch",
														":ref_id",
														"read_only_mode"
													],
													"variable": [
														{
															"id": "2e871e9a-674a-44c4-9916-c87cdaef92f9",
															"key": "deployment_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) Identifier for the Deployment.",
															"type": "string"
														},
														{
															"id": "372d8cb2-f3e8-4780-8cf8-2c4033dda8fe",
															"key": "ref_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) User-specified RefId for the Resource.",
															"type": "string"
														}
													]
												},
												"description": "Enable/Disable read-only mode on the given App Search resource."
											},
											"response": [
												{
													"id": "022ae86f-f74e-42f2-8a04-30c97860a85e",
													"name": "The Resource specified by ref_id cannot be found. (code: `deployments.deployment_resource_not_found`)",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"enabled\": true\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/deployments/:deployment_id/appsearch/:ref_id/read_only_mode",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"deployments",
																":deployment_id",
																"appsearch",
																":ref_id",
																"read_only_mode"
															],
															"variable": [
																{
																	"key": "deployment_id",
																	"value": "cupidatat adipisicing",
																	"description": "(Required) Identifier for the Deployment."
																},
																{
																	"key": "ref_id",
																	"value": "cupidatat adipisicing",
																	"description": "(Required) User-specified RefId for the Resource."
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"disabled": false,
															"description": "The error codes associated with the response",
															"key": "x-cloud-error-codes",
															"value": "deployments.deployment_resource_not_found"
														},
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
												},
												{
													"id": "596d63f3-aa5d-4818-9dd5-4d451c2dd1ef",
													"name": "Elevated permissions are required. (code: `root.unauthorized.rbac.elevated_permissions_required`)",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"enabled\": true\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/deployments/:deployment_id/appsearch/:ref_id/read_only_mode",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"deployments",
																":deployment_id",
																"appsearch",
																":ref_id",
																"read_only_mode"
															],
															"variable": [
																{
																	"key": "deployment_id",
																	"value": "cupidatat adipisicing",
																	"description": "(Required) Identifier for the Deployment."
																},
																{
																	"key": "ref_id",
																	"value": "cupidatat adipisicing",
																	"description": "(Required) User-specified RefId for the Resource."
																}
															]
														}
													},
													"status": "Retry With",
													"code": 449,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"disabled": false,
															"description": "The error codes associated with the response",
															"key": "x-cloud-error-codes",
															"value": "root.unauthorized.rbac.elevated_permissions_required"
														},
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
												},
												{
													"id": "7e3fa28d-31d1-4b05-b478-ce6e7ac7a5ca",
													"name": "Standard response",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"enabled\": true\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/deployments/:deployment_id/appsearch/:ref_id/read_only_mode",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"deployments",
																":deployment_id",
																"appsearch",
																":ref_id",
																"read_only_mode"
															],
															"variable": [
																{
																	"key": "deployment_id",
																	"value": "cupidatat adipisicing",
																	"description": "(Required) Identifier for the Deployment."
																},
																{
																	"key": "ref_id",
																	"value": "cupidatat adipisicing",
																	"description": "(Required) User-specified RefId for the Resource."
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"enabled\": false\n}"
												},
												{
													"id": "dc0a732b-6b82-402a-9f01-e509f1f33845",
													"name": "We have failed you. (code: `deployments.deployment_resource_no_longer_exists`)",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"enabled\": true\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/deployments/:deployment_id/appsearch/:ref_id/read_only_mode",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"deployments",
																":deployment_id",
																"appsearch",
																":ref_id",
																"read_only_mode"
															],
															"variable": [
																{
																	"key": "deployment_id",
																	"value": "cupidatat adipisicing",
																	"description": "(Required) Identifier for the Deployment."
																},
																{
																	"key": "ref_id",
																	"value": "cupidatat adipisicing",
																	"description": "(Required) User-specified RefId for the Resource."
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"disabled": false,
															"description": "The error codes associated with the response",
															"key": "x-cloud-error-codes",
															"value": "deployments.deployment_resource_no_longer_exists"
														},
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Set AppSearch read-only status",
											"_postman_id": "8971e00c-7173-479b-8584-581f424382c0",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/deployments/:deployment_id/appsearch/:ref_id/read_only_mode",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"deployments",
														":deployment_id",
														"appsearch",
														":ref_id",
														"read_only_mode"
													],
													"variable": [
														{
															"id": "d711b76b-2800-439b-8afd-10f85d769911",
															"key": "deployment_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) Identifier for the Deployment.",
															"type": "string"
														},
														{
															"id": "3d406973-4109-4078-a0b1-ebde7cfce96c",
															"key": "ref_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) User-specified RefId for the Resource.",
															"type": "string"
														}
													]
												},
												"description": "Enable/Disable read-only mode on the given App Search resource."
											},
											"response": [
												{
													"id": "0dfe42db-13af-4a63-928f-e0e8ff0db5db",
													"name": "Standard response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/deployments/:deployment_id/appsearch/:ref_id/read_only_mode",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"deployments",
																":deployment_id",
																"appsearch",
																":ref_id",
																"read_only_mode"
															],
															"variable": [
																{
																	"key": "deployment_id",
																	"value": "cupidatat adipisicing",
																	"description": "(Required) Identifier for the Deployment."
																},
																{
																	"key": "ref_id",
																	"value": "cupidatat adipisicing",
																	"description": "(Required) User-specified RefId for the Resource."
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"enabled\": false\n}"
												},
												{
													"id": "866d4749-f0ea-497f-9d86-8a242a15ac8d",
													"name": "The Resource specified by ref_id cannot be found. (code: `deployments.deployment_resource_not_found`)",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/deployments/:deployment_id/appsearch/:ref_id/read_only_mode",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"deployments",
																":deployment_id",
																"appsearch",
																":ref_id",
																"read_only_mode"
															],
															"variable": [
																{
																	"key": "deployment_id",
																	"value": "cupidatat adipisicing",
																	"description": "(Required) Identifier for the Deployment."
																},
																{
																	"key": "ref_id",
																	"value": "cupidatat adipisicing",
																	"description": "(Required) User-specified RefId for the Resource."
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"disabled": false,
															"description": "The error codes associated with the response",
															"key": "x-cloud-error-codes",
															"value": "deployments.deployment_resource_not_found"
														},
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
												},
												{
													"id": "cea53676-1990-4b85-aba6-d621c79d821f",
													"name": "We have failed you. (code: `deployments.deployment_resource_no_longer_exists`)",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/deployments/:deployment_id/appsearch/:ref_id/read_only_mode",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"deployments",
																":deployment_id",
																"appsearch",
																":ref_id",
																"read_only_mode"
															],
															"variable": [
																{
																	"key": "deployment_id",
																	"value": "cupidatat adipisicing",
																	"description": "(Required) Identifier for the Deployment."
																},
																{
																	"key": "ref_id",
																	"value": "cupidatat adipisicing",
																	"description": "(Required) User-specified RefId for the Resource."
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"disabled": false,
															"description": "The error codes associated with the response",
															"key": "x-cloud-error-codes",
															"value": "deployments.deployment_resource_no_longer_exists"
														},
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
												}
											]
										}
									],
									"_postman_id": "585b3993-64c0-4955-9287-af635afd96c4",
									"_postman_isSubFolder": true
								},
								{
									"name": "Get Deployment App Search Resource Info",
									"_postman_id": "afc3d3a3-fc3f-4ec4-b431-c5d6ce96c530",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/deployments/:deployment_id/appsearch/:ref_id?show_metadata=false&show_plans=true&show_plan_logs=false&show_plan_history=false&show_plan_defaults=false&show_settings=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"deployments",
												":deployment_id",
												"appsearch",
												":ref_id"
											],
											"query": [
												{
													"key": "show_metadata",
													"value": "false",
													"description": "Whether to include the full cluster metadata in the response - can be large per cluster and also include credentials."
												},
												{
													"key": "show_plans",
													"value": "true",
													"description": "Whether to include the full current and pending plan information in the response - can be large per cluster."
												},
												{
													"key": "show_plan_logs",
													"value": "false",
													"description": "Whether to include with the current and pending plan information the attempt log - can be very large per cluster."
												},
												{
													"key": "show_plan_history",
													"value": "false",
													"description": "Whether to include with the current and pending plan information the plan history- can be very large per cluster."
												},
												{
													"key": "show_plan_defaults",
													"value": "false",
													"description": "If showing plans, whether to show values that are left at their default value (less readable but more informative)."
												},
												{
													"key": "show_settings",
													"value": "false",
													"description": "Whether to show cluster settings in the response."
												}
											],
											"variable": [
												{
													"id": "c76b9ecf-f233-4e26-a58e-f89b97b422b8",
													"key": "deployment_id",
													"value": "cupidatat adipisicing",
													"description": "(Required) Identifier for the Deployment",
													"type": "string"
												},
												{
													"id": "e6f0bc7f-2036-4942-9809-2220942a7ce6",
													"key": "ref_id",
													"value": "cupidatat adipisicing",
													"description": "(Required) User-specified RefId for the Resource",
													"type": "string"
												}
											]
										},
										"description": "Get info about an App Search Resource belonging to a given Deployment."
									},
									"response": [
										{
											"id": "10596534-48e7-4902-b406-fc53e9022ed5",
											"name": "The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/deployments/:deployment_id/appsearch/:ref_id?show_metadata=false&show_plans=true&show_plan_logs=false&show_plan_history=false&show_plan_defaults=false&show_settings=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"deployments",
														":deployment_id",
														"appsearch",
														":ref_id"
													],
													"query": [
														{
															"key": "show_metadata",
															"value": "false"
														},
														{
															"key": "show_plans",
															"value": "true"
														},
														{
															"key": "show_plan_logs",
															"value": "false"
														},
														{
															"key": "show_plan_history",
															"value": "false"
														},
														{
															"key": "show_plan_defaults",
															"value": "false"
														},
														{
															"key": "show_settings",
															"value": "false"
														}
													],
													"variable": [
														{
															"key": "deployment_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) Identifier for the Deployment"
														},
														{
															"key": "ref_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) User-specified RefId for the Resource"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"disabled": false,
													"description": "The error codes associated with the response",
													"key": "x-cloud-error-codes",
													"value": "deployments.deployment_not_found"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
										},
										{
											"id": "2d4d8c86-2ca3-4d9d-a98d-14873990a682",
											"name": "We have failed you. (code: `deployments.deployment_resource_no_longer_exists`)",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/deployments/:deployment_id/appsearch/:ref_id?show_metadata=false&show_plans=true&show_plan_logs=false&show_plan_history=false&show_plan_defaults=false&show_settings=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"deployments",
														":deployment_id",
														"appsearch",
														":ref_id"
													],
													"query": [
														{
															"key": "show_metadata",
															"value": "false"
														},
														{
															"key": "show_plans",
															"value": "true"
														},
														{
															"key": "show_plan_logs",
															"value": "false"
														},
														{
															"key": "show_plan_history",
															"value": "false"
														},
														{
															"key": "show_plan_defaults",
															"value": "false"
														},
														{
															"key": "show_settings",
															"value": "false"
														}
													],
													"variable": [
														{
															"key": "deployment_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) Identifier for the Deployment"
														},
														{
															"key": "ref_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) User-specified RefId for the Resource"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"disabled": false,
													"description": "The error codes associated with the response",
													"key": "x-cloud-error-codes",
													"value": "deployments.deployment_resource_no_longer_exists"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
										},
										{
											"id": "889c9ea7-90d3-4974-a9d3-5cc948fbc67c",
											"name": "Standard response.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/deployments/:deployment_id/appsearch/:ref_id?show_metadata=false&show_plans=true&show_plan_logs=false&show_plan_history=false&show_plan_defaults=false&show_settings=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"deployments",
														":deployment_id",
														"appsearch",
														":ref_id"
													],
													"query": [
														{
															"key": "show_metadata",
															"value": "false"
														},
														{
															"key": "show_plans",
															"value": "true"
														},
														{
															"key": "show_plan_logs",
															"value": "false"
														},
														{
															"key": "show_plan_history",
															"value": "false"
														},
														{
															"key": "show_plan_defaults",
															"value": "false"
														},
														{
															"key": "show_settings",
															"value": "false"
														}
													],
													"variable": [
														{
															"key": "deployment_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) Identifier for the Deployment"
														},
														{
															"key": "ref_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) User-specified RefId for the Resource"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"elasticsearch_cluster_ref_id\": \"sit adipisicing et\",\n  \"id\": \"ullamco\",\n  \"info\": {\n    \"elasticsearch_cluster\": {\n      \"elasticsearch_id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"links\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"external_links\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"healthy\": true,\n    \"id\": \"irure non reprehenderit laborum Lo\",\n    \"name\": \"eu in\",\n    \"plan_info\": {\n      \"healthy\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"history\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"current\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"pending\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"status\": \"initializing\",\n    \"topology\": {\n      \"healthy\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"instances\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"links\": {\n      \"esse6\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"nisifc_\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"region\": \"occaecat\",\n    \"settings\": {\n      \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"deployment_id\": \"Ut sint eiusmod veniam\",\n    \"metadata\": {\n      \"last_modified\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"version\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"endpoint\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"cloud_id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"aliased_endpoint\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"raw\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"service_url\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"aliased_url\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"services_urls\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"ports\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"ref_id\": \"enim Excepteur labore\",\n  \"region\": \"occaecat voluptate Excepteur sed\"\n}"
										}
									]
								}
							],
							"_postman_id": "142d07fd-b9d4-4207-8837-8342b9cc9340",
							"_postman_isSubFolder": true
						},
						{
							"name": "{stateless resource kind}/{ref id}",
							"item": [
								{
									"name": "Restart Deployment Stateless Resource",
									"_postman_id": "a70a33d0-030d-4276-b73d-96a9d6a3c2df",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/deployments/:deployment_id/:stateless_resource_kind/:ref_id/_restart?cancel_pending=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"deployments",
												":deployment_id",
												":stateless_resource_kind",
												":ref_id",
												"_restart"
											],
											"query": [
												{
													"key": "cancel_pending",
													"value": "false",
													"description": "If true, cancels any pending plans before restarting. If false and there are pending plans, returns an error."
												}
											],
											"variable": [
												{
													"id": "64178ca3-63f4-4d61-b6ce-0833986a724a",
													"key": "deployment_id",
													"value": "cupidatat adipisicing",
													"description": "(Required) Identifier for the Deployment.",
													"type": "string"
												},
												{
													"id": "9c42904b-88f2-4ab9-803a-40f126febd7e",
													"key": "stateless_resource_kind",
													"value": "enterprise_search",
													"description": "(Required) The kind of stateless resource",
													"type": "string"
												},
												{
													"id": "171cc534-3585-418a-83b5-9e8e029002ed",
													"key": "ref_id",
													"value": "cupidatat adipisicing",
													"description": "(Required) User-specified RefId for the Resource.",
													"type": "string"
												}
											]
										},
										"description": "Restarts a Stateless Resource. If a Resource is active: this command re-applies the existing plan but applies a \"cluster_reboot\", which issues a restart command and waits for it to complete. If a Resource is inactive: this command starts it up with the most recent successful plan."
									},
									"response": [
										{
											"id": "3d87455f-3eec-4cbe-ad86-5f528d8c100b",
											"name": "We have failed you. (code: `deployments.deployment_resource_no_longer_exists`)",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/deployments/:deployment_id/:stateless_resource_kind/:ref_id/_restart?cancel_pending=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"deployments",
														":deployment_id",
														":stateless_resource_kind",
														":ref_id",
														"_restart"
													],
													"query": [
														{
															"key": "cancel_pending",
															"value": "false"
														}
													],
													"variable": [
														{
															"key": "deployment_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) Identifier for the Deployment."
														},
														{
															"key": "stateless_resource_kind",
															"value": "enterprise_search",
															"description": "(Required) The kind of stateless resource"
														},
														{
															"key": "ref_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) User-specified RefId for the Resource."
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"disabled": false,
													"description": "The error codes associated with the response",
													"key": "x-cloud-error-codes",
													"value": "deployments.deployment_resource_no_longer_exists"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
										},
										{
											"id": "52fe422f-dd74-46d4-b925-d87fbb597591",
											"name": "The restart command was issued successfully",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/deployments/:deployment_id/:stateless_resource_kind/:ref_id/_restart?cancel_pending=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"deployments",
														":deployment_id",
														":stateless_resource_kind",
														":ref_id",
														"_restart"
													],
													"query": [
														{
															"key": "cancel_pending",
															"value": "false"
														}
													],
													"variable": [
														{
															"key": "deployment_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) Identifier for the Deployment."
														},
														{
															"key": "stateless_resource_kind",
															"value": "enterprise_search",
															"description": "(Required) The kind of stateless resource"
														},
														{
															"key": "ref_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) User-specified RefId for the Resource."
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"warnings\": [\n    {\n      \"code\": \"ex anim o\",\n      \"message\": \"in sit sint ut dese\"\n    },\n    {\n      \"code\": \"nulla sit\",\n      \"message\": \"cupidatat elit adipis\"\n    }\n  ]\n}"
										},
										{
											"id": "7aa2ed80-bab5-4bd1-977b-79c6b38a4039",
											"name": "Elevated permissions are required. (code: `root.unauthorized.rbac.elevated_permissions_required`)",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/deployments/:deployment_id/:stateless_resource_kind/:ref_id/_restart?cancel_pending=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"deployments",
														":deployment_id",
														":stateless_resource_kind",
														":ref_id",
														"_restart"
													],
													"query": [
														{
															"key": "cancel_pending",
															"value": "false"
														}
													],
													"variable": [
														{
															"key": "deployment_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) Identifier for the Deployment."
														},
														{
															"key": "stateless_resource_kind",
															"value": "enterprise_search",
															"description": "(Required) The kind of stateless resource"
														},
														{
															"key": "ref_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) User-specified RefId for the Resource."
														}
													]
												}
											},
											"status": "Retry With",
											"code": 449,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"disabled": false,
													"description": "The error codes associated with the response",
													"key": "x-cloud-error-codes",
													"value": "root.unauthorized.rbac.elevated_permissions_required"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
										},
										{
											"id": "9506b578-a785-4315-bfe2-f6a0863af8cb",
											"name": "The command sent to a Resource found the Resource in an illegal state, the error message gives more details. (code: `deployments.deployment_resource_plan_change_error`)",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/deployments/:deployment_id/:stateless_resource_kind/:ref_id/_restart?cancel_pending=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"deployments",
														":deployment_id",
														":stateless_resource_kind",
														":ref_id",
														"_restart"
													],
													"query": [
														{
															"key": "cancel_pending",
															"value": "false"
														}
													],
													"variable": [
														{
															"key": "deployment_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) Identifier for the Deployment."
														},
														{
															"key": "stateless_resource_kind",
															"value": "enterprise_search",
															"description": "(Required) The kind of stateless resource"
														},
														{
															"key": "ref_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) User-specified RefId for the Resource."
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"disabled": false,
													"description": "The error codes associated with the response",
													"key": "x-cloud-error-codes",
													"value": "deployments.deployment_resource_plan_change_error"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
										},
										{
											"id": "a4e1f9d9-7f86-46e0-bc40-ea59878b3eab",
											"name": "* The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)\n* The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/deployments/:deployment_id/:stateless_resource_kind/:ref_id/_restart?cancel_pending=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"deployments",
														":deployment_id",
														":stateless_resource_kind",
														":ref_id",
														"_restart"
													],
													"query": [
														{
															"key": "cancel_pending",
															"value": "false"
														}
													],
													"variable": [
														{
															"key": "deployment_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) Identifier for the Deployment."
														},
														{
															"key": "stateless_resource_kind",
															"value": "enterprise_search",
															"description": "(Required) The kind of stateless resource"
														},
														{
															"key": "ref_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) User-specified RefId for the Resource."
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"disabled": false,
													"description": "The error codes associated with the response",
													"key": "x-cloud-error-codes",
													"value": "deployments.deployment_resource_not_found"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Shutdown Deployment Stateless Resource",
									"_postman_id": "15f0c464-5372-4cc8-af7f-3f8dde4d5e2a",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/deployments/:deployment_id/:stateless_resource_kind/:ref_id/_shutdown?hide=true&skip_snapshot=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"deployments",
												":deployment_id",
												":stateless_resource_kind",
												":ref_id",
												"_shutdown"
											],
											"query": [
												{
													"key": "hide",
													"value": "true",
													"description": "Hide cluster on shutdown. Hidden clusters are not listed by default. Only applicable for Platform administrators."
												},
												{
													"key": "skip_snapshot",
													"value": "false",
													"description": "If true, will skip taking a snapshot of the cluster before shutting the cluster down (if even possible)"
												}
											],
											"variable": [
												{
													"id": "7be11184-3a17-42bf-8ace-a92942db1396",
													"key": "deployment_id",
													"value": "cupidatat adipisicing",
													"description": "(Required) Identifier for the Deployment.",
													"type": "string"
												},
												{
													"id": "cc782adb-4dd8-4c51-a406-378ee0263753",
													"key": "stateless_resource_kind",
													"value": "enterprise_search",
													"description": "(Required) The kind of stateless resource",
													"type": "string"
												},
												{
													"id": "a471009b-e3e7-4b42-ae4e-4aa67ffb2fa0",
													"key": "ref_id",
													"value": "cupidatat adipisicing",
													"description": "(Required) User-specified RefId for the Resource.",
													"type": "string"
												}
											]
										},
										"description": "Shut down Stateless Resource belonging to a given Deployment.\nKibana cannot be shut down on Elasticsearch Service as it is required for Elasticsearch administrative functions, such as Snapshot Lifecycle Management and version upgrades."
									},
									"response": [
										{
											"id": "2c75a787-9ddb-4a25-b88f-14e9820e26b4",
											"name": "We have failed you. (code: `deployments.deployment_resource_no_longer_exists`)",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/deployments/:deployment_id/:stateless_resource_kind/:ref_id/_shutdown?hide=true&skip_snapshot=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"deployments",
														":deployment_id",
														":stateless_resource_kind",
														":ref_id",
														"_shutdown"
													],
													"query": [
														{
															"key": "hide",
															"value": "true"
														},
														{
															"key": "skip_snapshot",
															"value": "false"
														}
													],
													"variable": [
														{
															"key": "deployment_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) Identifier for the Deployment."
														},
														{
															"key": "stateless_resource_kind",
															"value": "enterprise_search",
															"description": "(Required) The kind of stateless resource"
														},
														{
															"key": "ref_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) User-specified RefId for the Resource."
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"disabled": false,
													"description": "The error codes associated with the response",
													"key": "x-cloud-error-codes",
													"value": "deployments.deployment_resource_no_longer_exists"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
										},
										{
											"id": "49156fc4-04b1-4352-9581-113e7410eeb6",
											"name": "Standard response",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/deployments/:deployment_id/:stateless_resource_kind/:ref_id/_shutdown?hide=true&skip_snapshot=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"deployments",
														":deployment_id",
														":stateless_resource_kind",
														":ref_id",
														"_shutdown"
													],
													"query": [
														{
															"key": "hide",
															"value": "true"
														},
														{
															"key": "skip_snapshot",
															"value": "false"
														}
													],
													"variable": [
														{
															"key": "deployment_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) Identifier for the Deployment."
														},
														{
															"key": "stateless_resource_kind",
															"value": "enterprise_search",
															"description": "(Required) The kind of stateless resource"
														},
														{
															"key": "ref_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) User-specified RefId for the Resource."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"warnings\": [\n    {\n      \"code\": \"ex anim o\",\n      \"message\": \"in sit sint ut dese\"\n    },\n    {\n      \"code\": \"nulla sit\",\n      \"message\": \"cupidatat elit adipis\"\n    }\n  ]\n}"
										},
										{
											"id": "5d8c733a-8918-4ac0-a100-f1d112e51dec",
											"name": "Parameter is restricted and can only be set by a Platform administrator. (code: `deployments.restricted_parameter`)",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/deployments/:deployment_id/:stateless_resource_kind/:ref_id/_shutdown?hide=true&skip_snapshot=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"deployments",
														":deployment_id",
														":stateless_resource_kind",
														":ref_id",
														"_shutdown"
													],
													"query": [
														{
															"key": "hide",
															"value": "true"
														},
														{
															"key": "skip_snapshot",
															"value": "false"
														}
													],
													"variable": [
														{
															"key": "deployment_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) Identifier for the Deployment."
														},
														{
															"key": "stateless_resource_kind",
															"value": "enterprise_search",
															"description": "(Required) The kind of stateless resource"
														},
														{
															"key": "ref_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) User-specified RefId for the Resource."
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"disabled": false,
													"description": "The error codes associated with the response",
													"key": "x-cloud-error-codes",
													"value": "deployments.restricted_parameter"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
										},
										{
											"id": "e6afd7fc-a5d7-4f5a-b372-3aed1e0cfb7f",
											"name": "* The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)\n* The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/deployments/:deployment_id/:stateless_resource_kind/:ref_id/_shutdown?hide=true&skip_snapshot=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"deployments",
														":deployment_id",
														":stateless_resource_kind",
														":ref_id",
														"_shutdown"
													],
													"query": [
														{
															"key": "hide",
															"value": "true"
														},
														{
															"key": "skip_snapshot",
															"value": "false"
														}
													],
													"variable": [
														{
															"key": "deployment_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) Identifier for the Deployment."
														},
														{
															"key": "stateless_resource_kind",
															"value": "enterprise_search",
															"description": "(Required) The kind of stateless resource"
														},
														{
															"key": "ref_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) User-specified RefId for the Resource."
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"disabled": false,
													"description": "The error codes associated with the response",
													"key": "x-cloud-error-codes",
													"value": "deployments.deployment_resource_not_found"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
										},
										{
											"id": "f0d6d785-9e45-4638-a3a2-ba371da7d385",
											"name": "Elevated permissions are required. (code: `root.unauthorized.rbac.elevated_permissions_required`)",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/deployments/:deployment_id/:stateless_resource_kind/:ref_id/_shutdown?hide=true&skip_snapshot=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"deployments",
														":deployment_id",
														":stateless_resource_kind",
														":ref_id",
														"_shutdown"
													],
													"query": [
														{
															"key": "hide",
															"value": "true"
														},
														{
															"key": "skip_snapshot",
															"value": "false"
														}
													],
													"variable": [
														{
															"key": "deployment_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) Identifier for the Deployment."
														},
														{
															"key": "stateless_resource_kind",
															"value": "enterprise_search",
															"description": "(Required) The kind of stateless resource"
														},
														{
															"key": "ref_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) User-specified RefId for the Resource."
														}
													]
												}
											},
											"status": "Retry With",
											"code": 449,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"disabled": false,
													"description": "The error codes associated with the response",
													"key": "x-cloud-error-codes",
													"value": "root.unauthorized.rbac.elevated_permissions_required"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Upgrade Kibana, APM, Integrations Server, AppSearch, Enterprise Search inside Deployment",
									"_postman_id": "9d655822-b911-4cc0-bfdb-b833cb5eb344",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/deployments/:deployment_id/:stateless_resource_kind/:ref_id/_upgrade?validate_only=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"deployments",
												":deployment_id",
												":stateless_resource_kind",
												":ref_id",
												"_upgrade"
											],
											"query": [
												{
													"key": "validate_only",
													"value": "false",
													"description": "When `true`, returns the update version without performing the upgrade"
												}
											],
											"variable": [
												{
													"id": "6066beb4-e45d-49d3-bf56-2a4b89545c06",
													"key": "deployment_id",
													"value": "cupidatat adipisicing",
													"description": "(Required) Identifier for the Deployment.",
													"type": "string"
												},
												{
													"id": "07261a7e-d96d-4edf-bdbb-5c3e22a672bb",
													"key": "stateless_resource_kind",
													"value": "enterprise_search",
													"description": "(Required) The kind of stateless resource",
													"type": "string"
												},
												{
													"id": "783dfafe-16f4-4da2-bab9-0f3b3bd64fe2",
													"key": "ref_id",
													"value": "cupidatat adipisicing",
													"description": "(Required) User-specified RefId for the Resource.",
													"type": "string"
												}
											]
										},
										"description": "Upgrades a running cluster."
									},
									"response": [
										{
											"id": "65b6259d-8084-4e27-a779-9f0fad7c89e5",
											"name": "Elevated permissions are required. (code: `root.unauthorized.rbac.elevated_permissions_required`)",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/deployments/:deployment_id/:stateless_resource_kind/:ref_id/_upgrade?validate_only=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"deployments",
														":deployment_id",
														":stateless_resource_kind",
														":ref_id",
														"_upgrade"
													],
													"query": [
														{
															"key": "validate_only",
															"value": "false"
														}
													],
													"variable": [
														{
															"key": "deployment_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) Identifier for the Deployment."
														},
														{
															"key": "stateless_resource_kind",
															"value": "enterprise_search",
															"description": "(Required) The kind of stateless resource"
														},
														{
															"key": "ref_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) User-specified RefId for the Resource."
														}
													]
												}
											},
											"status": "Retry With",
											"code": 449,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"disabled": false,
													"description": "The error codes associated with the response",
													"key": "x-cloud-error-codes",
													"value": "root.unauthorized.rbac.elevated_permissions_required"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
										},
										{
											"id": "afa4e0f0-422c-4a07-9e19-2277d5e56bd9",
											"name": "* The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)\n* The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/deployments/:deployment_id/:stateless_resource_kind/:ref_id/_upgrade?validate_only=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"deployments",
														":deployment_id",
														":stateless_resource_kind",
														":ref_id",
														"_upgrade"
													],
													"query": [
														{
															"key": "validate_only",
															"value": "false"
														}
													],
													"variable": [
														{
															"key": "deployment_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) Identifier for the Deployment."
														},
														{
															"key": "stateless_resource_kind",
															"value": "enterprise_search",
															"description": "(Required) The kind of stateless resource"
														},
														{
															"key": "ref_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) User-specified RefId for the Resource."
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"disabled": false,
													"description": "The error codes associated with the response",
													"key": "x-cloud-error-codes",
													"value": "deployments.deployment_resource_not_found"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
										},
										{
											"id": "c468ed0f-aed6-4e7a-9911-4714a7181cdb",
											"name": "The upgrade command was issued successfully. Use the \"GET\" command on the /{deployment_id} resource to monitor progress",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/deployments/:deployment_id/:stateless_resource_kind/:ref_id/_upgrade?validate_only=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"deployments",
														":deployment_id",
														":stateless_resource_kind",
														":ref_id",
														"_upgrade"
													],
													"query": [
														{
															"key": "validate_only",
															"value": "false"
														}
													],
													"variable": [
														{
															"key": "deployment_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) Identifier for the Deployment."
														},
														{
															"key": "stateless_resource_kind",
															"value": "enterprise_search",
															"description": "(Required) The kind of stateless resource"
														},
														{
															"key": "ref_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) User-specified RefId for the Resource."
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"resource_id\": \"dolor aute nisi tempor \",\n  \"stack_version\": \"eiusmod aliqua\"\n}"
										}
									]
								}
							],
							"_postman_id": "fdd6dc3b-a5c0-4620-b034-26627efabf66",
							"_postman_isSubFolder": true
						},
						{
							"name": "Update Deployment",
							"_postman_id": "bdb695fe-3787-4465-8296-4adb64287250",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"prune_orphans\": true,\n  \"name\": \"mollit Lorem\",\n  \"settings\": {\n    \"autoscaling_enabled\": false,\n    \"observability\": {\n      \"metrics\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"logging\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"alias\": \"proident dolore sunt fugiat\",\n  \"resources\": {\n    \"enterprise_search\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"kibana\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"elasticsearch\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"apm\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"appsearch\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"integrations_server\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  },\n  \"metadata\": {\n    \"tags\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/deployments/:deployment_id?hide_pruned_orphans=false&skip_snapshot=false&validate_only=false&version=cupidatat adipisicing",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"deployments",
										":deployment_id"
									],
									"query": [
										{
											"key": "hide_pruned_orphans",
											"value": "false",
											"description": "Whether or not to hide orphaned resources that were shut down (relevant if prune on the request is true)"
										},
										{
											"key": "skip_snapshot",
											"value": "false",
											"description": "Whether or not to skip snapshots before shutting down orphaned resources (relevant if prune on the request is true)"
										},
										{
											"key": "validate_only",
											"value": "false",
											"description": "If true, will just validate the Deployment definition but will not perform the update"
										},
										{
											"key": "version",
											"value": "cupidatat adipisicing",
											"description": "If specified then checks for conflicts against the version stored in the persistent store (returned in 'x-cloud-resource-version' of the GET request)"
										}
									],
									"variable": [
										{
											"id": "db435474-9cb8-4507-a3db-6bf0002d4d9c",
											"key": "deployment_id",
											"value": "cupidatat adipisicing",
											"description": "(Required) Identifier for the Deployment",
											"type": "string"
										}
									]
								},
								"description": "Updates a Deployment."
							},
							"response": [
								{
									"id": "071d6b65-85ea-4c20-96c0-eb5c2da07dcc",
									"name": "The request was valid and the deployment was updated.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"prune_orphans\": true,\n  \"name\": \"ame\",\n  \"settings\": {\n    \"autoscaling_enabled\": false,\n    \"observability\": {\n      \"metrics\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"logging\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"alias\": \"dolore eu sed\",\n  \"resources\": {\n    \"enterprise_search\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"kibana\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"elasticsearch\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"apm\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"appsearch\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"integrations_server\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  },\n  \"metadata\": {\n    \"tags\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/deployments/:deployment_id?hide_pruned_orphans=false&skip_snapshot=false&validate_only=false&version=cupidatat adipisicing",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"deployments",
												":deployment_id"
											],
											"query": [
												{
													"key": "hide_pruned_orphans",
													"value": "false"
												},
												{
													"key": "skip_snapshot",
													"value": "false"
												},
												{
													"key": "validate_only",
													"value": "false"
												},
												{
													"key": "version",
													"value": "cupidatat adipisicing"
												}
											],
											"variable": [
												{
													"key": "deployment_id",
													"value": "cupidatat adipisicing",
													"description": "(Required) Identifier for the Deployment"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"disabled": false,
											"description": "The date-time when the resource was last modified (ISO format relative to UTC)",
											"key": "x-cloud-resource-last-modified",
											"value": "cupidatat adipisicing"
										},
										{
											"disabled": false,
											"description": "The date-time when the resource was created (ISO format relative to UTC)",
											"key": "x-cloud-resource-created",
											"value": "cupidatat adipisicing"
										},
										{
											"disabled": false,
											"description": "The resource version, which is used to avoid update conflicts with concurrent operations",
											"key": "x-cloud-resource-version",
											"value": "cupidatat adipisicing"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"id\": \"Ut officia\",\n  \"name\": \"in\",\n  \"resources\": [\n    {\n      \"id\": \"in eu\",\n      \"kind\": \"eu id\",\n      \"ref_id\": \"dolore in cillum\",\n      \"region\": \"aute ut\",\n      \"elasticsearch_cluster_ref_id\": \"enim \",\n      \"cloud_id\": \"ex Excepteur ut\",\n      \"secret_token\": \"mollit\",\n      \"warnings\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"credentials\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"id\": \"Lorem commodo occaecat\",\n      \"kind\": \"officia ea proident cillum\",\n      \"ref_id\": \"dol\",\n      \"region\": \"pariatur culpa commodo sed proident\",\n      \"elasticsearch_cluster_ref_id\": \"velit aliqua proident exercitation\",\n      \"cloud_id\": \"Lorem\",\n      \"secret_token\": \"commodo\",\n      \"warnings\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"credentials\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"alias\": \"velit dolore et\",\n  \"diagnostics\": {\n    \"creates\": {\n      \"enterprise_search\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"kibana\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"elasticsearch\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"apm\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"appsearch\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"integrations_server\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"updates\": {\n      \"enterprise_search\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"kibana\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"elasticsearch\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"apm\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"appsearch\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"integrations_server\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"shutdown_resources\": {\n    \"apm\": [\n      \"aliqua sed Duis est\",\n      \"consectetur\"\n    ],\n    \"appsearch\": [\n      \"dolore id\",\n      \"eiusmod dolore ex tempor\"\n    ],\n    \"elasticsearch\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"enterprise_search\": [\n      \"eu e\",\n      \"proident cillum deserunt\"\n    ],\n    \"integrations_server\": [\n      \"labore\",\n      \"quis\"\n    ],\n    \"kibana\": [\n      \"reprehenderit cillum an\",\n      \"exercit\"\n    ]\n  }\n}"
								},
								{
									"id": "91c6efde-b5e2-4ec9-8933-9ee716440241",
									"name": "The deployment request had errors.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"prune_orphans\": true,\n  \"name\": \"ame\",\n  \"settings\": {\n    \"autoscaling_enabled\": false,\n    \"observability\": {\n      \"metrics\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"logging\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"alias\": \"dolore eu sed\",\n  \"resources\": {\n    \"enterprise_search\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"kibana\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"elasticsearch\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"apm\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"appsearch\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"integrations_server\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  },\n  \"metadata\": {\n    \"tags\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/deployments/:deployment_id?hide_pruned_orphans=false&skip_snapshot=false&validate_only=false&version=cupidatat adipisicing",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"deployments",
												":deployment_id"
											],
											"query": [
												{
													"key": "hide_pruned_orphans",
													"value": "false"
												},
												{
													"key": "skip_snapshot",
													"value": "false"
												},
												{
													"key": "validate_only",
													"value": "false"
												},
												{
													"key": "version",
													"value": "cupidatat adipisicing"
												}
											],
											"variable": [
												{
													"key": "deployment_id",
													"value": "cupidatat adipisicing",
													"description": "(Required) Identifier for the Deployment"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
								},
								{
									"id": "9d45919b-88e6-4ab4-8387-b342d54dd866",
									"name": "You are not authorized to perform this action.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"prune_orphans\": true,\n  \"name\": \"ame\",\n  \"settings\": {\n    \"autoscaling_enabled\": false,\n    \"observability\": {\n      \"metrics\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"logging\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"alias\": \"dolore eu sed\",\n  \"resources\": {\n    \"enterprise_search\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"kibana\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"elasticsearch\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"apm\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"appsearch\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"integrations_server\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  },\n  \"metadata\": {\n    \"tags\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/deployments/:deployment_id?hide_pruned_orphans=false&skip_snapshot=false&validate_only=false&version=cupidatat adipisicing",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"deployments",
												":deployment_id"
											],
											"query": [
												{
													"key": "hide_pruned_orphans",
													"value": "false"
												},
												{
													"key": "skip_snapshot",
													"value": "false"
												},
												{
													"key": "validate_only",
													"value": "false"
												},
												{
													"key": "version",
													"value": "cupidatat adipisicing"
												}
											],
											"variable": [
												{
													"key": "deployment_id",
													"value": "cupidatat adipisicing",
													"description": "(Required) Identifier for the Deployment"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
								},
								{
									"id": "ed46fc3f-33e9-4b0f-93a4-36e72d42c457",
									"name": "The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"prune_orphans\": true,\n  \"name\": \"ame\",\n  \"settings\": {\n    \"autoscaling_enabled\": false,\n    \"observability\": {\n      \"metrics\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"logging\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"alias\": \"dolore eu sed\",\n  \"resources\": {\n    \"enterprise_search\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"kibana\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"elasticsearch\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"apm\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"appsearch\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"integrations_server\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  },\n  \"metadata\": {\n    \"tags\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/deployments/:deployment_id?hide_pruned_orphans=false&skip_snapshot=false&validate_only=false&version=cupidatat adipisicing",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"deployments",
												":deployment_id"
											],
											"query": [
												{
													"key": "hide_pruned_orphans",
													"value": "false"
												},
												{
													"key": "skip_snapshot",
													"value": "false"
												},
												{
													"key": "validate_only",
													"value": "false"
												},
												{
													"key": "version",
													"value": "cupidatat adipisicing"
												}
											],
											"variable": [
												{
													"key": "deployment_id",
													"value": "cupidatat adipisicing",
													"description": "(Required) Identifier for the Deployment"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"disabled": false,
											"description": "The error codes associated with the response",
											"key": "x-cloud-error-codes",
											"value": "deployments.deployment_not_found"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Get Deployment",
							"_postman_id": "81b5b344-8701-46f8-a73e-17ff4f960c06",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/deployments/:deployment_id?show_security=false&show_metadata=false&show_plans=true&show_plan_logs=false&show_plan_history=false&show_plan_defaults=false&convert_legacy_plans=false&show_system_alerts=0&show_settings=false&enrich_with_template=true&force_all_plan_history=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"deployments",
										":deployment_id"
									],
									"query": [
										{
											"key": "show_security",
											"value": "false",
											"description": "Whether to include the Elasticsearch 2.x security information in the response - can be large per cluster and also include credentials"
										},
										{
											"key": "show_metadata",
											"value": "false",
											"description": "Whether to include the full cluster metadata in the response - can be large per cluster and also include credentials"
										},
										{
											"key": "show_plans",
											"value": "true",
											"description": "Whether to include the full current and pending plan information in the response - can be large per cluster"
										},
										{
											"key": "show_plan_logs",
											"value": "false",
											"description": "Whether to include with the current and pending plan information the attempt log - can be very large per cluster"
										},
										{
											"key": "show_plan_history",
											"value": "false",
											"description": "Whether to include the plan history with the current and pending plan information. The results can be very large per cluster.\n By default, if a given resource kind (e.g. Elasticsearch, Kibana, etc.) has more than 100 plans\n (which should be very rare, most likely caused by a bug) only 100 plans are returned for the given resource type:\n The first 10 plans, and the last 90 plans for that resource type.\n If ALL of the plans are desired, pass the `force_all_plan_history` parameter with a value of `true`.\n"
										},
										{
											"key": "show_plan_defaults",
											"value": "false",
											"description": "If showing plans, whether to show values that are left at their default value (less readable but more informative)"
										},
										{
											"key": "convert_legacy_plans",
											"value": "false",
											"description": "If showing plans, whether to leave pre-2.0.0 plans in their legacy format (the default), or whether to update them to 2.0.x+ format (if 'true')"
										},
										{
											"key": "show_system_alerts",
											"value": "0",
											"description": "Number of system alerts (such as forced restarts due to memory limits) to be included in the response - can be large per cluster. Negative numbers or 0 will not return field."
										},
										{
											"key": "show_settings",
											"value": "false",
											"description": "Whether to show cluster settings in the response."
										},
										{
											"key": "enrich_with_template",
											"value": "true",
											"description": "If showing plans, whether to enrich the plan by including the missing elements from the deployment template it is based on"
										},
										{
											"key": "force_all_plan_history",
											"value": "false",
											"description": "Force show the entire plan history no matter how long.\n As noted in the `show_plan_history` parameter description, by default, a maximum of 100 plans are shown per resource. \n If `true`, this parameter overrides the default, and ALL plans are returned.\n Use with care as the plan history can be VERY large. Consider pairing with `show_plan_logs=false`.\n "
										}
									],
									"variable": [
										{
											"id": "3aea8a52-3ff9-4e9f-9db0-3353e173d1b9",
											"key": "deployment_id",
											"value": "cupidatat adipisicing",
											"description": "(Required) Identifier for the Deployment",
											"type": "string"
										}
									]
								},
								"description": "Retrieves information about a Deployment."
							},
							"response": [
								{
									"id": "3bc80ef9-09be-48e1-b9d4-95b0a691ac6a",
									"name": "You are not authorized to perform this action.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/deployments/:deployment_id?show_security=false&show_metadata=false&show_plans=true&show_plan_logs=false&show_plan_history=false&show_plan_defaults=false&convert_legacy_plans=false&show_system_alerts=0&show_settings=false&enrich_with_template=true&force_all_plan_history=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"deployments",
												":deployment_id"
											],
											"query": [
												{
													"key": "show_security",
													"value": "false"
												},
												{
													"key": "show_metadata",
													"value": "false"
												},
												{
													"key": "show_plans",
													"value": "true"
												},
												{
													"key": "show_plan_logs",
													"value": "false"
												},
												{
													"key": "show_plan_history",
													"value": "false"
												},
												{
													"key": "show_plan_defaults",
													"value": "false"
												},
												{
													"key": "convert_legacy_plans",
													"value": "false"
												},
												{
													"key": "show_system_alerts",
													"value": "0"
												},
												{
													"key": "show_settings",
													"value": "false"
												},
												{
													"key": "enrich_with_template",
													"value": "true"
												},
												{
													"key": "force_all_plan_history",
													"value": "false"
												}
											],
											"variable": [
												{
													"key": "deployment_id",
													"value": "cupidatat adipisicing",
													"description": "(Required) Identifier for the Deployment"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
								},
								{
									"id": "7dba83e5-f746-4acf-b74b-458612b68dbf",
									"name": "The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/deployments/:deployment_id?show_security=false&show_metadata=false&show_plans=true&show_plan_logs=false&show_plan_history=false&show_plan_defaults=false&convert_legacy_plans=false&show_system_alerts=0&show_settings=false&enrich_with_template=true&force_all_plan_history=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"deployments",
												":deployment_id"
											],
											"query": [
												{
													"key": "show_security",
													"value": "false"
												},
												{
													"key": "show_metadata",
													"value": "false"
												},
												{
													"key": "show_plans",
													"value": "true"
												},
												{
													"key": "show_plan_logs",
													"value": "false"
												},
												{
													"key": "show_plan_history",
													"value": "false"
												},
												{
													"key": "show_plan_defaults",
													"value": "false"
												},
												{
													"key": "convert_legacy_plans",
													"value": "false"
												},
												{
													"key": "show_system_alerts",
													"value": "0"
												},
												{
													"key": "show_settings",
													"value": "false"
												},
												{
													"key": "enrich_with_template",
													"value": "true"
												},
												{
													"key": "force_all_plan_history",
													"value": "false"
												}
											],
											"variable": [
												{
													"key": "deployment_id",
													"value": "cupidatat adipisicing",
													"description": "(Required) Identifier for the Deployment"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"disabled": false,
											"description": "The error codes associated with the response",
											"key": "x-cloud-error-codes",
											"value": "deployments.deployment_not_found"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
								},
								{
									"id": "aa1802a7-e648-4a2b-9ee4-c9f766bf358b",
									"name": "The Deployment info response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/deployments/:deployment_id?show_security=false&show_metadata=false&show_plans=true&show_plan_logs=false&show_plan_history=false&show_plan_defaults=false&convert_legacy_plans=false&show_system_alerts=0&show_settings=false&enrich_with_template=true&force_all_plan_history=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"deployments",
												":deployment_id"
											],
											"query": [
												{
													"key": "show_security",
													"value": "false"
												},
												{
													"key": "show_metadata",
													"value": "false"
												},
												{
													"key": "show_plans",
													"value": "true"
												},
												{
													"key": "show_plan_logs",
													"value": "false"
												},
												{
													"key": "show_plan_history",
													"value": "false"
												},
												{
													"key": "show_plan_defaults",
													"value": "false"
												},
												{
													"key": "convert_legacy_plans",
													"value": "false"
												},
												{
													"key": "show_system_alerts",
													"value": "0"
												},
												{
													"key": "show_settings",
													"value": "false"
												},
												{
													"key": "enrich_with_template",
													"value": "true"
												},
												{
													"key": "force_all_plan_history",
													"value": "false"
												}
											],
											"variable": [
												{
													"key": "deployment_id",
													"value": "cupidatat adipisicing",
													"description": "(Required) Identifier for the Deployment"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"disabled": false,
											"description": "The date-time when the resource was last modified (ISO format relative to UTC)",
											"key": "x-cloud-resource-last-modified",
											"value": "cupidatat adipisicing"
										},
										{
											"disabled": false,
											"description": "The date-time when the resource was created (ISO format relative to UTC)",
											"key": "x-cloud-resource-created",
											"value": "cupidatat adipisicing"
										},
										{
											"disabled": false,
											"description": "The resource version, which is used to avoid update conflicts with concurrent operations",
											"key": "x-cloud-resource-version",
											"value": "cupidatat adipisicing"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"healthy\": true,\n  \"id\": \"occaecat adipisicing enim sint\",\n  \"name\": \"culpa proident pariatur amet\",\n  \"resources\": {\n    \"apm\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"appsearch\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"elasticsearch\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"enterprise_search\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"integrations_server\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"kibana\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  },\n  \"settings\": {\n    \"autoscaling_enabled\": false,\n    \"observability\": {\n      \"metrics\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"logging\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"traffic_filter_settings\": {\n      \"rulesets\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"alias\": \"laborum\",\n  \"observability\": {\n    \"healthy\": true,\n    \"metrics\": {\n      \"healthy\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"issues\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"urls\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"logging\": {\n      \"healthy\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"issues\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"urls\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"issues\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  },\n  \"metadata\": {\n    \"tags\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  }\n}"
								}
							]
						},
						{
							"name": "Restores a shutdown Deployment",
							"_postman_id": "dd193bce-b939-4b08-aa1e-b0a76c48fd27",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/deployments/:deployment_id/_restore?restore_snapshot=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"deployments",
										":deployment_id",
										"_restore"
									],
									"query": [
										{
											"key": "restore_snapshot",
											"value": "false",
											"description": "Whether or not to restore a snapshot for those resources that allow it."
										}
									],
									"variable": [
										{
											"id": "0fe7fe8d-3f39-4c9b-872a-fd90f3d0f409",
											"key": "deployment_id",
											"value": "cupidatat adipisicing",
											"description": "(Required) Identifier for the Deployment",
											"type": "string"
										}
									]
								},
								"description": "Restores all resources in a Deployment."
							},
							"response": [
								{
									"id": "94f1f4b0-0509-4e7f-8a6a-2fb77c75c1f8",
									"name": "The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/deployments/:deployment_id/_restore?restore_snapshot=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"deployments",
												":deployment_id",
												"_restore"
											],
											"query": [
												{
													"key": "restore_snapshot",
													"value": "false"
												}
											],
											"variable": [
												{
													"key": "deployment_id",
													"value": "cupidatat adipisicing",
													"description": "(Required) Identifier for the Deployment"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"disabled": false,
											"description": "The error codes associated with the response",
											"key": "x-cloud-error-codes",
											"value": "deployments.deployment_not_found"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
								},
								{
									"id": "ee8722a0-e733-4e9e-a69d-9f3bc856c377",
									"name": "The request was valid and the resources of the deployment were restored.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/deployments/:deployment_id/_restore?restore_snapshot=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"deployments",
												":deployment_id",
												"_restore"
											],
											"query": [
												{
													"key": "restore_snapshot",
													"value": "false"
												}
											],
											"variable": [
												{
													"key": "deployment_id",
													"value": "cupidatat adipisicing",
													"description": "(Required) Identifier for the Deployment"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"id\": \"et ullamco dolor nisi nulla\"\n}"
								},
								{
									"id": "f94d5991-1737-40aa-b608-48b3cb05d077",
									"name": "You are not authorized to perform this action.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/deployments/:deployment_id/_restore?restore_snapshot=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"deployments",
												":deployment_id",
												"_restore"
											],
											"query": [
												{
													"key": "restore_snapshot",
													"value": "false"
												}
											],
											"variable": [
												{
													"key": "deployment_id",
													"value": "cupidatat adipisicing",
													"description": "(Required) Identifier for the Deployment"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
								},
								{
									"id": "fb1ca648-3e4c-4b86-bdf4-751ac530b6cb",
									"name": "There are Elasticsearch resources in the deployment which are not shut down.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/deployments/:deployment_id/_restore?restore_snapshot=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"deployments",
												":deployment_id",
												"_restore"
											],
											"query": [
												{
													"key": "restore_snapshot",
													"value": "false"
												}
											],
											"variable": [
												{
													"key": "deployment_id",
													"value": "cupidatat adipisicing",
													"description": "(Required) Identifier for the Deployment"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Build request to migrate deployment to a different template",
							"_postman_id": "45e8380a-0856-4833-908d-7bfced898211",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/deployments/:deployment_id/migrate_template?template_id=cupidatat adipisicing",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"deployments",
										":deployment_id",
										"migrate_template"
									],
									"query": [
										{
											"key": "template_id",
											"value": "cupidatat adipisicing",
											"description": "(Required) The ID of the deployment template to migrate to"
										}
									],
									"variable": [
										{
											"id": "efa6e974-fa48-4175-af7a-2ede54d2a566",
											"key": "deployment_id",
											"value": "cupidatat adipisicing",
											"description": "(Required) Identifier for the Deployment",
											"type": "string"
										}
									]
								},
								"description": "Returns a deployment update request that would migrate this deployment to a different template."
							},
							"response": [
								{
									"id": "106eaea2-9a70-47f1-bde7-fc927a13f5b4",
									"name": "The request was valid and the deployment can be migrated to the template with the provided ID.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/deployments/:deployment_id/migrate_template?template_id=cupidatat adipisicing",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"deployments",
												":deployment_id",
												"migrate_template"
											],
											"query": [
												{
													"key": "template_id",
													"value": "cupidatat adipisicing"
												}
											],
											"variable": [
												{
													"key": "deployment_id",
													"value": "cupidatat adipisicing",
													"description": "(Required) Identifier for the Deployment"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"prune_orphans\": true,\n  \"name\": \"ame\",\n  \"settings\": {\n    \"autoscaling_enabled\": false,\n    \"observability\": {\n      \"metrics\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"logging\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"alias\": \"dolore eu sed\",\n  \"resources\": {\n    \"enterprise_search\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"kibana\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"elasticsearch\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"apm\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"appsearch\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"integrations_server\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  },\n  \"metadata\": {\n    \"tags\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  }\n}"
								},
								{
									"id": "51dd8531-4d8b-44c7-a255-98bf2b0104d6",
									"name": "You are not authorized to perform this action.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/deployments/:deployment_id/migrate_template?template_id=cupidatat adipisicing",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"deployments",
												":deployment_id",
												"migrate_template"
											],
											"query": [
												{
													"key": "template_id",
													"value": "cupidatat adipisicing"
												}
											],
											"variable": [
												{
													"key": "deployment_id",
													"value": "cupidatat adipisicing",
													"description": "(Required) Identifier for the Deployment"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
								},
								{
									"id": "5ff2afe4-c2ca-4926-85e2-cf96b3d99f34",
									"name": "The deployment cannot be successfully migrated to the template with the provided ID.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/deployments/:deployment_id/migrate_template?template_id=cupidatat adipisicing",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"deployments",
												":deployment_id",
												"migrate_template"
											],
											"query": [
												{
													"key": "template_id",
													"value": "cupidatat adipisicing"
												}
											],
											"variable": [
												{
													"key": "deployment_id",
													"value": "cupidatat adipisicing",
													"description": "(Required) Identifier for the Deployment"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
								},
								{
									"id": "a3c614c2-ddc9-4da2-8672-01d9e481c1d5",
									"name": "The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/deployments/:deployment_id/migrate_template?template_id=cupidatat adipisicing",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"deployments",
												":deployment_id",
												"migrate_template"
											],
											"query": [
												{
													"key": "template_id",
													"value": "cupidatat adipisicing"
												}
											],
											"variable": [
												{
													"key": "deployment_id",
													"value": "cupidatat adipisicing",
													"description": "(Required) Identifier for the Deployment"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"disabled": false,
											"description": "The error codes associated with the response",
											"key": "x-cloud-error-codes",
											"value": "deployments.deployment_not_found"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Get Deployment Enterprise Search Resource Info",
							"_postman_id": "7c2d13a3-b624-4baf-8593-0797bd6d37dc",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/deployments/:deployment_id/enterprise_search/:ref_id?show_metadata=false&show_plans=true&show_plan_logs=false&show_plan_history=false&show_plan_defaults=false&show_settings=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"deployments",
										":deployment_id",
										"enterprise_search",
										":ref_id"
									],
									"query": [
										{
											"key": "show_metadata",
											"value": "false",
											"description": "Whether to include the full cluster metadata in the response - can be large per cluster and also include credentials."
										},
										{
											"key": "show_plans",
											"value": "true",
											"description": "Whether to include the full current and pending plan information in the response - can be large per cluster."
										},
										{
											"key": "show_plan_logs",
											"value": "false",
											"description": "Whether to include with the current and pending plan information the attempt log - can be very large per cluster."
										},
										{
											"key": "show_plan_history",
											"value": "false",
											"description": "Whether to include with the current and pending plan information the plan history- can be very large per cluster."
										},
										{
											"key": "show_plan_defaults",
											"value": "false",
											"description": "If showing plans, whether to show values that are left at their default value (less readable but more informative)."
										},
										{
											"key": "show_settings",
											"value": "false",
											"description": "Whether to show cluster settings in the response."
										}
									],
									"variable": [
										{
											"id": "667f1e19-6fd2-472b-ba95-244b47544fea",
											"key": "deployment_id",
											"value": "cupidatat adipisicing",
											"description": "(Required) Identifier for the Deployment",
											"type": "string"
										},
										{
											"id": "fe38e693-8eff-4497-96c7-dba45ae623ef",
											"key": "ref_id",
											"value": "cupidatat adipisicing",
											"description": "(Required) User-specified RefId for the Resource",
											"type": "string"
										}
									]
								},
								"description": "Get info about an Enterprise Search Resource belonging to a given Deployment."
							},
							"response": [
								{
									"id": "4269431a-bcbb-40b4-aaed-07db92a0417a",
									"name": "We have failed you. (code: `deployments.deployment_resource_no_longer_exists`)",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/deployments/:deployment_id/enterprise_search/:ref_id?show_metadata=false&show_plans=true&show_plan_logs=false&show_plan_history=false&show_plan_defaults=false&show_settings=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"deployments",
												":deployment_id",
												"enterprise_search",
												":ref_id"
											],
											"query": [
												{
													"key": "show_metadata",
													"value": "false"
												},
												{
													"key": "show_plans",
													"value": "true"
												},
												{
													"key": "show_plan_logs",
													"value": "false"
												},
												{
													"key": "show_plan_history",
													"value": "false"
												},
												{
													"key": "show_plan_defaults",
													"value": "false"
												},
												{
													"key": "show_settings",
													"value": "false"
												}
											],
											"variable": [
												{
													"key": "deployment_id",
													"value": "cupidatat adipisicing",
													"description": "(Required) Identifier for the Deployment"
												},
												{
													"key": "ref_id",
													"value": "cupidatat adipisicing",
													"description": "(Required) User-specified RefId for the Resource"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"disabled": false,
											"description": "The error codes associated with the response",
											"key": "x-cloud-error-codes",
											"value": "deployments.deployment_resource_no_longer_exists"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
								},
								{
									"id": "cdfbdc5a-54a8-4e08-8709-88cb2e378b2b",
									"name": "Standard response.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/deployments/:deployment_id/enterprise_search/:ref_id?show_metadata=false&show_plans=true&show_plan_logs=false&show_plan_history=false&show_plan_defaults=false&show_settings=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"deployments",
												":deployment_id",
												"enterprise_search",
												":ref_id"
											],
											"query": [
												{
													"key": "show_metadata",
													"value": "false"
												},
												{
													"key": "show_plans",
													"value": "true"
												},
												{
													"key": "show_plan_logs",
													"value": "false"
												},
												{
													"key": "show_plan_history",
													"value": "false"
												},
												{
													"key": "show_plan_defaults",
													"value": "false"
												},
												{
													"key": "show_settings",
													"value": "false"
												}
											],
											"variable": [
												{
													"key": "deployment_id",
													"value": "cupidatat adipisicing",
													"description": "(Required) Identifier for the Deployment"
												},
												{
													"key": "ref_id",
													"value": "cupidatat adipisicing",
													"description": "(Required) User-specified RefId for the Resource"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"elasticsearch_cluster_ref_id\": \"laboris est\",\n  \"id\": \"enim magna\",\n  \"info\": {\n    \"elasticsearch_cluster\": {\n      \"elasticsearch_id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"links\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"external_links\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"healthy\": true,\n    \"id\": \"minim sed\",\n    \"name\": \"sunt Duis Ut et\",\n    \"plan_info\": {\n      \"healthy\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"history\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"current\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"pending\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"status\": \"started\",\n    \"topology\": {\n      \"healthy\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"instances\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"links\": {\n      \"temporc\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"aute3a\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"region\": \"deserunt consequat laboris dolor\",\n    \"settings\": {\n      \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"deployment_id\": \"minim tempor\",\n    \"metadata\": {\n      \"last_modified\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"version\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"endpoint\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"cloud_id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"aliased_endpoint\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"raw\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"service_url\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"aliased_url\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"services_urls\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"ports\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"ref_id\": \"sunt veniam\",\n  \"region\": \"dolore\"\n}"
								},
								{
									"id": "d5379adb-2f73-48c2-b807-38e6ebe1267c",
									"name": "The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/deployments/:deployment_id/enterprise_search/:ref_id?show_metadata=false&show_plans=true&show_plan_logs=false&show_plan_history=false&show_plan_defaults=false&show_settings=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"deployments",
												":deployment_id",
												"enterprise_search",
												":ref_id"
											],
											"query": [
												{
													"key": "show_metadata",
													"value": "false"
												},
												{
													"key": "show_plans",
													"value": "true"
												},
												{
													"key": "show_plan_logs",
													"value": "false"
												},
												{
													"key": "show_plan_history",
													"value": "false"
												},
												{
													"key": "show_plan_defaults",
													"value": "false"
												},
												{
													"key": "show_settings",
													"value": "false"
												}
											],
											"variable": [
												{
													"key": "deployment_id",
													"value": "cupidatat adipisicing",
													"description": "(Required) Identifier for the Deployment"
												},
												{
													"key": "ref_id",
													"value": "cupidatat adipisicing",
													"description": "(Required) User-specified RefId for the Resource"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"disabled": false,
											"description": "The error codes associated with the response",
											"key": "x-cloud-error-codes",
											"value": "deployments.deployment_not_found"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Get Deployment Kibana Resource Info",
							"_postman_id": "4c58adc4-8f3d-407d-a554-78168da41799",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/deployments/:deployment_id/kibana/:ref_id?show_metadata=false&show_plans=true&show_plan_logs=false&show_plan_history=false&show_plan_defaults=false&convert_legacy_plans=false&show_settings=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"deployments",
										":deployment_id",
										"kibana",
										":ref_id"
									],
									"query": [
										{
											"key": "show_metadata",
											"value": "false",
											"description": "Whether to include the full cluster metadata in the response - can be large per cluster and also include credentials."
										},
										{
											"key": "show_plans",
											"value": "true",
											"description": "Whether to include the full current and pending plan information in the response - can be large per cluster."
										},
										{
											"key": "show_plan_logs",
											"value": "false",
											"description": "Whether to include with the current and pending plan information the attempt log - can be very large per cluster."
										},
										{
											"key": "show_plan_history",
											"value": "false",
											"description": "Whether to include with the current and pending plan information the plan history- can be very large per cluster."
										},
										{
											"key": "show_plan_defaults",
											"value": "false",
											"description": "If showing plans, whether to show values that are left at their default value (less readable but more informative)."
										},
										{
											"key": "convert_legacy_plans",
											"value": "false",
											"description": "If showing plans, whether to leave pre-2.0.0 plans in their legacy format (the default), or whether to update them to 2.0.x+ format (if 'true')."
										},
										{
											"key": "show_settings",
											"value": "false",
											"description": "Whether to show cluster settings in the response."
										}
									],
									"variable": [
										{
											"id": "fc70c297-30ff-400a-9907-1061b4619fec",
											"key": "deployment_id",
											"value": "cupidatat adipisicing",
											"description": "(Required) Identifier for the Deployment",
											"type": "string"
										},
										{
											"id": "da719e85-38d1-4b0a-9281-834a15bb5373",
											"key": "ref_id",
											"value": "cupidatat adipisicing",
											"description": "(Required) User-specified RefId for the Resource",
											"type": "string"
										}
									]
								},
								"description": "Get info about a Kibana Resource belonging to a given Deployment."
							},
							"response": [
								{
									"id": "30d3fdfe-eddb-4388-ac00-676833715da0",
									"name": "The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/deployments/:deployment_id/kibana/:ref_id?show_metadata=false&show_plans=true&show_plan_logs=false&show_plan_history=false&show_plan_defaults=false&convert_legacy_plans=false&show_settings=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"deployments",
												":deployment_id",
												"kibana",
												":ref_id"
											],
											"query": [
												{
													"key": "show_metadata",
													"value": "false"
												},
												{
													"key": "show_plans",
													"value": "true"
												},
												{
													"key": "show_plan_logs",
													"value": "false"
												},
												{
													"key": "show_plan_history",
													"value": "false"
												},
												{
													"key": "show_plan_defaults",
													"value": "false"
												},
												{
													"key": "convert_legacy_plans",
													"value": "false"
												},
												{
													"key": "show_settings",
													"value": "false"
												}
											],
											"variable": [
												{
													"key": "deployment_id",
													"value": "cupidatat adipisicing",
													"description": "(Required) Identifier for the Deployment"
												},
												{
													"key": "ref_id",
													"value": "cupidatat adipisicing",
													"description": "(Required) User-specified RefId for the Resource"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"disabled": false,
											"description": "The error codes associated with the response",
											"key": "x-cloud-error-codes",
											"value": "deployments.deployment_not_found"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
								},
								{
									"id": "97b28e90-7b8d-49f5-a453-c3a9d3621a19",
									"name": "We have failed you. (code: `deployments.deployment_resource_no_longer_exists`)",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/deployments/:deployment_id/kibana/:ref_id?show_metadata=false&show_plans=true&show_plan_logs=false&show_plan_history=false&show_plan_defaults=false&convert_legacy_plans=false&show_settings=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"deployments",
												":deployment_id",
												"kibana",
												":ref_id"
											],
											"query": [
												{
													"key": "show_metadata",
													"value": "false"
												},
												{
													"key": "show_plans",
													"value": "true"
												},
												{
													"key": "show_plan_logs",
													"value": "false"
												},
												{
													"key": "show_plan_history",
													"value": "false"
												},
												{
													"key": "show_plan_defaults",
													"value": "false"
												},
												{
													"key": "convert_legacy_plans",
													"value": "false"
												},
												{
													"key": "show_settings",
													"value": "false"
												}
											],
											"variable": [
												{
													"key": "deployment_id",
													"value": "cupidatat adipisicing",
													"description": "(Required) Identifier for the Deployment"
												},
												{
													"key": "ref_id",
													"value": "cupidatat adipisicing",
													"description": "(Required) User-specified RefId for the Resource"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"disabled": false,
											"description": "The error codes associated with the response",
											"key": "x-cloud-error-codes",
											"value": "deployments.deployment_resource_no_longer_exists"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
								},
								{
									"id": "f5b145b2-c818-42eb-bcab-8f5316caeed3",
									"name": "Standard response.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/deployments/:deployment_id/kibana/:ref_id?show_metadata=false&show_plans=true&show_plan_logs=false&show_plan_history=false&show_plan_defaults=false&convert_legacy_plans=false&show_settings=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"deployments",
												":deployment_id",
												"kibana",
												":ref_id"
											],
											"query": [
												{
													"key": "show_metadata",
													"value": "false"
												},
												{
													"key": "show_plans",
													"value": "true"
												},
												{
													"key": "show_plan_logs",
													"value": "false"
												},
												{
													"key": "show_plan_history",
													"value": "false"
												},
												{
													"key": "show_plan_defaults",
													"value": "false"
												},
												{
													"key": "convert_legacy_plans",
													"value": "false"
												},
												{
													"key": "show_settings",
													"value": "false"
												}
											],
											"variable": [
												{
													"key": "deployment_id",
													"value": "cupidatat adipisicing",
													"description": "(Required) Identifier for the Deployment"
												},
												{
													"key": "ref_id",
													"value": "cupidatat adipisicing",
													"description": "(Required) User-specified RefId for the Resource"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"elasticsearch_cluster_ref_id\": \"sunt cillum\",\n  \"id\": \"eu adipisici\",\n  \"info\": {\n    \"cluster_id\": \"tempor nisi ea\",\n    \"cluster_name\": \"elit consequat\",\n    \"elasticsearch_cluster\": {\n      \"elasticsearch_id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"links\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"external_links\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"healthy\": false,\n    \"metadata\": {\n      \"last_modified\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"version\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"endpoint\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"cloud_id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"aliased_endpoint\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"raw\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"service_url\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"aliased_url\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"services_urls\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"ports\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"plan_info\": {\n      \"healthy\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"history\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"current\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"pending\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"status\": \"stopping\",\n    \"topology\": {\n      \"healthy\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"instances\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"links\": {\n      \"consequata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"exercitation_d30\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"region\": \"in pariatur fug\",\n    \"settings\": {\n      \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"deployment_id\": \"sunt nostrud laboris cupidatat\"\n  },\n  \"ref_id\": \"aute aliqua\",\n  \"region\": \"dolor sit veniam culpa enim\"\n}"
								}
							]
						},
						{
							"name": "Shuts down Deployment",
							"_postman_id": "5c9abf98-f78a-41ae-bc62-b956c31f66af",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/deployments/:deployment_id/_shutdown?hide=true&skip_snapshot=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"deployments",
										":deployment_id",
										"_shutdown"
									],
									"query": [
										{
											"key": "hide",
											"value": "true",
											"description": "Whether or not to hide the deployment and its resources.Only applicable for Platform administrators."
										},
										{
											"key": "skip_snapshot",
											"value": "false",
											"description": "Whether or not to skip snapshots before shutting down the resources"
										}
									],
									"variable": [
										{
											"id": "de362cda-6c7a-4484-ac00-27c0a2df12d9",
											"key": "deployment_id",
											"value": "cupidatat adipisicing",
											"description": "(Required) Identifier for the Deployment",
											"type": "string"
										}
									]
								},
								"description": "Shuts down all resources in a Deployment."
							},
							"response": [
								{
									"id": "1e37194f-0fe5-4a9c-8ee5-58441ca14c57",
									"name": "The request was valid and the resources of the deployment were shutdown.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/deployments/:deployment_id/_shutdown?hide=true&skip_snapshot=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"deployments",
												":deployment_id",
												"_shutdown"
											],
											"query": [
												{
													"key": "hide",
													"value": "true"
												},
												{
													"key": "skip_snapshot",
													"value": "false"
												}
											],
											"variable": [
												{
													"key": "deployment_id",
													"value": "cupidatat adipisicing",
													"description": "(Required) Identifier for the Deployment"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"id\": \"pariatur aliqua iru\",\n  \"name\": \"mollit exercitation sed\",\n  \"orphaned\": {\n    \"apm\": [\n      \"et incididunt Lorem dolor officia\",\n      \"eu consequat veniam\"\n    ],\n    \"appsearch\": [\n      \"officia occaecat eu consectetur\",\n      \"consequat labori\"\n    ],\n    \"elasticsearch\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"enterprise_search\": [\n      \"aute consequa\",\n      \"do\"\n    ],\n    \"integrations_server\": [\n      \"ullamco\",\n      \"nostrud ad\"\n    ],\n    \"kibana\": [\n      \"officia aliqua aute\",\n      \"et adipisicing\"\n    ]\n  }\n}"
								},
								{
									"id": "7f6e97b6-a460-4aad-9607-9baf6ba654aa",
									"name": "Parameter is restricted and can only be set by a Platform administrator. (code: `deployments.restricted_parameter`)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/deployments/:deployment_id/_shutdown?hide=true&skip_snapshot=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"deployments",
												":deployment_id",
												"_shutdown"
											],
											"query": [
												{
													"key": "hide",
													"value": "true"
												},
												{
													"key": "skip_snapshot",
													"value": "false"
												}
											],
											"variable": [
												{
													"key": "deployment_id",
													"value": "cupidatat adipisicing",
													"description": "(Required) Identifier for the Deployment"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"disabled": false,
											"description": "The error codes associated with the response",
											"key": "x-cloud-error-codes",
											"value": "deployments.restricted_parameter"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
								},
								{
									"id": "a3a194ba-c845-4639-a33c-d219cec0e4de",
									"name": "You are not authorized to perform this action.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/deployments/:deployment_id/_shutdown?hide=true&skip_snapshot=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"deployments",
												":deployment_id",
												"_shutdown"
											],
											"query": [
												{
													"key": "hide",
													"value": "true"
												},
												{
													"key": "skip_snapshot",
													"value": "false"
												}
											],
											"variable": [
												{
													"key": "deployment_id",
													"value": "cupidatat adipisicing",
													"description": "(Required) Identifier for the Deployment"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
								},
								{
									"id": "d27476c6-14d5-41a3-9948-c7092e4abcdb",
									"name": "The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/deployments/:deployment_id/_shutdown?hide=true&skip_snapshot=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"deployments",
												":deployment_id",
												"_shutdown"
											],
											"query": [
												{
													"key": "hide",
													"value": "true"
												},
												{
													"key": "skip_snapshot",
													"value": "false"
												}
											],
											"variable": [
												{
													"key": "deployment_id",
													"value": "cupidatat adipisicing",
													"description": "(Required) Identifier for the Deployment"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"disabled": false,
											"description": "The error codes associated with the response",
											"key": "x-cloud-error-codes",
											"value": "deployments.deployment_not_found"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Get Deployment upgade assistant status",
							"_postman_id": "2bc85995-350c-46d9-8496-4382b2d52814",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/deployments/:deployment_id/upgrade_assistant/status",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"deployments",
										":deployment_id",
										"upgrade_assistant",
										"status"
									],
									"variable": [
										{
											"id": "a5605c2e-fffe-4a15-a7f4-b2ac0cd74219",
											"key": "deployment_id",
											"value": "cupidatat adipisicing",
											"description": "(Required) Identifier for the Deployment",
											"type": "string"
										}
									]
								},
								"description": "Get details about an Elasticsearch resource belonging to a given deployment."
							},
							"response": [
								{
									"id": "2ae686ad-7242-4be0-8bda-618638fa061c",
									"name": "The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/deployments/:deployment_id/upgrade_assistant/status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"deployments",
												":deployment_id",
												"upgrade_assistant",
												"status"
											],
											"variable": [
												{
													"key": "deployment_id",
													"value": "cupidatat adipisicing",
													"description": "(Required) Identifier for the Deployment"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"disabled": false,
											"description": "The error codes associated with the response",
											"key": "x-cloud-error-codes",
											"value": "deployments.deployment_not_found"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
								},
								{
									"id": "9c538858-c9ac-4539-91d5-81717bbf6b2b",
									"name": "The Upgrade Assistant returned the status successfully",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/deployments/:deployment_id/upgrade_assistant/status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"deployments",
												":deployment_id",
												"upgrade_assistant",
												"status"
											],
											"variable": [
												{
													"key": "deployment_id",
													"value": "cupidatat adipisicing",
													"description": "(Required) Identifier for the Deployment"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"details\": \"sed quis\",\n  \"ready_for_upgrade\": false\n}"
								}
							]
						},
						{
							"name": "Get Deployment Integrations Server Resource Info",
							"_postman_id": "1098428b-d122-460b-b1b1-3ad2df44dab4",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/deployments/:deployment_id/integrations_server/:ref_id?show_metadata=false&show_plans=true&show_plan_logs=false&show_plan_history=false&show_plan_defaults=false&show_settings=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"deployments",
										":deployment_id",
										"integrations_server",
										":ref_id"
									],
									"query": [
										{
											"key": "show_metadata",
											"value": "false",
											"description": "Whether to include the full cluster metadata in the response - can be large per cluster and also include credentials."
										},
										{
											"key": "show_plans",
											"value": "true",
											"description": "Whether to include the full current and pending plan information in the response - can be large per cluster."
										},
										{
											"key": "show_plan_logs",
											"value": "false",
											"description": "Whether to include with the current and pending plan information the attempt log - can be very large per cluster."
										},
										{
											"key": "show_plan_history",
											"value": "false",
											"description": "Whether to include with the current and pending plan information the plan history- can be very large per cluster."
										},
										{
											"key": "show_plan_defaults",
											"value": "false",
											"description": "If showing plans, whether to show values that are left at their default value (less readable but more informative)."
										},
										{
											"key": "show_settings",
											"value": "false",
											"description": "Whether to show cluster settings in the response."
										}
									],
									"variable": [
										{
											"id": "be3bcbb0-baa4-483f-89ef-18c7606da663",
											"key": "deployment_id",
											"value": "cupidatat adipisicing",
											"description": "(Required) Identifier for the Deployment",
											"type": "string"
										},
										{
											"id": "cf56359a-f4f4-4ef1-b4ce-30611a31a385",
											"key": "ref_id",
											"value": "cupidatat adipisicing",
											"description": "(Required) User-specified RefId for the Resource",
											"type": "string"
										}
									]
								},
								"description": "Get info about an Integrations Server Resource belonging to a given Deployment."
							},
							"response": [
								{
									"id": "35948545-f055-4cf7-95e1-b88cc981b8f3",
									"name": "We have failed you. (code: `deployments.deployment_resource_no_longer_exists`)",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/deployments/:deployment_id/integrations_server/:ref_id?show_metadata=false&show_plans=true&show_plan_logs=false&show_plan_history=false&show_plan_defaults=false&show_settings=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"deployments",
												":deployment_id",
												"integrations_server",
												":ref_id"
											],
											"query": [
												{
													"key": "show_metadata",
													"value": "false"
												},
												{
													"key": "show_plans",
													"value": "true"
												},
												{
													"key": "show_plan_logs",
													"value": "false"
												},
												{
													"key": "show_plan_history",
													"value": "false"
												},
												{
													"key": "show_plan_defaults",
													"value": "false"
												},
												{
													"key": "show_settings",
													"value": "false"
												}
											],
											"variable": [
												{
													"key": "deployment_id",
													"value": "cupidatat adipisicing",
													"description": "(Required) Identifier for the Deployment"
												},
												{
													"key": "ref_id",
													"value": "cupidatat adipisicing",
													"description": "(Required) User-specified RefId for the Resource"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"disabled": false,
											"description": "The error codes associated with the response",
											"key": "x-cloud-error-codes",
											"value": "deployments.deployment_resource_no_longer_exists"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
								},
								{
									"id": "a61deaa5-bb59-4e83-83c8-ec0ad7d29c02",
									"name": "Standard response.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/deployments/:deployment_id/integrations_server/:ref_id?show_metadata=false&show_plans=true&show_plan_logs=false&show_plan_history=false&show_plan_defaults=false&show_settings=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"deployments",
												":deployment_id",
												"integrations_server",
												":ref_id"
											],
											"query": [
												{
													"key": "show_metadata",
													"value": "false"
												},
												{
													"key": "show_plans",
													"value": "true"
												},
												{
													"key": "show_plan_logs",
													"value": "false"
												},
												{
													"key": "show_plan_history",
													"value": "false"
												},
												{
													"key": "show_plan_defaults",
													"value": "false"
												},
												{
													"key": "show_settings",
													"value": "false"
												}
											],
											"variable": [
												{
													"key": "deployment_id",
													"value": "cupidatat adipisicing",
													"description": "(Required) Identifier for the Deployment"
												},
												{
													"key": "ref_id",
													"value": "cupidatat adipisicing",
													"description": "(Required) User-specified RefId for the Resource"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"elasticsearch_cluster_ref_id\": \"proident dolore aliquip aliqua fugiat\",\n  \"id\": \"magna Ut exercitation\",\n  \"info\": {\n    \"elasticsearch_cluster\": {\n      \"elasticsearch_id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"links\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"external_links\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"healthy\": false,\n    \"id\": \"veniam\",\n    \"name\": \"mollit non\",\n    \"plan_info\": {\n      \"healthy\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"history\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"current\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"pending\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"status\": \"rebooting\",\n    \"topology\": {\n      \"healthy\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"instances\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"apm_server_mode\": \"Managed\",\n    \"links\": {\n      \"minim_c\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"region\": \"nulla\",\n    \"settings\": {\n      \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"deployment_id\": \"Ut sint deserunt est\",\n    \"metadata\": {\n      \"last_modified\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"version\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"endpoint\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"cloud_id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"aliased_endpoint\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"raw\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"service_url\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"aliased_url\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"services_urls\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"ports\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"ref_id\": \"eiusmod sit ut\",\n  \"region\": \"commodo in non sunt\"\n}"
								},
								{
									"id": "f5981077-c340-4978-804e-30b3ea25d14f",
									"name": "The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/deployments/:deployment_id/integrations_server/:ref_id?show_metadata=false&show_plans=true&show_plan_logs=false&show_plan_history=false&show_plan_defaults=false&show_settings=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"deployments",
												":deployment_id",
												"integrations_server",
												":ref_id"
											],
											"query": [
												{
													"key": "show_metadata",
													"value": "false"
												},
												{
													"key": "show_plans",
													"value": "true"
												},
												{
													"key": "show_plan_logs",
													"value": "false"
												},
												{
													"key": "show_plan_history",
													"value": "false"
												},
												{
													"key": "show_plan_defaults",
													"value": "false"
												},
												{
													"key": "show_settings",
													"value": "false"
												}
											],
											"variable": [
												{
													"key": "deployment_id",
													"value": "cupidatat adipisicing",
													"description": "(Required) Identifier for the Deployment"
												},
												{
													"key": "ref_id",
													"value": "cupidatat adipisicing",
													"description": "(Required) User-specified RefId for the Resource"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"disabled": false,
											"description": "The error codes associated with the response",
											"key": "x-cloud-error-codes",
											"value": "deployments.deployment_not_found"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Get certificate authority",
							"_postman_id": "1fa13112-bf08-4aea-8f03-a2fd70f6d960",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/deployments/:deployment_id/certificate-authority",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"deployments",
										":deployment_id",
										"certificate-authority"
									],
									"variable": [
										{
											"id": "5c7ce380-d971-45ca-85d6-2eaf0ab50f66",
											"key": "deployment_id",
											"value": "cupidatat adipisicing",
											"description": "(Required) Identifier for the Deployment.",
											"type": "string"
										}
									]
								},
								"description": "Returns the certificate authority used to sign the certificates of this deployment."
							},
							"response": [
								{
									"id": "9729bf17-2594-4317-acd7-5ed9e66afe94",
									"name": "* The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)\n* The Elasticsearch Resource cannot be found. (code: `deployments.deployment_resource_not_found`)",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/deployments/:deployment_id/certificate-authority",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"deployments",
												":deployment_id",
												"certificate-authority"
											],
											"variable": [
												{
													"key": "deployment_id",
													"value": "cupidatat adipisicing",
													"description": "(Required) Identifier for the Deployment."
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"disabled": false,
											"description": "The error codes associated with the response",
											"key": "x-cloud-error-codes",
											"value": "deployments.deployment_resource_not_found"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
								},
								{
									"id": "d96e45eb-a44c-40c5-80dc-fceaa31ffb2d",
									"name": "The certificate authority used to sign the certificates of this deployment",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/deployments/:deployment_id/certificate-authority",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"deployments",
												":deployment_id",
												"certificate-authority"
											],
											"variable": [
												{
													"key": "deployment_id",
													"value": "cupidatat adipisicing",
													"description": "(Required) Identifier for the Deployment."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"public_certificates\": [\n    {\n      \"active\": true,\n      \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"pem\": \"proident labore\"\n    },\n    {\n      \"active\": true,\n      \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"pem\": \"dolore in\"\n    }\n  ],\n  \"recommended_trust_restriction\": \"id est elit\"\n}"
								}
							]
						}
					],
					"_postman_id": "1a9a3c38-7e21-476d-9539-8441ea0a0d1c",
					"_postman_isSubFolder": true
				},
				{
					"name": "templates",
					"item": [
						{
							"name": "Get deployment templates",
							"_postman_id": "8af1b10e-a3f2-4658-8d5c-dd12d507916c",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/deployments/templates?metadata=cupidatat adipisicing&show_instance_configurations=true&show_max_zones=false&stack_version=cupidatat adipisicing&region=cupidatat adipisicing",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"deployments",
										"templates"
									],
									"query": [
										{
											"key": "metadata",
											"value": "cupidatat adipisicing",
											"description": "An optional key/value pair in the form of (key:value) that will act as a filter and exclude any templates that do not have a matching metadata item associated."
										},
										{
											"key": "show_instance_configurations",
											"value": "true",
											"description": "If true, will return details for each instance configuration referenced by the template."
										},
										{
											"key": "show_max_zones",
											"value": "false",
											"description": "If true, will populate the max_zones field in the instance configurations. Only relevant if show_instance_configurations=true."
										},
										{
											"key": "stack_version",
											"value": "cupidatat adipisicing",
											"description": "If present, it will cause the returned deployment templates to be adapted to return only the elements allowed in that version."
										},
										{
											"key": "region",
											"value": "cupidatat adipisicing",
											"description": "(Required) Region of the deployment templates"
										}
									]
								},
								"description": "Retrieves all deployment templates."
							},
							"response": [
								{
									"id": "2edaa51a-823e-40ab-b3ec-a9f90f3de477",
									"name": "The requested region was not found. (code: `templates.region_not_found`)",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/deployments/templates?metadata=cupidatat adipisicing&show_instance_configurations=true&show_max_zones=false&stack_version=cupidatat adipisicing&region=cupidatat adipisicing",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"deployments",
												"templates"
											],
											"query": [
												{
													"key": "metadata",
													"value": "cupidatat adipisicing"
												},
												{
													"key": "show_instance_configurations",
													"value": "true"
												},
												{
													"key": "show_max_zones",
													"value": "false"
												},
												{
													"key": "stack_version",
													"value": "cupidatat adipisicing"
												},
												{
													"key": "region",
													"value": "cupidatat adipisicing"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"disabled": false,
											"description": "The error codes associated with the response",
											"key": "x-cloud-error-codes",
											"value": "templates.region_not_found"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
								},
								{
									"id": "787156e9-1933-49be-922e-4ff3a2b4d8c5",
									"name": "The deployment templates were returned successfully.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/deployments/templates?metadata=cupidatat adipisicing&show_instance_configurations=true&show_max_zones=false&stack_version=cupidatat adipisicing&region=cupidatat adipisicing",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"deployments",
												"templates"
											],
											"query": [
												{
													"key": "metadata",
													"value": "cupidatat adipisicing"
												},
												{
													"key": "show_instance_configurations",
													"value": "true"
												},
												{
													"key": "show_max_zones",
													"value": "false"
												},
												{
													"key": "stack_version",
													"value": "cupidatat adipisicing"
												},
												{
													"key": "region",
													"value": "cupidatat adipisicing"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "[\n  {\n    \"deployment_template\": {\n      \"name\": \"enim minim\",\n      \"settings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"region\": \"sed exercitation fugiat ut\",\n      \"alias\": \"nostrud labore\",\n      \"version\": \"ad non in laboris\",\n      \"resources\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"id\": \"la\",\n    \"instance_configurations\": [\n      {\n        \"discrete_sizes\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"instance_type\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"name\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"description\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"node_types\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"storage_multiplier\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"cpu_multiplier\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"max_zones\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      {\n        \"discrete_sizes\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"instance_type\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"name\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"description\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"node_types\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"storage_multiplier\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"cpu_multiplier\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"max_zones\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    ],\n    \"name\": \"sunt cupidatat ut\",\n    \"description\": \"laborum do aute aliqua\",\n    \"template_category_id\": \"et irure dolor\",\n    \"min_version\": \"cupidatat dolore minim\",\n    \"kibana_deeplink\": [\n      {\n        \"semver\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"uri\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      {\n        \"semver\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"uri\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    ],\n    \"order\": 41082025,\n    \"source\": {\n      \"action\": \"magna est\",\n      \"date\": \"2007-09-20T11:32:07.029Z\",\n      \"facilitator\": \"in ipsum l\",\n      \"user_id\": \"consequat deserunt\",\n      \"remote_addresses\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"admin_id\": \"nulla velit consequat sit\"\n    },\n    \"metadata\": [\n      {\n        \"key\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"value\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      {\n        \"key\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"value\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    ],\n    \"system_owned\": true\n  },\n  {\n    \"deployment_template\": {\n      \"name\": \"dolor ut\",\n      \"settings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"region\": \"consectetur dolor in\",\n      \"alias\": \"aliqua do exercitation\",\n      \"version\": \"enim magna quis Ut\",\n      \"resources\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"id\": \"enim dolore\",\n    \"instance_configurations\": [\n      {\n        \"discrete_sizes\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"instance_type\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"name\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"description\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"node_types\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"storage_multiplier\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"cpu_multiplier\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"max_zones\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      {\n        \"discrete_sizes\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"instance_type\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"name\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"description\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"node_types\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"storage_multiplier\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"cpu_multiplier\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"max_zones\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    ],\n    \"name\": \"magna quis enim dolor aute\",\n    \"description\": \"consectetur\",\n    \"template_category_id\": \"anim mollit eiusmod\",\n    \"min_version\": \"laboris aliqua laborum\",\n    \"kibana_deeplink\": [\n      {\n        \"semver\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"uri\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      {\n        \"semver\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"uri\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    ],\n    \"order\": -3890596,\n    \"source\": {\n      \"action\": \"dolore amet\",\n      \"date\": \"1963-05-21T20:58:51.209Z\",\n      \"facilitator\": \"est in\",\n      \"user_id\": \"dolor adipisicing non aute quis\",\n      \"remote_addresses\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"admin_id\": \"laboris do et mollit magna\"\n    },\n    \"metadata\": [\n      {\n        \"key\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"value\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      {\n        \"key\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"value\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    ],\n    \"system_owned\": false\n  }\n]"
								},
								{
									"id": "e56317ab-2774-4db8-88b5-aa4bf2b12fad",
									"name": "The user is not authorized to access requested region. (code: `templates.region_not_allowed`)",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/deployments/templates?metadata=cupidatat adipisicing&show_instance_configurations=true&show_max_zones=false&stack_version=cupidatat adipisicing&region=cupidatat adipisicing",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"deployments",
												"templates"
											],
											"query": [
												{
													"key": "metadata",
													"value": "cupidatat adipisicing"
												},
												{
													"key": "show_instance_configurations",
													"value": "true"
												},
												{
													"key": "show_max_zones",
													"value": "false"
												},
												{
													"key": "stack_version",
													"value": "cupidatat adipisicing"
												},
												{
													"key": "region",
													"value": "cupidatat adipisicing"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"disabled": false,
											"description": "The error codes associated with the response",
											"key": "x-cloud-error-codes",
											"value": "templates.region_not_allowed"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Get deployment template",
							"_postman_id": "48003fa8-8772-45d7-a9d4-a06783d642e2",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/deployments/templates/:template_id?show_instance_configurations=true&show_max_zones=false&stack_version=cupidatat adipisicing&region=cupidatat adipisicing",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"deployments",
										"templates",
										":template_id"
									],
									"query": [
										{
											"key": "show_instance_configurations",
											"value": "true",
											"description": "If true, will return details for each instance configuration referenced by the template."
										},
										{
											"key": "show_max_zones",
											"value": "false",
											"description": "If true, will populate the max_zones field in the instance configurations. Only relevant if show_instance_configurations=true."
										},
										{
											"key": "stack_version",
											"value": "cupidatat adipisicing",
											"description": "If present, it will cause the returned deployment template to be adapted to return only the elements allowed in that version."
										},
										{
											"key": "region",
											"value": "cupidatat adipisicing",
											"description": "(Required) Region of the deployment template"
										}
									],
									"variable": [
										{
											"id": "aca4dffc-e3b2-4687-970d-0c870ec48040",
											"key": "template_id",
											"value": "cupidatat adipisicing",
											"description": "(Required) The identifier for the deployment template.",
											"type": "string"
										}
									]
								},
								"description": "Retrieves a deployment template by id."
							},
							"response": [
								{
									"id": "20ed872c-d89f-42b7-be04-0d5cac3ba43c",
									"name": "The requested region is not supported. (code: `templates.region_not_found`)",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/deployments/templates/:template_id?show_instance_configurations=true&show_max_zones=false&stack_version=cupidatat adipisicing&region=cupidatat adipisicing",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"deployments",
												"templates",
												":template_id"
											],
											"query": [
												{
													"key": "show_instance_configurations",
													"value": "true"
												},
												{
													"key": "show_max_zones",
													"value": "false"
												},
												{
													"key": "stack_version",
													"value": "cupidatat adipisicing"
												},
												{
													"key": "region",
													"value": "cupidatat adipisicing"
												}
											],
											"variable": [
												{
													"key": "template_id",
													"value": "cupidatat adipisicing",
													"description": "(Required) The identifier for the deployment template."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"disabled": false,
											"description": "The error codes associated with the response",
											"key": "x-cloud-error-codes",
											"value": "templates.region_not_found"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
								},
								{
									"id": "25af600a-79eb-4e52-8303-6ecb2d8225dd",
									"name": "The deployment template specified by {template_id} cannot be found. (code: `templates.template_not_found`)",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/deployments/templates/:template_id?show_instance_configurations=true&show_max_zones=false&stack_version=cupidatat adipisicing&region=cupidatat adipisicing",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"deployments",
												"templates",
												":template_id"
											],
											"query": [
												{
													"key": "show_instance_configurations",
													"value": "true"
												},
												{
													"key": "show_max_zones",
													"value": "false"
												},
												{
													"key": "stack_version",
													"value": "cupidatat adipisicing"
												},
												{
													"key": "region",
													"value": "cupidatat adipisicing"
												}
											],
											"variable": [
												{
													"key": "template_id",
													"value": "cupidatat adipisicing",
													"description": "(Required) The identifier for the deployment template."
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"disabled": false,
											"description": "The error codes associated with the response",
											"key": "x-cloud-error-codes",
											"value": "templates.template_not_found"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
								},
								{
									"id": "52eb76e0-365d-4b56-8650-f4089ee02f40",
									"name": "The deployment template was found and returned successfully.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/deployments/templates/:template_id?show_instance_configurations=true&show_max_zones=false&stack_version=cupidatat adipisicing&region=cupidatat adipisicing",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"deployments",
												"templates",
												":template_id"
											],
											"query": [
												{
													"key": "show_instance_configurations",
													"value": "true"
												},
												{
													"key": "show_max_zones",
													"value": "false"
												},
												{
													"key": "stack_version",
													"value": "cupidatat adipisicing"
												},
												{
													"key": "region",
													"value": "cupidatat adipisicing"
												}
											],
											"variable": [
												{
													"key": "template_id",
													"value": "cupidatat adipisicing",
													"description": "(Required) The identifier for the deployment template."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"deployment_template\": {\n    \"name\": \"elit id Ut minim\",\n    \"settings\": {\n      \"autoscaling_enabled\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"observability\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"traffic_filter_settings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"region\": \"mollit labore nulla deserunt\",\n    \"alias\": \"do eiusmod deserunt adipisicing\",\n    \"version\": \"ullamco amet aliqua e\",\n    \"resources\": {\n      \"enterprise_search\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"kibana\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"elasticsearch\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"apm\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"appsearch\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"integrations_server\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"metadata\": {\n      \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"id\": \"qui esse laborum occaecat minim\",\n  \"instance_configurations\": [\n    {\n      \"discrete_sizes\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"instance_type\": \"sint voluptate ullamco mollit\",\n      \"name\": \"ad aute eiusmod\",\n      \"description\": \"et eiusmod ipsum proident\",\n      \"node_types\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"storage_multiplier\": -23795641.33922316,\n      \"cpu_multiplier\": -16549837.611288115,\n      \"max_zones\": -25937684,\n      \"id\": \"proident\"\n    },\n    {\n      \"discrete_sizes\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"instance_type\": \"irure sunt\",\n      \"name\": \"fugiat in Lorem ut\",\n      \"description\": \"incididunt a\",\n      \"node_types\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"storage_multiplier\": -58673033.37309595,\n      \"cpu_multiplier\": 21367007.20249322,\n      \"max_zones\": 41028315,\n      \"id\": \"Excepteur commodo esse\"\n    }\n  ],\n  \"name\": \"tempor deserunt in in\",\n  \"description\": \"voluptate culpa dolore\",\n  \"template_category_id\": \"consectetur consequat exercitation qui ut\",\n  \"min_version\": \"et est non aute\",\n  \"kibana_deeplink\": [\n    {\n      \"semver\": \"culpa ad\",\n      \"uri\": \"nulla laborum cillum est\"\n    },\n    {\n      \"semver\": \"in\",\n      \"uri\": \"\"\n    }\n  ],\n  \"order\": -55995529,\n  \"source\": {\n    \"action\": \"tempor veniam velit\",\n    \"date\": \"1980-12-08T23:25:45.409Z\",\n    \"facilitator\": \"aliquip deserunt\",\n    \"user_id\": \"amet esse exercitation\",\n    \"remote_addresses\": [\n      \"quis re\",\n      \"in exercitation\"\n    ],\n    \"admin_id\": \"velit Ut ni\"\n  },\n  \"metadata\": [\n    {\n      \"key\": \"laborum\",\n      \"value\": \"irure nisi nostrud\"\n    },\n    {\n      \"key\": \"sint est elit sunt Duis\",\n      \"value\": \"sed voluptate et\"\n    }\n  ],\n  \"system_owned\": true\n}"
								},
								{
									"id": "84cc4ff6-24b7-43eb-a60b-06022aff8d01",
									"name": "The user is not authorized to access requested region. (code: `templates.region_not_allowed`)",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/deployments/templates/:template_id?show_instance_configurations=true&show_max_zones=false&stack_version=cupidatat adipisicing&region=cupidatat adipisicing",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"deployments",
												"templates",
												":template_id"
											],
											"query": [
												{
													"key": "show_instance_configurations",
													"value": "true"
												},
												{
													"key": "show_max_zones",
													"value": "false"
												},
												{
													"key": "stack_version",
													"value": "cupidatat adipisicing"
												},
												{
													"key": "region",
													"value": "cupidatat adipisicing"
												}
											],
											"variable": [
												{
													"key": "template_id",
													"value": "cupidatat adipisicing",
													"description": "(Required) The identifier for the deployment template."
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"disabled": false,
											"description": "The error codes associated with the response",
											"key": "x-cloud-error-codes",
											"value": "templates.region_not_allowed"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
								}
							]
						}
					],
					"_postman_id": "82eafd47-cb18-41a5-b0e9-59d03cb4f5ed",
					"_postman_isSubFolder": true
				},
				{
					"name": "traffic-filter",
					"item": [
						{
							"name": "rulesets",
							"item": [
								{
									"name": "{ruleset id}",
									"item": [
										{
											"name": "associations",
											"item": [
												{
													"name": "Create ruleset association",
													"_postman_id": "6f6901b1-7e5f-418a-a119-7d391950ab93",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"entity_type\": \"d\",\n  \"id\": \"tempor ea mollit nulla\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/deployments/traffic-filter/rulesets/:ruleset_id/associations",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"deployments",
																"traffic-filter",
																"rulesets",
																":ruleset_id",
																"associations"
															],
															"variable": [
																{
																	"id": "edb47f7b-e6af-43f2-bafa-a8349bdc5dbf",
																	"key": "ruleset_id",
																	"value": "cupidatat adipisicing",
																	"description": "(Required) The mandatory ruleset ID.",
																	"type": "string"
																}
															]
														},
														"description": "Applies the ruleset to the specified deployment."
													},
													"response": [
														{
															"id": "47a67280-21f2-41d3-9bc8-75b6700beb5f",
															"name": "The traffic filter ruleset specified by {ruleset_id} cannot be found. (code: `traffic_filter.not_found`)",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"entity_type\": \"d\",\n  \"id\": \"tempor ea mollit nulla\"\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/deployments/traffic-filter/rulesets/:ruleset_id/associations",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"deployments",
																		"traffic-filter",
																		"rulesets",
																		":ruleset_id",
																		"associations"
																	],
																	"variable": [
																		{
																			"key": "ruleset_id",
																			"value": "cupidatat adipisicing",
																			"description": "(Required) The mandatory ruleset ID."
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"disabled": false,
																	"description": "The error codes associated with the response",
																	"key": "x-cloud-error-codes",
																	"value": "traffic_filter.not_found"
																},
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"responseTime": null,
															"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
														},
														{
															"id": "6a840801-1d57-49cd-a86d-9fa568fa14c4",
															"name": "Creation failed. (code: `traffic_filter.request_execution_failed`)",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"entity_type\": \"d\",\n  \"id\": \"tempor ea mollit nulla\"\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/deployments/traffic-filter/rulesets/:ruleset_id/associations",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"deployments",
																		"traffic-filter",
																		"rulesets",
																		":ruleset_id",
																		"associations"
																	],
																	"variable": [
																		{
																			"key": "ruleset_id",
																			"value": "cupidatat adipisicing",
																			"description": "(Required) The mandatory ruleset ID."
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"disabled": false,
																	"description": "The error codes associated with the response",
																	"key": "x-cloud-error-codes",
																	"value": "traffic_filter.request_execution_failed"
																},
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"responseTime": null,
															"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
														},
														{
															"id": "790a12e1-230a-47ad-a8ba-efacf0be7198",
															"name": "Create association request was valid and the association already exists",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"entity_type\": \"d\",\n  \"id\": \"tempor ea mollit nulla\"\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/deployments/traffic-filter/rulesets/:ruleset_id/associations",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"deployments",
																		"traffic-filter",
																		"rulesets",
																		":ruleset_id",
																		"associations"
																	],
																	"variable": [
																		{
																			"key": "ruleset_id",
																			"value": "cupidatat adipisicing",
																			"description": "(Required) The mandatory ruleset ID."
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"responseTime": null,
															"body": "{}"
														},
														{
															"id": "b3cbcb29-9d8f-4371-bcb2-9c89044aa441",
															"name": "Create association request was valid and the association has been created",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"entity_type\": \"d\",\n  \"id\": \"tempor ea mollit nulla\"\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/deployments/traffic-filter/rulesets/:ruleset_id/associations",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"deployments",
																		"traffic-filter",
																		"rulesets",
																		":ruleset_id",
																		"associations"
																	],
																	"variable": [
																		{
																			"key": "ruleset_id",
																			"value": "cupidatat adipisicing",
																			"description": "(Required) The mandatory ruleset ID."
																		}
																	]
																}
															},
															"status": "Created",
															"code": 201,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"responseTime": null,
															"body": "{}"
														}
													]
												},
												{
													"name": "Get associated deployments",
													"_postman_id": "1467ddad-4618-4f91-a814-253cf2995260",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/deployments/traffic-filter/rulesets/:ruleset_id/associations",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"deployments",
																"traffic-filter",
																"rulesets",
																":ruleset_id",
																"associations"
															],
															"variable": [
																{
																	"id": "557410c8-22f5-41b6-b3d2-5d0505286304",
																	"key": "ruleset_id",
																	"value": "cupidatat adipisicing",
																	"description": "(Required) The mandatory ruleset ID.",
																	"type": "string"
																}
															]
														},
														"description": "Retrieves a list of deployments that are associated to the specified ruleset."
													},
													"response": [
														{
															"id": "61be92bd-78a4-4941-8567-3a07a0172dd7",
															"name": "Associations referred by traffic filter rulesets were successfully returned",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/deployments/traffic-filter/rulesets/:ruleset_id/associations",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"deployments",
																		"traffic-filter",
																		"rulesets",
																		":ruleset_id",
																		"associations"
																	],
																	"variable": [
																		{
																			"key": "ruleset_id",
																			"value": "cupidatat adipisicing",
																			"description": "(Required) The mandatory ruleset ID."
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"responseTime": null,
															"body": "{\n  \"associations\": [\n    {\n      \"entity_type\": \"ad cupidatat deserunt Lorem\",\n      \"id\": \"officia in ullamco\"\n    },\n    {\n      \"entity_type\": \"sint tempor Lorem\",\n      \"id\": \"veniam laborum officia\"\n    }\n  ],\n  \"total_associations\": 29931826\n}"
														},
														{
															"id": "6ec61601-a0c5-4a38-b7d3-5b15804c96b8",
															"name": "Error fetching deployments. (code: `traffic_filter.request_execution_failed`)",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/deployments/traffic-filter/rulesets/:ruleset_id/associations",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"deployments",
																		"traffic-filter",
																		"rulesets",
																		":ruleset_id",
																		"associations"
																	],
																	"variable": [
																		{
																			"key": "ruleset_id",
																			"value": "cupidatat adipisicing",
																			"description": "(Required) The mandatory ruleset ID."
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"disabled": false,
																	"description": "The error codes associated with the response",
																	"key": "x-cloud-error-codes",
																	"value": "traffic_filter.request_execution_failed"
																},
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"responseTime": null,
															"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
														}
													]
												},
												{
													"name": "Delete ruleset association",
													"_postman_id": "b81cfc9f-8dbf-47ae-8613-add4f6ba767a",
													"request": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/deployments/traffic-filter/rulesets/:ruleset_id/associations/:association_type/:associated_entity_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"deployments",
																"traffic-filter",
																"rulesets",
																":ruleset_id",
																"associations",
																":association_type",
																":associated_entity_id"
															],
															"variable": [
																{
																	"id": "97ce055f-6eac-42b8-8300-c7c7b2880dee",
																	"key": "ruleset_id",
																	"value": "cupidatat adipisicing",
																	"description": "(Required) The mandatory ruleset ID.",
																	"type": "string"
																},
																{
																	"id": "b7d21ffa-5513-4fa6-b95d-5faf77e6e9ef",
																	"key": "association_type",
																	"value": "cupidatat adipisicing",
																	"description": "(Required) Association type",
																	"type": "string"
																},
																{
																	"id": "d0fb552b-6d0d-47ec-a4ea-c88bf1017908",
																	"key": "associated_entity_id",
																	"value": "cupidatat adipisicing",
																	"description": "(Required) Associated entity ID",
																	"type": "string"
																}
															]
														},
														"description": "Deletes the traffic rules in the ruleset from the deployment."
													},
													"response": [
														{
															"id": "11fea2d6-2987-4548-96bb-172d199bb2cd",
															"name": "The traffic filter ruleset association cannot be found. (code: `traffic_filter.not_found`)",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/deployments/traffic-filter/rulesets/:ruleset_id/associations/:association_type/:associated_entity_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"deployments",
																		"traffic-filter",
																		"rulesets",
																		":ruleset_id",
																		"associations",
																		":association_type",
																		":associated_entity_id"
																	],
																	"variable": [
																		{
																			"key": "ruleset_id",
																			"value": "cupidatat adipisicing",
																			"description": "(Required) The mandatory ruleset ID."
																		},
																		{
																			"key": "association_type",
																			"value": "cupidatat adipisicing",
																			"description": "(Required) Association type"
																		},
																		{
																			"key": "associated_entity_id",
																			"value": "cupidatat adipisicing",
																			"description": "(Required) Associated entity ID"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"disabled": false,
																	"description": "The error codes associated with the response",
																	"key": "x-cloud-error-codes",
																	"value": "traffic_filter.not_found"
																},
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"responseTime": null,
															"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
														},
														{
															"id": "1a9baf3c-dfd4-4cd7-b36d-2e6fa0143e2c",
															"name": "Deletion failed. (code: `traffic_filter.request_execution_failed`)",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/deployments/traffic-filter/rulesets/:ruleset_id/associations/:association_type/:associated_entity_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"deployments",
																		"traffic-filter",
																		"rulesets",
																		":ruleset_id",
																		"associations",
																		":association_type",
																		":associated_entity_id"
																	],
																	"variable": [
																		{
																			"key": "ruleset_id",
																			"value": "cupidatat adipisicing",
																			"description": "(Required) The mandatory ruleset ID."
																		},
																		{
																			"key": "association_type",
																			"value": "cupidatat adipisicing",
																			"description": "(Required) Association type"
																		},
																		{
																			"key": "associated_entity_id",
																			"value": "cupidatat adipisicing",
																			"description": "(Required) Associated entity ID"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"disabled": false,
																	"description": "The error codes associated with the response",
																	"key": "x-cloud-error-codes",
																	"value": "traffic_filter.request_execution_failed"
																},
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"responseTime": null,
															"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
														},
														{
															"id": "a78e1dd7-6512-491e-b564-51b50e434a7c",
															"name": "Delete association request was valid and the association has been deleted",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/deployments/traffic-filter/rulesets/:ruleset_id/associations/:association_type/:associated_entity_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"deployments",
																		"traffic-filter",
																		"rulesets",
																		":ruleset_id",
																		"associations",
																		":association_type",
																		":associated_entity_id"
																	],
																	"variable": [
																		{
																			"key": "ruleset_id",
																			"value": "cupidatat adipisicing",
																			"description": "(Required) The mandatory ruleset ID."
																		},
																		{
																			"key": "association_type",
																			"value": "cupidatat adipisicing",
																			"description": "(Required) Association type"
																		},
																		{
																			"key": "associated_entity_id",
																			"value": "cupidatat adipisicing",
																			"description": "(Required) Associated entity ID"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"responseTime": null,
															"body": "{}"
														}
													]
												}
											],
											"_postman_id": "1f4f4650-3848-4452-b9b6-de6f5e50558c",
											"_postman_isSubFolder": true
										},
										{
											"name": "Updates a ruleset",
											"_postman_id": "7337cfa4-5e94-4336-95b5-a8b008f9c176",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"include_by_default\": true,\n  \"name\": \"aute officia mollit\",\n  \"region\": \"voluptate proident Lorem aliqua\",\n  \"rules\": [\n    {\n      \"azure_endpoint_name\": \"dolor elit officia e\",\n      \"egress_rule\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": \"aute in exercitation nostrud\",\n      \"source\": \"Duis ut ut consequat eiusmod\",\n      \"azure_endpoint_guid\": \"laborum qui commodo tempor\",\n      \"id\": \"fugiat sed ad eu\"\n    },\n    {\n      \"azure_endpoint_name\": \"ea tempor esse\",\n      \"egress_rule\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": \"et qui Excepteur culpa\",\n      \"source\": \"dolor elit commodo\",\n      \"azure_endpoint_guid\": \"id cupidatat Excepteur non\",\n      \"id\": \"Lorem deserun\"\n    }\n  ],\n  \"type\": \"nulla ullamco in \",\n  \"description\": \"dolore anim\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/deployments/traffic-filter/rulesets/:ruleset_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"deployments",
														"traffic-filter",
														"rulesets",
														":ruleset_id"
													],
													"variable": [
														{
															"id": "20511ef7-c7b1-49ca-b46f-19fd1bb78cd6",
															"key": "ruleset_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) The mandatory ruleset ID.",
															"type": "string"
														}
													]
												},
												"description": "Updates the ruleset with the definition."
											},
											"response": [
												{
													"id": "27353ee7-7a6a-42d4-91e8-568b9332c69d",
													"name": "The traffic filter ruleset specified by {ruleset_id} cannot be found. (code: `traffic_filter.not_found`)",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/deployments/traffic-filter/rulesets/:ruleset_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"deployments",
																"traffic-filter",
																"rulesets",
																":ruleset_id"
															],
															"variable": [
																{
																	"key": "ruleset_id",
																	"value": "cupidatat adipisicing",
																	"description": "(Required) The mandatory ruleset ID."
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"disabled": false,
															"description": "The error codes associated with the response",
															"key": "x-cloud-error-codes",
															"value": "traffic_filter.not_found"
														},
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
												},
												{
													"id": "a9296b9f-9b97-4653-8895-e597098bd967",
													"name": "The ruleset definition was valid and the update has started.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/deployments/traffic-filter/rulesets/:ruleset_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"deployments",
																"traffic-filter",
																"rulesets",
																":ruleset_id"
															],
															"variable": [
																{
																	"key": "ruleset_id",
																	"value": "cupidatat adipisicing",
																	"description": "(Required) The mandatory ruleset ID."
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"id\": \"labore consectetur\"\n}"
												},
												{
													"id": "e8e50bf3-3b24-4eb7-ba3a-66b56e689740",
													"name": "Error reading the traffic filter ruleset. (code: `traffic_filter.request_execution_failed`)",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/deployments/traffic-filter/rulesets/:ruleset_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"deployments",
																"traffic-filter",
																"rulesets",
																":ruleset_id"
															],
															"variable": [
																{
																	"key": "ruleset_id",
																	"value": "cupidatat adipisicing",
																	"description": "(Required) The mandatory ruleset ID."
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"disabled": false,
															"description": "The error codes associated with the response",
															"key": "x-cloud-error-codes",
															"value": "traffic_filter.request_execution_failed"
														},
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Delete a ruleset",
											"_postman_id": "f9ce6fc7-ce26-4b44-bc2e-1723ffaa6a2a",
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/deployments/traffic-filter/rulesets/:ruleset_id?ignore_associations=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"deployments",
														"traffic-filter",
														"rulesets",
														":ruleset_id"
													],
													"query": [
														{
															"key": "ignore_associations",
															"value": "false",
															"description": "When true, ignores the associations and deletes the ruleset. When false, recognizes the associations, which prevents the deletion of the rule set."
														}
													],
													"variable": [
														{
															"id": "885edb1c-b5a4-4461-9268-13c7e3283ad9",
															"key": "ruleset_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) The mandatory ruleset ID.",
															"type": "string"
														}
													]
												},
												"description": "Deletes the ruleset by ID."
											},
											"response": [
												{
													"id": "393c8673-a634-4ba0-a05c-c820e879b76c",
													"name": "The traffic filter ruleset was successfully deleted.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/deployments/traffic-filter/rulesets/:ruleset_id?ignore_associations=false",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"deployments",
																"traffic-filter",
																"rulesets",
																":ruleset_id"
															],
															"query": [
																{
																	"key": "ignore_associations",
																	"value": "false"
																}
															],
															"variable": [
																{
																	"key": "ruleset_id",
																	"value": "cupidatat adipisicing",
																	"description": "(Required) The mandatory ruleset ID."
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{}"
												},
												{
													"id": "7eb81c69-2b5c-4ff1-bd70-bea9019d38b6",
													"name": "The traffic filter ruleset specified by {ruleset_id} cannot be found. (code: `traffic_filter.not_found`)",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/deployments/traffic-filter/rulesets/:ruleset_id?ignore_associations=false",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"deployments",
																"traffic-filter",
																"rulesets",
																":ruleset_id"
															],
															"query": [
																{
																	"key": "ignore_associations",
																	"value": "false"
																}
															],
															"variable": [
																{
																	"key": "ruleset_id",
																	"value": "cupidatat adipisicing",
																	"description": "(Required) The mandatory ruleset ID."
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"disabled": false,
															"description": "The error codes associated with the response",
															"key": "x-cloud-error-codes",
															"value": "traffic_filter.not_found"
														},
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
												},
												{
													"id": "9ac4e43e-c843-417f-a24e-0b675b2296f4",
													"name": "Error deleting the traffic filter ruleset. (code: `traffic_filter.request_execution_failed`)",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/deployments/traffic-filter/rulesets/:ruleset_id?ignore_associations=false",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"deployments",
																"traffic-filter",
																"rulesets",
																":ruleset_id"
															],
															"query": [
																{
																	"key": "ignore_associations",
																	"value": "false"
																}
															],
															"variable": [
																{
																	"key": "ruleset_id",
																	"value": "cupidatat adipisicing",
																	"description": "(Required) The mandatory ruleset ID."
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"disabled": false,
															"description": "The error codes associated with the response",
															"key": "x-cloud-error-codes",
															"value": "traffic_filter.request_execution_failed"
														},
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Retrieves the ruleset by ID.",
											"_postman_id": "65f6aeed-9d35-4cab-b572-c098975a2c72",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/deployments/traffic-filter/rulesets/:ruleset_id?include_associations=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"deployments",
														"traffic-filter",
														"rulesets",
														":ruleset_id"
													],
													"query": [
														{
															"key": "include_associations",
															"value": "false",
															"description": "Retrieves a list of resources that are associated to the specified ruleset."
														}
													],
													"variable": [
														{
															"id": "bcecaa57-0dae-4b7b-965f-d8233e6b3e60",
															"key": "ruleset_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) The mandatory ruleset ID.",
															"type": "string"
														}
													]
												},
												"description": "Retrieves a list of resources that are associated to the specified ruleset."
											},
											"response": [
												{
													"id": "616e8dd2-1802-42c9-9654-3fcde311ee92",
													"name": "Error reading the traffic filter ruleset. (code: `traffic_filter.request_execution_failed`)",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/deployments/traffic-filter/rulesets/:ruleset_id?include_associations=false",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"deployments",
																"traffic-filter",
																"rulesets",
																":ruleset_id"
															],
															"query": [
																{
																	"key": "include_associations",
																	"value": "false"
																}
															],
															"variable": [
																{
																	"key": "ruleset_id",
																	"value": "cupidatat adipisicing",
																	"description": "(Required) The mandatory ruleset ID."
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"disabled": false,
															"description": "The error codes associated with the response",
															"key": "x-cloud-error-codes",
															"value": "traffic_filter.request_execution_failed"
														},
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
												},
												{
													"id": "aa4e45f5-727a-4e91-bd23-685e573b6c56",
													"name": "The container for a set of traffic filter rules.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/deployments/traffic-filter/rulesets/:ruleset_id?include_associations=false",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"deployments",
																"traffic-filter",
																"rulesets",
																":ruleset_id"
															],
															"query": [
																{
																	"key": "include_associations",
																	"value": "false"
																}
															],
															"variable": [
																{
																	"key": "ruleset_id",
																	"value": "cupidatat adipisicing",
																	"description": "(Required) The mandatory ruleset ID."
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"id\": \"quis laborum nulla mollit\",\n  \"include_by_default\": true,\n  \"name\": \"minim sed\",\n  \"region\": \"esse ullamco mollit\",\n  \"rules\": [\n    {\n      \"azure_endpoint_name\": \"in\",\n      \"egress_rule\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": \"et minim ad ullamco\",\n      \"source\": \"id mollit\",\n      \"azure_endpoint_guid\": \"nulla dolore Duis ullamco reprehenderit\",\n      \"id\": \"veniam et ullamco qui\"\n    },\n    {\n      \"azure_endpoint_name\": \"cillum\",\n      \"egress_rule\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": \"exercitation\",\n      \"source\": \"ut dolor magna\",\n      \"azure_endpoint_guid\": \"aute ut sunt adipisicing\",\n      \"id\": \"do ex\"\n    }\n  ],\n  \"type\": \"te\",\n  \"associations\": [\n    {\n      \"entity_type\": \"culpa labore anim laborum exercitation\",\n      \"id\": \"sint fugiat\"\n    },\n    {\n      \"entity_type\": \"voluptate laboris quis\",\n      \"id\": \"in dolore aliquip\"\n    }\n  ],\n  \"description\": \"nul\",\n  \"total_associations\": -45982715\n}"
												},
												{
													"id": "fffd43e9-5c07-4554-b739-c93698f801f5",
													"name": "The traffic filter ruleset specified by {ruleset_id} cannot be found. (code: `traffic_filter.not_found`)",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/deployments/traffic-filter/rulesets/:ruleset_id?include_associations=false",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"deployments",
																"traffic-filter",
																"rulesets",
																":ruleset_id"
															],
															"query": [
																{
																	"key": "include_associations",
																	"value": "false"
																}
															],
															"variable": [
																{
																	"key": "ruleset_id",
																	"value": "cupidatat adipisicing",
																	"description": "(Required) The mandatory ruleset ID."
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"disabled": false,
															"description": "The error codes associated with the response",
															"key": "x-cloud-error-codes",
															"value": "traffic_filter.not_found"
														},
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
												}
											]
										}
									],
									"_postman_id": "eb83e550-3b32-4a5b-8df0-f24749e002cd",
									"_postman_isSubFolder": true
								},
								{
									"name": "Create a ruleset",
									"_postman_id": "d392ae3f-9f61-493f-8c90-5f5654d54274",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"include_by_default\": true,\n  \"name\": \"dolore est Duis\",\n  \"region\": \"in sunt\",\n  \"rules\": [\n    {\n      \"azure_endpoint_name\": \"nostrud deserunt dolor\",\n      \"egress_rule\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": \"culp\",\n      \"source\": \"non in\",\n      \"azure_endpoint_guid\": \"anim consectetur incididunt sunt\",\n      \"id\": \"elit qui non consectetur in\"\n    },\n    {\n      \"azure_endpoint_name\": \"voluptate c\",\n      \"egress_rule\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": \"Excepteur occaecat exercitation\",\n      \"source\": \"irure ullamco aute aliqua dolore\",\n      \"azure_endpoint_guid\": \"cillum in dolor\",\n      \"id\": \"mollit ea Duis\"\n    }\n  ],\n  \"type\": \"do commodo amet\",\n  \"description\": \"ex labore nisi ut consequat\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/deployments/traffic-filter/rulesets",
										"description": "Creates a ruleset that consists of a set of rules."
									},
									"response": [
										{
											"id": "4df4d7f3-06b7-4568-b7c8-ba912d698713",
											"name": "Error creating the traffic filter ruleset. (code: `traffic_filter.request_execution_failed`)",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": "{{baseUrl}}/deployments/traffic-filter/rulesets"
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"disabled": false,
													"description": "The error codes associated with the response",
													"key": "x-cloud-error-codes",
													"value": "traffic_filter.request_execution_failed"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
										},
										{
											"id": "bea22da9-da34-44c3-a5c1-734959768c2c",
											"name": "The ruleset definition is valid and the creation has started.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": "{{baseUrl}}/deployments/traffic-filter/rulesets"
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"id\": \"labore consectetur\"\n}"
										}
									]
								},
								{
									"name": "List traffic filter rulesets",
									"_postman_id": "e1801bfb-49d4-4f94-8004-1e82432eb574",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/deployments/traffic-filter/rulesets?include_associations=false&region=cupidatat adipisicing&organization_id=cupidatat adipisicing",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"deployments",
												"traffic-filter",
												"rulesets"
											],
											"query": [
												{
													"key": "include_associations",
													"value": "false",
													"description": "Retrieves a list of resources that are associated to the specified ruleset."
												},
												{
													"key": "region",
													"value": "cupidatat adipisicing",
													"description": "If provided limits the rulesets to that region only."
												},
												{
													"key": "organization_id",
													"value": "cupidatat adipisicing",
													"description": "Retrieves a list of resources that are associated to the specified organization ID. It only takes effect if the user is an admin."
												}
											]
										},
										"description": "List all of the traffic filter rulesets."
									},
									"response": [
										{
											"id": "1b3f5ab2-93bd-41b3-a2a4-51d957a5024a",
											"name": "The collection of traffic filter routes",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/deployments/traffic-filter/rulesets?include_associations=false&region=cupidatat adipisicing&organization_id=cupidatat adipisicing",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"deployments",
														"traffic-filter",
														"rulesets"
													],
													"query": [
														{
															"key": "include_associations",
															"value": "false"
														},
														{
															"key": "region",
															"value": "cupidatat adipisicing"
														},
														{
															"key": "organization_id",
															"value": "cupidatat adipisicing"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"rulesets\": [\n    {\n      \"id\": \"do Ut officia adipisicing in\",\n      \"include_by_default\": false,\n      \"name\": \"sed laborum\",\n      \"region\": \"ex et cupidatat incididunt\",\n      \"rules\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"type\": \"culpa qui veniam\",\n      \"associations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"description\": \"est non\",\n      \"total_associations\": 42442169\n    },\n    {\n      \"id\": \"adipisicing reprehenderit esse pariatur veniam\",\n      \"include_by_default\": false,\n      \"name\": \"sunt ea\",\n      \"region\": \"sint dolore\",\n      \"rules\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"type\": \"commodo laboris\",\n      \"associations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"description\": \"voluptate officia aliqua\",\n      \"total_associations\": 21650974\n    }\n  ]\n}"
										},
										{
											"id": "398b9af7-8a4c-4f7d-bfe5-f4b8bbda7fc7",
											"name": "Error fetching traffic filter rulesets. (code: `traffic_filter.request_execution_failed`)",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/deployments/traffic-filter/rulesets?include_associations=false&region=cupidatat adipisicing&organization_id=cupidatat adipisicing",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"deployments",
														"traffic-filter",
														"rulesets"
													],
													"query": [
														{
															"key": "include_associations",
															"value": "false"
														},
														{
															"key": "region",
															"value": "cupidatat adipisicing"
														},
														{
															"key": "organization_id",
															"value": "cupidatat adipisicing"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"disabled": false,
													"description": "The error codes associated with the response",
													"key": "x-cloud-error-codes",
													"value": "traffic_filter.request_execution_failed"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
										}
									]
								}
							],
							"_postman_id": "60c229b1-d891-4033-a6b4-be3e023f04f9",
							"_postman_isSubFolder": true
						},
						{
							"name": "Get associated rulesets",
							"_postman_id": "3fdf6986-7dd8-426a-9a21-c90166c9e38b",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/deployments/traffic-filter/associations/:association_type/:associated_entity_id/rulesets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"deployments",
										"traffic-filter",
										"associations",
										":association_type",
										":associated_entity_id",
										"rulesets"
									],
									"variable": [
										{
											"id": "773eb0a8-500f-4ea4-8cac-b4f432e005f4",
											"key": "association_type",
											"value": "cupidatat adipisicing",
											"description": "(Required) Association type",
											"type": "string"
										},
										{
											"id": "466b71b1-1c73-419c-8434-43fa445824ae",
											"key": "associated_entity_id",
											"value": "cupidatat adipisicing",
											"description": "(Required) Associated entity ID",
											"type": "string"
										}
									]
								},
								"description": "Retrieves the rulesets associated with a deployment."
							},
							"response": [
								{
									"id": "1a7a0190-575a-48a8-ad7a-9ad9e088b3f9",
									"name": "Invalid association type. (code: `traffic_filter.invalid_association_type`)",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/deployments/traffic-filter/associations/:association_type/:associated_entity_id/rulesets",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"deployments",
												"traffic-filter",
												"associations",
												":association_type",
												":associated_entity_id",
												"rulesets"
											],
											"variable": [
												{
													"key": "association_type",
													"value": "cupidatat adipisicing",
													"description": "(Required) Association type"
												},
												{
													"key": "associated_entity_id",
													"value": "cupidatat adipisicing",
													"description": "(Required) Associated entity ID"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"disabled": false,
											"description": "The error codes associated with the response",
											"key": "x-cloud-error-codes",
											"value": "traffic_filter.invalid_association_type"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
								},
								{
									"id": "534ad5c3-90e0-469d-ad10-785a9cd54073",
									"name": "Error fetching traffic filter rulesets. (code: `traffic_filter.request_execution_failed`)",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/deployments/traffic-filter/associations/:association_type/:associated_entity_id/rulesets",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"deployments",
												"traffic-filter",
												"associations",
												":association_type",
												":associated_entity_id",
												"rulesets"
											],
											"variable": [
												{
													"key": "association_type",
													"value": "cupidatat adipisicing",
													"description": "(Required) Association type"
												},
												{
													"key": "associated_entity_id",
													"value": "cupidatat adipisicing",
													"description": "(Required) Associated entity ID"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"disabled": false,
											"description": "The error codes associated with the response",
											"key": "x-cloud-error-codes",
											"value": "traffic_filter.request_execution_failed"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
								},
								{
									"id": "a0dc9107-6927-4b60-9a68-aa9ae7c638ab",
									"name": "Rulesets in the deployment were successfully returned",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/deployments/traffic-filter/associations/:association_type/:associated_entity_id/rulesets",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"deployments",
												"traffic-filter",
												"associations",
												":association_type",
												":associated_entity_id",
												"rulesets"
											],
											"variable": [
												{
													"key": "association_type",
													"value": "cupidatat adipisicing",
													"description": "(Required) Association type"
												},
												{
													"key": "associated_entity_id",
													"value": "cupidatat adipisicing",
													"description": "(Required) Associated entity ID"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"rulesets\": [\n    \"exercitation\",\n    \"enim commodo laborum\"\n  ]\n}"
								}
							]
						}
					],
					"_postman_id": "b70b97ec-79f7-4eb1-b0d9-5094aafce957",
					"_postman_isSubFolder": true
				},
				{
					"name": "extensions",
					"item": [
						{
							"name": "{extension id}",
							"item": [
								{
									"name": "Uploads the Extension",
									"_postman_id": "fde0c956-4352-487c-b32e-e7470f8016af",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"type": "file",
													"description": "(Required) Zip file that contains the extension",
													"value": null
												}
											],
											"options": {
												"formdata": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/deployments/extensions/:extension_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"deployments",
												"extensions",
												":extension_id"
											],
											"variable": [
												{
													"id": "309e745f-2715-45c4-9f1e-007614968b81",
													"key": "extension_id",
													"value": "cupidatat adipisicing",
													"description": "(Required) Id of an extension",
													"type": "string"
												}
											]
										},
										"description": "Uploads archive for an extension."
									},
									"response": [
										{
											"id": "11a9119c-6928-427e-a07e-ca87d09cc624",
											"name": "The extension you want does not exist. (code: `extensions.not_found`)",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"description": "(Required) Zip file that contains the extension",
															"key": "file",
															"type": "file"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/deployments/extensions/:extension_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"deployments",
														"extensions",
														":extension_id"
													],
													"variable": [
														{
															"key": "extension_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) Id of an extension"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"disabled": false,
													"description": "The error codes associated with the response",
													"key": "x-cloud-error-codes",
													"value": "extensions.not_found"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
										},
										{
											"id": "29ca8b4a-e31d-4272-85c4-b984ae1ececc",
											"name": "Could not accept the extensions file. (code: `extensions.request_execution_failed`)",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"description": "(Required) Zip file that contains the extension",
															"key": "file",
															"type": "file"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/deployments/extensions/:extension_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"deployments",
														"extensions",
														":extension_id"
													],
													"variable": [
														{
															"key": "extension_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) Id of an extension"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"disabled": false,
													"description": "The error codes associated with the response",
													"key": "x-cloud-error-codes",
													"value": "extensions.request_execution_failed"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
										},
										{
											"id": "574f3a4e-3589-4b70-ac6f-db16a5cde883",
											"name": "* The extension does not belong to you. (code: `extensions.unauthorised`)\n* Your current session does not have a user id associated with it. (code: `extensions.no_user_id`)",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"description": "(Required) Zip file that contains the extension",
															"key": "file",
															"type": "file"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/deployments/extensions/:extension_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"deployments",
														"extensions",
														":extension_id"
													],
													"variable": [
														{
															"key": "extension_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) Id of an extension"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"disabled": false,
													"description": "The error codes associated with the response",
													"key": "x-cloud-error-codes",
													"value": "extensions.no_user_id"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
										},
										{
											"id": "8ab93bca-4edd-429c-8ed5-e24396bd01d9",
											"name": "Archive uploaded successfully.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"description": "(Required) Zip file that contains the extension",
															"key": "file",
															"type": "file"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/deployments/extensions/:extension_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"deployments",
														"extensions",
														":extension_id"
													],
													"variable": [
														{
															"key": "extension_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) Id of an extension"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"disabled": false,
													"description": "The date-time when the resource was last modified (ISO format relative to UTC)",
													"key": "x-cloud-resource-last-modified",
													"value": "cupidatat adipisicing"
												},
												{
													"disabled": false,
													"description": "The date-time when the resource was created (ISO format relative to UTC)",
													"key": "x-cloud-resource-created",
													"value": "cupidatat adipisicing"
												},
												{
													"disabled": false,
													"description": "The resource version, which is used to avoid update conflicts with concurrent operations",
													"key": "x-cloud-resource-version",
													"value": "cupidatat adipisicing"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"extension_type\": \"plugin\",\n  \"id\": \"amet non veniam incididunt id\",\n  \"name\": \"in ut irure\",\n  \"url\": \"Lorem tempor nostrud qui irure\",\n  \"version\": \"cupidatat Duis incididunt do\",\n  \"description\": \"sint laboris fugiat\",\n  \"download_url\": \"commodo in dolor ullamco\",\n  \"deployments\": [\n    \"incididunt Excepteur eu cupidatat\",\n    \"consectetur in sed minim\"\n  ],\n  \"file_metadata\": {\n    \"url\": \"https://sHyNCzqfbMJQXDjxRtW.eckeF7y6iRPIgFNa0mZvJ75pwW-hXGEbjUMB\",\n    \"last_modified_date\": \"1973-07-14T05:11:17.507Z\",\n    \"size\": 89884943\n  }\n}"
										}
									]
								},
								{
									"name": "Update Extension",
									"_postman_id": "54f325e7-9770-4305-91ea-63d776a74b50",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"extension_type\": \"plugin\",\n  \"name\": \"quis ad\",\n  \"version\": \"minim est\",\n  \"download_url\": \"ullamco ipsum Lorem dolore\",\n  \"description\": \"mollit ex laborum elit\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/deployments/extensions/:extension_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"deployments",
												"extensions",
												":extension_id"
											],
											"variable": [
												{
													"id": "670efbbf-a557-4174-98be-791167175b39",
													"key": "extension_id",
													"value": "cupidatat adipisicing",
													"description": "(Required) Id of an extension",
													"type": "string"
												}
											]
										},
										"description": "Updates an extension."
									},
									"response": [
										{
											"id": "53f908b4-993d-4059-b449-48bde5a54be0",
											"name": "Extension updated successfully.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"extension_type\": \"plugin\",\n  \"name\": \"quis ad\",\n  \"version\": \"minim est\",\n  \"download_url\": \"ullamco ipsum Lorem dolore\",\n  \"description\": \"mollit ex laborum elit\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/deployments/extensions/:extension_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"deployments",
														"extensions",
														":extension_id"
													],
													"variable": [
														{
															"key": "extension_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) Id of an extension"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"disabled": false,
													"description": "The date-time when the resource was last modified (ISO format relative to UTC)",
													"key": "x-cloud-resource-last-modified",
													"value": "cupidatat adipisicing"
												},
												{
													"disabled": false,
													"description": "The date-time when the resource was created (ISO format relative to UTC)",
													"key": "x-cloud-resource-created",
													"value": "cupidatat adipisicing"
												},
												{
													"disabled": false,
													"description": "The resource version, which is used to avoid update conflicts with concurrent operations",
													"key": "x-cloud-resource-version",
													"value": "cupidatat adipisicing"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"extension_type\": \"plugin\",\n  \"id\": \"amet non veniam incididunt id\",\n  \"name\": \"in ut irure\",\n  \"url\": \"Lorem tempor nostrud qui irure\",\n  \"version\": \"cupidatat Duis incididunt do\",\n  \"description\": \"sint laboris fugiat\",\n  \"download_url\": \"commodo in dolor ullamco\",\n  \"deployments\": [\n    \"incididunt Excepteur eu cupidatat\",\n    \"consectetur in sed minim\"\n  ],\n  \"file_metadata\": {\n    \"url\": \"https://sHyNCzqfbMJQXDjxRtW.eckeF7y6iRPIgFNa0mZvJ75pwW-hXGEbjUMB\",\n    \"last_modified_date\": \"1973-07-14T05:11:17.507Z\",\n    \"size\": 89884943\n  }\n}"
										},
										{
											"id": "a2dd166f-edc1-43cb-8a83-3361980ce602",
											"name": "The extension you want does not exist. (code: `extensions.not_found`)",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"extension_type\": \"plugin\",\n  \"name\": \"quis ad\",\n  \"version\": \"minim est\",\n  \"download_url\": \"ullamco ipsum Lorem dolore\",\n  \"description\": \"mollit ex laborum elit\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/deployments/extensions/:extension_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"deployments",
														"extensions",
														":extension_id"
													],
													"variable": [
														{
															"key": "extension_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) Id of an extension"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"disabled": false,
													"description": "The error codes associated with the response",
													"key": "x-cloud-error-codes",
													"value": "extensions.not_found"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
										},
										{
											"id": "a5915795-8b08-474a-82e6-5e733ec31c4f",
											"name": "Could not download the extension from the specified URL. (code: `extensions.request_execution_failed`)",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"extension_type\": \"plugin\",\n  \"name\": \"quis ad\",\n  \"version\": \"minim est\",\n  \"download_url\": \"ullamco ipsum Lorem dolore\",\n  \"description\": \"mollit ex laborum elit\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/deployments/extensions/:extension_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"deployments",
														"extensions",
														":extension_id"
													],
													"variable": [
														{
															"key": "extension_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) Id of an extension"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"disabled": false,
													"description": "The error codes associated with the response",
													"key": "x-cloud-error-codes",
													"value": "extensions.request_execution_failed"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
										},
										{
											"id": "b07d56d7-4242-46c7-bcc3-26cea5eff6e2",
											"name": "* The extension does not belong to you. (code: `extensions.unauthorised`)\n* Your current session does not have a user id associated with it. (code: `extensions.no_user_id`)",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"extension_type\": \"plugin\",\n  \"name\": \"quis ad\",\n  \"version\": \"minim est\",\n  \"download_url\": \"ullamco ipsum Lorem dolore\",\n  \"description\": \"mollit ex laborum elit\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/deployments/extensions/:extension_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"deployments",
														"extensions",
														":extension_id"
													],
													"variable": [
														{
															"key": "extension_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) Id of an extension"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"disabled": false,
													"description": "The error codes associated with the response",
													"key": "x-cloud-error-codes",
													"value": "extensions.no_user_id"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
										},
										{
											"id": "ee4cbdeb-896e-4fda-9765-e99df2bd69a0",
											"name": "The version you sent does not match the persisted version. (code: `extensions.version_conflict`)",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"extension_type\": \"plugin\",\n  \"name\": \"quis ad\",\n  \"version\": \"minim est\",\n  \"download_url\": \"ullamco ipsum Lorem dolore\",\n  \"description\": \"mollit ex laborum elit\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/deployments/extensions/:extension_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"deployments",
														"extensions",
														":extension_id"
													],
													"variable": [
														{
															"key": "extension_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) Id of an extension"
														}
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"disabled": false,
													"description": "The error codes associated with the response",
													"key": "x-cloud-error-codes",
													"value": "extensions.version_conflict"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Delete Extension",
									"_postman_id": "022ea2b6-2fed-44b0-8332-b4e10f9c4d04",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/deployments/extensions/:extension_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"deployments",
												"extensions",
												":extension_id"
											],
											"variable": [
												{
													"id": "a69fcc43-e68c-424b-8a36-7b471ba409c2",
													"key": "extension_id",
													"value": "cupidatat adipisicing",
													"description": "(Required) Id of an extension",
													"type": "string"
												}
											]
										},
										"description": "Deletes a Extension."
									},
									"response": [
										{
											"id": "087ea263-24b1-4a90-8d33-991bc1552fbc",
											"name": "Extension deleted successfully.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/deployments/extensions/:extension_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"deployments",
														"extensions",
														":extension_id"
													],
													"variable": [
														{
															"key": "extension_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) Id of an extension"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"disabled": false,
													"description": "The date-time when the resource was last modified (ISO format relative to UTC)",
													"key": "x-cloud-resource-last-modified",
													"value": "cupidatat adipisicing"
												},
												{
													"disabled": false,
													"description": "The date-time when the resource was created (ISO format relative to UTC)",
													"key": "x-cloud-resource-created",
													"value": "cupidatat adipisicing"
												},
												{
													"disabled": false,
													"description": "The resource version, which is used to avoid update conflicts with concurrent operations",
													"key": "x-cloud-resource-version",
													"value": "cupidatat adipisicing"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{}"
										},
										{
											"id": "4b327309-a629-47ca-9c2e-fec8e1cd178a",
											"name": "The version you sent does not match the persisted version. (code: `extensions.version_conflict`)",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/deployments/extensions/:extension_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"deployments",
														"extensions",
														":extension_id"
													],
													"variable": [
														{
															"key": "extension_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) Id of an extension"
														}
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"disabled": false,
													"description": "The error codes associated with the response",
													"key": "x-cloud-error-codes",
													"value": "extensions.version_conflict"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
										},
										{
											"id": "f93bdab1-d2d8-404e-b929-312e348b2146",
											"name": "The extension requested does not exist. (code: `extensions.not_found`)",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/deployments/extensions/:extension_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"deployments",
														"extensions",
														":extension_id"
													],
													"variable": [
														{
															"key": "extension_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) Id of an extension"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"disabled": false,
													"description": "The error codes associated with the response",
													"key": "x-cloud-error-codes",
													"value": "extensions.not_found"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
										},
										{
											"id": "fac6d06a-f1dc-45d6-9505-1a60f841d762",
											"name": "* The extension does not belong to you. (code: `extensions.unauthorised`)\n* Your current session does not have a user id associated with it. (code: `extensions.no_user_id`)",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/deployments/extensions/:extension_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"deployments",
														"extensions",
														":extension_id"
													],
													"variable": [
														{
															"key": "extension_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) Id of an extension"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"disabled": false,
													"description": "The error codes associated with the response",
													"key": "x-cloud-error-codes",
													"value": "extensions.no_user_id"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Get Extension",
									"_postman_id": "4d5ed432-75fb-4184-b5ed-96dd27dc5a05",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/deployments/extensions/:extension_id?include_deployments=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"deployments",
												"extensions",
												":extension_id"
											],
											"query": [
												{
													"key": "include_deployments",
													"value": "false",
													"description": "Include deployments referencing this extension. Up to only 10000 deployments will be included."
												}
											],
											"variable": [
												{
													"id": "1efb0f8d-b44b-4f5f-a187-5f5b9f1ae6ce",
													"key": "extension_id",
													"value": "cupidatat adipisicing",
													"description": "(Required) Id of an extension",
													"type": "string"
												}
											]
										},
										"description": "Retrieves an extension."
									},
									"response": [
										{
											"id": "204a0c56-6fea-4d81-87d8-eaa1b3909d39",
											"name": "The extension requested does not exist. (code: `extensions.not_found`)",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/deployments/extensions/:extension_id?include_deployments=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"deployments",
														"extensions",
														":extension_id"
													],
													"query": [
														{
															"key": "include_deployments",
															"value": "false"
														}
													],
													"variable": [
														{
															"key": "extension_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) Id of an extension"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"disabled": false,
													"description": "The error codes associated with the response",
													"key": "x-cloud-error-codes",
													"value": "extensions.not_found"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
										},
										{
											"id": "a118e541-cdcc-4e31-8cb1-e22ce7dcf37c",
											"name": "The Extension",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/deployments/extensions/:extension_id?include_deployments=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"deployments",
														"extensions",
														":extension_id"
													],
													"query": [
														{
															"key": "include_deployments",
															"value": "false"
														}
													],
													"variable": [
														{
															"key": "extension_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) Id of an extension"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"disabled": false,
													"description": "The date-time when the resource was last modified (ISO format relative to UTC)",
													"key": "x-cloud-resource-last-modified",
													"value": "cupidatat adipisicing"
												},
												{
													"disabled": false,
													"description": "The date-time when the resource was created (ISO format relative to UTC)",
													"key": "x-cloud-resource-created",
													"value": "cupidatat adipisicing"
												},
												{
													"disabled": false,
													"description": "The resource version, which is used to avoid update conflicts with concurrent operations",
													"key": "x-cloud-resource-version",
													"value": "cupidatat adipisicing"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"extension_type\": \"plugin\",\n  \"id\": \"amet non veniam incididunt id\",\n  \"name\": \"in ut irure\",\n  \"url\": \"Lorem tempor nostrud qui irure\",\n  \"version\": \"cupidatat Duis incididunt do\",\n  \"description\": \"sint laboris fugiat\",\n  \"download_url\": \"commodo in dolor ullamco\",\n  \"deployments\": [\n    \"incididunt Excepteur eu cupidatat\",\n    \"consectetur in sed minim\"\n  ],\n  \"file_metadata\": {\n    \"url\": \"https://sHyNCzqfbMJQXDjxRtW.eckeF7y6iRPIgFNa0mZvJ75pwW-hXGEbjUMB\",\n    \"last_modified_date\": \"1973-07-14T05:11:17.507Z\",\n    \"size\": 89884943\n  }\n}"
										}
									]
								}
							],
							"_postman_id": "7eef3824-0b6f-4693-ad3c-9a19090ad13d",
							"_postman_isSubFolder": true
						},
						{
							"name": "Create an extension",
							"_postman_id": "9f6708f5-c427-4c74-8cf0-838b01524101",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"extension_type\": \"plugin\",\n  \"name\": \"adipisicing commodo reprehenderit\",\n  \"version\": \"exercitation\",\n  \"download_url\": \"sunt qui enim\",\n  \"description\": \"laborum dolore Ut nostrud eu\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/deployments/extensions",
								"description": "Creates the extension.\n The extensions API supports two types of usage patterns.\n A). Specify a `download_url`, http or https URL,  where the extension is currently hosted. This will result in extension being copied to elastic repository.\n B). Create only the extension metadata using the `POST` endpoint and then use `PUT` to upload the extension file. Leave the `download_url` unspecified in this case.\n"
							},
							"response": [
								{
									"id": "56364722-2427-4399-9bcc-e7fc02e5477b",
									"name": "The extension that was just created.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"extension_type\": \"plugin\",\n  \"name\": \"adipisicing commodo reprehenderit\",\n  \"version\": \"exercitation\",\n  \"download_url\": \"sunt qui enim\",\n  \"description\": \"laborum dolore Ut nostrud eu\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/deployments/extensions"
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"disabled": false,
											"description": "The date-time when the resource was last modified (ISO format relative to UTC)",
											"key": "x-cloud-resource-last-modified",
											"value": "cupidatat adipisicing"
										},
										{
											"disabled": false,
											"description": "The date-time when the resource was created (ISO format relative to UTC)",
											"key": "x-cloud-resource-created",
											"value": "cupidatat adipisicing"
										},
										{
											"disabled": false,
											"description": "The resource version, which is used to avoid update conflicts with concurrent operations",
											"key": "x-cloud-resource-version",
											"value": "cupidatat adipisicing"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"extension_type\": \"plugin\",\n  \"id\": \"exercitation deserunt ut qui\",\n  \"name\": \"quis in pariatur\",\n  \"url\": \"ut eu dolore fugiat\",\n  \"version\": \"minim officia\",\n  \"description\": \"tempor proident eu eiusmod\",\n  \"download_url\": \"Duis id\",\n  \"deployments\": [\n    \"Ut\",\n    \"ea deserunt occaecat sed\"\n  ],\n  \"file_metadata\": {\n    \"url\": \"http://rNUchCeaEkfB.eeorhs7XJqHU0JQmiEmJKaq.JG2SnxIKBwGaYPOwWHdMnJFQNa7QMbvQfmDtxmPYavLN\",\n    \"last_modified_date\": \"1995-09-01T23:52:16.358Z\",\n    \"size\": 8492943\n  }\n}"
								},
								{
									"id": "871e4d02-8931-45a6-85a3-2bd7056c3b09",
									"name": "Your current session does not have a user id associated with it. (code: `extensions.no_user_id`)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"extension_type\": \"plugin\",\n  \"name\": \"adipisicing commodo reprehenderit\",\n  \"version\": \"exercitation\",\n  \"download_url\": \"sunt qui enim\",\n  \"description\": \"laborum dolore Ut nostrud eu\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/deployments/extensions"
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"disabled": false,
											"description": "The error codes associated with the response",
											"key": "x-cloud-error-codes",
											"value": "extensions.no_user_id"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
								},
								{
									"id": "a3ec9f71-df08-4cb1-ad15-cacd92c5577c",
									"name": "An extension already exists with the generated id. Please try again. (code: `extensions.id_already_exists`)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"extension_type\": \"plugin\",\n  \"name\": \"adipisicing commodo reprehenderit\",\n  \"version\": \"exercitation\",\n  \"download_url\": \"sunt qui enim\",\n  \"description\": \"laborum dolore Ut nostrud eu\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/deployments/extensions"
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"disabled": false,
											"description": "The error codes associated with the response",
											"key": "x-cloud-error-codes",
											"value": "extensions.id_already_exists"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
								},
								{
									"id": "e942ee35-1d27-469b-bc77-c73bee1461ab",
									"name": "Could not download the extension from the specified URL. (code: `extensions.request_execution_failed`)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"extension_type\": \"plugin\",\n  \"name\": \"adipisicing commodo reprehenderit\",\n  \"version\": \"exercitation\",\n  \"download_url\": \"sunt qui enim\",\n  \"description\": \"laborum dolore Ut nostrud eu\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/deployments/extensions"
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"disabled": false,
											"description": "The error codes associated with the response",
											"key": "x-cloud-error-codes",
											"value": "extensions.request_execution_failed"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "List Extensions",
							"_postman_id": "c042eaa1-aec7-4bfe-87a9-f69bebd45281",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": "{{baseUrl}}/deployments/extensions",
								"description": "Retrieves all of the available extensions."
							},
							"response": [
								{
									"id": "b56de117-355a-43d8-9ded-58a764a8f9eb",
									"name": "The extensions that are available",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": "{{baseUrl}}/deployments/extensions"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"extensions\": [\n    {\n      \"extension_type\": \"bundle\",\n      \"id\": \"amet sit dolor\",\n      \"name\": \"reprehe\",\n      \"url\": \"commo\",\n      \"version\": \"cillum id Ut\",\n      \"description\": \"culpa consequat\",\n      \"download_url\": \"reprehenderit Excepteur sit\",\n      \"deployments\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"file_metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"extension_type\": \"bundle\",\n      \"id\": \"dolore commodo voluptate id\",\n      \"name\": \"Duis labore in pariatur dolore\",\n      \"url\": \"consectetur tempor\",\n      \"version\": \"quis aliqua voluptate\",\n      \"description\": \"magna laborum ipsum Ut mollit\",\n      \"download_url\": \"non pro\",\n      \"deployments\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"file_metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ]\n}"
								}
							]
						}
					],
					"_postman_id": "46b8ce1b-60d6-41e4-829c-35b6bfe5a28d",
					"_postman_isSubFolder": true
				},
				{
					"name": "Create Deployment",
					"_postman_id": "b4507805-c0bf-4508-9323-b8adfe531937",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"exercitation magna in qui est\",\n  \"settings\": {\n    \"autoscaling_enabled\": false,\n    \"observability\": {\n      \"metrics\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"logging\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"traffic_filter_settings\": {\n      \"rulesets\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"region\": \"ad velit tempor sunt ea\",\n  \"alias\": \"id proident consequat\",\n  \"version\": \"est culpa\",\n  \"resources\": {\n    \"enterprise_search\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"kibana\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"elasticsearch\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"apm\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"appsearch\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"integrations_server\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  },\n  \"metadata\": {\n    \"tags\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/deployments?request_id=cupidatat adipisicing&validate_only=true&template_id=aws-storage-optimized-v3",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"deployments"
							],
							"query": [
								{
									"key": "request_id",
									"value": "cupidatat adipisicing",
									"description": "An optional idempotency token - if two create requests share the same request_id token (min size 32 characters, max 128) then only one deployment will be created, the second request will return the info of that deployment (in the same format described below, but with blanks for auth-related fields)"
								},
								{
									"key": "validate_only",
									"value": "true",
									"description": "If true, will just validate the Deployment definition but will not perform the creation"
								},
								{
									"key": "template_id",
									"value": "aws-storage-optimized-v3",
									"description": "An optional template id - if present, the referenced template will be used to fill in the resources field of the deployment creation request. If any resources are present in the request together with the template, the ones coming in the request will prevail and no merging with the template will be performed."
								}
							]
						},
						"description": "Creates a Deployment."
					},
					"response": [
						{
							"id": "1d3d5678-cbf7-4b56-928a-95d577912656",
							"name": "The request was valid and deployment creation had already been started.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"amet\",\n  \"settings\": {\n    \"autoscaling_enabled\": true,\n    \"observability\": {\n      \"metrics\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"logging\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"traffic_filter_settings\": {\n      \"rulesets\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"region\": \"ad do\",\n  \"alias\": \"et velit commodo cupidatat\",\n  \"version\": \"incididunt tempor minim adipisicing\",\n  \"resources\": {\n    \"enterprise_search\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"kibana\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"elasticsearch\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"apm\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"appsearch\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"integrations_server\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  },\n  \"metadata\": {\n    \"tags\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/deployments?request_id=cupidatat adipisicing&validate_only=false&template_id=cupidatat adipisicing",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"deployments"
									],
									"query": [
										{
											"key": "request_id",
											"value": "cupidatat adipisicing"
										},
										{
											"key": "validate_only",
											"value": "false"
										},
										{
											"key": "template_id",
											"value": "cupidatat adipisicing"
										}
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"created\": false,\n  \"id\": \"cillum et Ut\",\n  \"name\": \"nisi ullamco aliqua sed sunt\",\n  \"resources\": [\n    {\n      \"id\": \"ea sint elit est Ut\",\n      \"kind\": \"labore\",\n      \"ref_id\": \"id in reprehenderit eiusmod\",\n      \"region\": \"eu consectetur sed fugiat non\",\n      \"elasticsearch_cluster_ref_id\": \"culpa ipsum\",\n      \"cloud_id\": \"dolor Ut\",\n      \"secret_token\": \"in \",\n      \"warnings\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"credentials\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"id\": \"et ea\",\n      \"kind\": \"eu\",\n      \"ref_id\": \"Ut minim do dolore\",\n      \"region\": \"amet Excepteur nostrud culpa\",\n      \"elasticsearch_cluster_ref_id\": \"in fugiat in\",\n      \"cloud_id\": \"dolor Ut elit id\",\n      \"secret_token\": \"eu quis\",\n      \"warnings\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"credentials\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"alias\": \"sint magna\",\n  \"diagnostics\": {\n    \"creates\": {\n      \"enterprise_search\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"kibana\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"elasticsearch\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"apm\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"appsearch\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"integrations_server\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"updates\": {\n      \"enterprise_search\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"kibana\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"elasticsearch\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"apm\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"appsearch\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"integrations_server\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  }\n}"
						},
						{
							"id": "47d77637-9f9a-4897-8af5-bd0675e97f29",
							"name": "You are not authorized to perform this action.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"amet\",\n  \"settings\": {\n    \"autoscaling_enabled\": true,\n    \"observability\": {\n      \"metrics\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"logging\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"traffic_filter_settings\": {\n      \"rulesets\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"region\": \"ad do\",\n  \"alias\": \"et velit commodo cupidatat\",\n  \"version\": \"incididunt tempor minim adipisicing\",\n  \"resources\": {\n    \"enterprise_search\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"kibana\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"elasticsearch\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"apm\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"appsearch\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"integrations_server\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  },\n  \"metadata\": {\n    \"tags\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/deployments?request_id=cupidatat adipisicing&validate_only=false&template_id=cupidatat adipisicing",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"deployments"
									],
									"query": [
										{
											"key": "request_id",
											"value": "cupidatat adipisicing"
										},
										{
											"key": "validate_only",
											"value": "false"
										},
										{
											"key": "template_id",
											"value": "cupidatat adipisicing"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
						},
						{
							"id": "5d1301fe-b75b-4dec-8321-171646930287",
							"name": "The request was valid and a new deployment was created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"amet\",\n  \"settings\": {\n    \"autoscaling_enabled\": true,\n    \"observability\": {\n      \"metrics\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"logging\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"traffic_filter_settings\": {\n      \"rulesets\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"region\": \"ad do\",\n  \"alias\": \"et velit commodo cupidatat\",\n  \"version\": \"incididunt tempor minim adipisicing\",\n  \"resources\": {\n    \"enterprise_search\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"kibana\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"elasticsearch\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"apm\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"appsearch\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"integrations_server\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  },\n  \"metadata\": {\n    \"tags\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/deployments?request_id=cupidatat adipisicing&validate_only=false&template_id=cupidatat adipisicing",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"deployments"
									],
									"query": [
										{
											"key": "request_id",
											"value": "cupidatat adipisicing"
										},
										{
											"key": "validate_only",
											"value": "false"
										},
										{
											"key": "template_id",
											"value": "cupidatat adipisicing"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"disabled": false,
									"description": "The date-time when the resource was last modified (ISO format relative to UTC)",
									"key": "x-cloud-resource-last-modified",
									"value": "cupidatat adipisicing"
								},
								{
									"disabled": false,
									"description": "The date-time when the resource was created (ISO format relative to UTC)",
									"key": "x-cloud-resource-created",
									"value": "cupidatat adipisicing"
								},
								{
									"disabled": false,
									"description": "The resource version, which is used to avoid update conflicts with concurrent operations",
									"key": "x-cloud-resource-version",
									"value": "cupidatat adipisicing"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"created\": false,\n  \"id\": \"cillum et Ut\",\n  \"name\": \"nisi ullamco aliqua sed sunt\",\n  \"resources\": [\n    {\n      \"id\": \"ea sint elit est Ut\",\n      \"kind\": \"labore\",\n      \"ref_id\": \"id in reprehenderit eiusmod\",\n      \"region\": \"eu consectetur sed fugiat non\",\n      \"elasticsearch_cluster_ref_id\": \"culpa ipsum\",\n      \"cloud_id\": \"dolor Ut\",\n      \"secret_token\": \"in \",\n      \"warnings\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"credentials\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"id\": \"et ea\",\n      \"kind\": \"eu\",\n      \"ref_id\": \"Ut minim do dolore\",\n      \"region\": \"amet Excepteur nostrud culpa\",\n      \"elasticsearch_cluster_ref_id\": \"in fugiat in\",\n      \"cloud_id\": \"dolor Ut elit id\",\n      \"secret_token\": \"eu quis\",\n      \"warnings\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"credentials\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"alias\": \"sint magna\",\n  \"diagnostics\": {\n    \"creates\": {\n      \"enterprise_search\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"kibana\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"elasticsearch\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"apm\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"appsearch\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"integrations_server\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"updates\": {\n      \"enterprise_search\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"kibana\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"elasticsearch\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"apm\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"appsearch\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"integrations_server\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  }\n}"
						},
						{
							"id": "8b4eb739-aa89-42fc-91d7-7da41ff76152",
							"name": "The request was valid (used when validate_only is true).",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"amet\",\n  \"settings\": {\n    \"autoscaling_enabled\": true,\n    \"observability\": {\n      \"metrics\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"logging\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"traffic_filter_settings\": {\n      \"rulesets\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"region\": \"ad do\",\n  \"alias\": \"et velit commodo cupidatat\",\n  \"version\": \"incididunt tempor minim adipisicing\",\n  \"resources\": {\n    \"enterprise_search\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"kibana\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"elasticsearch\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"apm\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"appsearch\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"integrations_server\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  },\n  \"metadata\": {\n    \"tags\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/deployments?request_id=cupidatat adipisicing&validate_only=false&template_id=cupidatat adipisicing",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"deployments"
									],
									"query": [
										{
											"key": "request_id",
											"value": "cupidatat adipisicing"
										},
										{
											"key": "validate_only",
											"value": "false"
										},
										{
											"key": "template_id",
											"value": "cupidatat adipisicing"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"created\": true,\n  \"id\": \"fugiat\",\n  \"name\": \"aliqua velit dolor\",\n  \"resources\": [\n    {\n      \"id\": \"aliquip sit\",\n      \"kind\": \"dolore elit\",\n      \"ref_id\": \"pariatur veniam reprehenderit quis\",\n      \"region\": \"Excepteur Duis exercitation nostrud veniam\",\n      \"elasticsearch_cluster_ref_id\": \"commodo officia consequat\",\n      \"cloud_id\": \"ut aliqua sunt\",\n      \"secret_token\": \"aliqua enim culpa cillum veniam\",\n      \"warnings\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"credentials\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"id\": \"esse elit ex\",\n      \"kind\": \"Excepteur \",\n      \"ref_id\": \"labore Ut\",\n      \"region\": \"aliquip velit est\",\n      \"elasticsearch_cluster_ref_id\": \"ad Lorem ullamco\",\n      \"cloud_id\": \"pariatur commodo minim\",\n      \"secret_token\": \"tempor eu\",\n      \"warnings\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"credentials\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"alias\": \"do\",\n  \"diagnostics\": {\n    \"creates\": {\n      \"enterprise_search\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"kibana\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"elasticsearch\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"apm\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"appsearch\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"integrations_server\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"updates\": {\n      \"enterprise_search\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"kibana\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"elasticsearch\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"apm\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"appsearch\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"integrations_server\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  }\n}"
						},
						{
							"id": "bdf4d11e-b6ed-4c13-84d5-7f5b847b8756",
							"name": "The deployment request had errors.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"amet\",\n  \"settings\": {\n    \"autoscaling_enabled\": true,\n    \"observability\": {\n      \"metrics\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"logging\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"traffic_filter_settings\": {\n      \"rulesets\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"region\": \"ad do\",\n  \"alias\": \"et velit commodo cupidatat\",\n  \"version\": \"incididunt tempor minim adipisicing\",\n  \"resources\": {\n    \"enterprise_search\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"kibana\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"elasticsearch\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"apm\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"appsearch\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"integrations_server\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  },\n  \"metadata\": {\n    \"tags\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/deployments?request_id=cupidatat adipisicing&validate_only=false&template_id=cupidatat adipisicing",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"deployments"
									],
									"query": [
										{
											"key": "request_id",
											"value": "cupidatat adipisicing"
										},
										{
											"key": "validate_only",
											"value": "false"
										},
										{
											"key": "template_id",
											"value": "cupidatat adipisicing"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"errors\": [\n    {\n      \"code\": \"in ut\",\n      \"message\": \"fugiat in exercitation Duis laborum\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"qui anim in\",\n      \"message\": \"et Ut\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "List Deployments",
					"_postman_id": "801d33c5-c6a0-455c-80bd-f041edf92e97",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": "{{baseUrl}}/deployments",
						"description": "List Deployments."
					},
					"response": [
						{
							"id": "6a861633-cd21-4664-8fe9-549a71b2bd66",
							"name": "You are not authorized to perform this action.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": "{{baseUrl}}/deployments"
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
						},
						{
							"id": "88a56a57-a03a-47cc-80c2-0be0c97a683e",
							"name": "The list of deployments that belong to the authenticated user.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": "{{baseUrl}}/deployments"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"deployments\": [\n    {\n      \"id\": \"id ut\",\n      \"name\": \"proident\",\n      \"resources\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"id\": \"commodo culpa\",\n      \"name\": \"ad sunt ut \",\n      \"resources\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Search Deployments",
					"_postman_id": "92286452-c86a-4c71-82bc-6a21f3ea0bd5",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"query\": {\n    \"match_all\": {},\n    \"exists\": {\n      \"field\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"term\": {\n      \"reprehenderit7\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"ex_cd\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"nested\": {\n      \"path\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"query\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"score_mode\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"prefix\": {\n      \"tempore\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"in_1a\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"bool\": {\n      \"filter\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"minimum_should_match\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"should\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"must_not\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"must\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"query_string\": {\n      \"query\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"default_operator\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"default_field\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"allow_leading_wildcard\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"analyzer\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"range\": {\n      \"in_d3\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"consectetur_\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"adipisicing_2f\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"laborisfa3\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"match_none\": {},\n    \"match\": {\n      \"deserunt7b\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"velit_3\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"from\": 66166193,\n  \"size\": -35650565\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/deployments/_search",
						"description": "Retrieves the information for all of the deployments that match the specified query."
					},
					"response": [
						{
							"id": "b52f67e4-45bb-4e5e-9dcd-55304260de5d",
							"name": "The list of deployments that match the specified query and belong to the authenticated user.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"query\": {\n    \"match_all\": {},\n    \"exists\": {\n      \"field\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"term\": {\n      \"reprehenderit7\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"ex_cd\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"nested\": {\n      \"path\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"query\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"score_mode\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"prefix\": {\n      \"tempore\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"in_1a\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"bool\": {\n      \"filter\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"minimum_should_match\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"should\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"must_not\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"must\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"query_string\": {\n      \"query\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"default_operator\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"default_field\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"allow_leading_wildcard\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"analyzer\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"range\": {\n      \"in_d3\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"consectetur_\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"adipisicing_2f\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"laborisfa3\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"match_none\": {},\n    \"match\": {\n      \"deserunt7b\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"velit_3\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"from\": 66166193,\n  \"size\": -35650565\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/deployments/_search"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"disabled": false,
									"description": "The date-time when the resource was last modified (ISO format relative to UTC)",
									"key": "x-cloud-resource-last-modified",
									"value": "cupidatat adipisicing"
								},
								{
									"disabled": false,
									"description": "The date-time when the resource was created (ISO format relative to UTC)",
									"key": "x-cloud-resource-created",
									"value": "cupidatat adipisicing"
								},
								{
									"disabled": false,
									"description": "The resource version, which is used to avoid update conflicts with concurrent operations",
									"key": "x-cloud-resource-version",
									"value": "cupidatat adipisicing"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"deployments\": [\n    {\n      \"healthy\": true,\n      \"id\": \"reprehenderit\",\n      \"name\": \"irure minim laboris\",\n      \"resources\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"settings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"alias\": \"sed est Ut officia\",\n      \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"healthy\": false,\n      \"id\": \"officia commodo ullamco\",\n      \"name\": \"ea dolore veniam occaecat\",\n      \"resources\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"settings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"alias\": \"sit ipsum\",\n      \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"return_count\": 26650676,\n  \"match_count\": 20041967\n}"
						}
					]
				},
				{
					"name": "Get eligible remote clusters",
					"_postman_id": "1d3f46c3-1bd6-4b25-82ed-dc8583034311",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"query\": {\n    \"match_all\": {},\n    \"exists\": {\n      \"field\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"term\": {\n      \"reprehenderit7\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"ex_cd\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"nested\": {\n      \"path\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"query\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"score_mode\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"prefix\": {\n      \"tempore\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"in_1a\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"bool\": {\n      \"filter\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"minimum_should_match\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"should\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"must_not\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"must\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"query_string\": {\n      \"query\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"default_operator\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"default_field\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"allow_leading_wildcard\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"analyzer\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"range\": {\n      \"in_d3\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"consectetur_\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"adipisicing_2f\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"laborisfa3\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"match_none\": {},\n    \"match\": {\n      \"deserunt7b\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"velit_3\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"from\": 66166193,\n  \"size\": -35650565\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/deployments/eligible-remote-clusters?version=cupidatat adipisicing",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"deployments",
								"eligible-remote-clusters"
							],
							"query": [
								{
									"key": "version",
									"value": "cupidatat adipisicing",
									"description": "(Required) The version of the Elasticsearch cluster cluster that will potentially be configured to have remote clusters."
								}
							]
						},
						"description": "Returns the list of deployments which contain eligible remote clusters for a specific version."
					},
					"response": [
						{
							"id": "70ae210c-26ce-4e3e-989b-aa510138fae2",
							"name": "List of deployments which contains eligible remote clusters for a specific version",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/deployments/eligible-remote-clusters?version=cupidatat adipisicing",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"deployments",
										"eligible-remote-clusters"
									],
									"query": [
										{
											"key": "version",
											"value": "cupidatat adipisicing"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"deployments\": [\n    {\n      \"healthy\": true,\n      \"id\": \"reprehenderit\",\n      \"name\": \"irure minim laboris\",\n      \"resources\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"settings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"alias\": \"sed est Ut officia\",\n      \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"healthy\": false,\n      \"id\": \"officia commodo ullamco\",\n      \"name\": \"ea dolore veniam occaecat\",\n      \"resources\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"settings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"alias\": \"sit ipsum\",\n      \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"return_count\": 26650676,\n  \"match_count\": 20041967\n}"
						},
						{
							"id": "f2651e8d-aa11-4812-b898-849d09cefd30",
							"name": "The provided version is invalid. (code: `stackpack.invalid_version`)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/deployments/eligible-remote-clusters?version=cupidatat adipisicing",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"deployments",
										"eligible-remote-clusters"
									],
									"query": [
										{
											"key": "version",
											"value": "cupidatat adipisicing"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"disabled": false,
									"description": "The error codes associated with the response",
									"key": "x-cloud-error-codes",
									"value": "stackpack.invalid_version"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
						}
					]
				}
			],
			"_postman_id": "e64f85a5-1b7a-474e-9947-4cea87514bfc"
		},
		{
			"name": "organizations",
			"item": [
				{
					"name": "invitations/{invitation token}",
					"item": [
						{
							"name": "Get organization invitation",
							"_postman_id": "bd33414e-7355-4c9c-9b19-0e2a4866e13f",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organizations/invitations/:invitation_token",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										"invitations",
										":invitation_token"
									],
									"variable": [
										{
											"id": "bb3e0cae-ff2b-470f-9c39-1e71b99de17d",
											"key": "invitation_token",
											"value": "cupidatat adipisicing",
											"description": "(Required) Organization invitation token",
											"type": "string"
										}
									]
								},
								"description": "Gets a single invitation to an organization by token. Currently unavailable in self-hosted ECE."
							},
							"response": [
								{
									"id": "6f1e0421-f42a-4420-8ff9-c02a888d0afe",
									"name": "Organization invitation fetched successfully",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/organizations/invitations/:invitation_token",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organizations",
												"invitations",
												":invitation_token"
											],
											"variable": [
												{
													"key": "invitation_token",
													"value": "cupidatat adipisicing",
													"description": "(Required) Organization invitation token"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"created_at\": \"1946-04-21T23:39:25.000Z\",\n  \"email\": \"nisi sint reprehenderit cillum officia\",\n  \"expired\": true,\n  \"expires_at\": \"2017-10-31T06:34:12.516Z\",\n  \"organization\": {\n    \"id\": \"non consectetur voluptate enim consequat\",\n    \"name\": \"qui sunt dolore laborum enim\"\n  },\n  \"token\": \"minim commodo sed velit dolore\",\n  \"accepted_at\": \"1994-11-03T11:35:25.404Z\"\n}"
								},
								{
									"id": "aa3e4d85-b9c2-477a-abfe-83a6f0289384",
									"name": "Invitation not found. (code: `organization.invitation_not_found`)",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/organizations/invitations/:invitation_token",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organizations",
												"invitations",
												":invitation_token"
											],
											"variable": [
												{
													"key": "invitation_token",
													"value": "cupidatat adipisicing",
													"description": "(Required) Organization invitation token"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"disabled": false,
											"description": "The error codes associated with the response",
											"key": "x-cloud-error-codes",
											"value": "organization.invitation_not_found"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Accept an organization invitation",
							"_postman_id": "133e00fd-0c27-41cf-927e-b029bd7e53c2",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organizations/invitations/:invitation_token/_accept",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										"invitations",
										":invitation_token",
										"_accept"
									],
									"variable": [
										{
											"id": "4724180e-7e5a-496b-9aad-eaeadc9d6e10",
											"key": "invitation_token",
											"value": "cupidatat adipisicing",
											"description": "(Required) Organization invitation token",
											"type": "string"
										}
									]
								},
								"description": "Accepts an organization invitation. Currently unavailable in self-hosted ECE."
							},
							"response": [
								{
									"id": "0cf22279-edfb-4efa-9028-d00806f3ac13",
									"name": "Organization invitation accepted successfully",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/organizations/invitations/:invitation_token/_accept",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organizations",
												"invitations",
												":invitation_token",
												"_accept"
											],
											"variable": [
												{
													"key": "invitation_token",
													"value": "cupidatat adipisicing",
													"description": "(Required) Organization invitation token"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{}"
								},
								{
									"id": "26aba2ab-d090-41e1-95ed-1559a5631249",
									"name": "The current user authentication is not valid. (code: `root.invalid_authentication`)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/organizations/invitations/:invitation_token/_accept",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organizations",
												"invitations",
												":invitation_token",
												"_accept"
											],
											"variable": [
												{
													"key": "invitation_token",
													"value": "cupidatat adipisicing",
													"description": "(Required) Organization invitation token"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"disabled": false,
											"description": "The error codes associated with the response",
											"key": "x-cloud-error-codes",
											"value": "root.invalid_authentication"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
								},
								{
									"id": "4d9d5c89-b6f5-4e0b-8acf-3723f44ad31f",
									"name": "* Organization not found. (code: `organization.not_found`)\n* User not found. (code: `user.not_found`)\n* Invitation not found. (code: `organization.invitation_not_found`)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/organizations/invitations/:invitation_token/_accept",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organizations",
												"invitations",
												":invitation_token",
												"_accept"
											],
											"variable": [
												{
													"key": "invitation_token",
													"value": "cupidatat adipisicing",
													"description": "(Required) Organization invitation token"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"disabled": false,
											"description": "The error codes associated with the response",
											"key": "x-cloud-error-codes",
											"value": "organization.not_found"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
								},
								{
									"id": "996c1c1d-634f-437f-b679-b593d4fe7863",
									"name": "User already belongs to organization. (code: `organization.user_organization_already_belongs`)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/organizations/invitations/:invitation_token/_accept",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organizations",
												"invitations",
												":invitation_token",
												"_accept"
											],
											"variable": [
												{
													"key": "invitation_token",
													"value": "cupidatat adipisicing",
													"description": "(Required) Organization invitation token"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"disabled": false,
											"description": "The error codes associated with the response",
											"key": "x-cloud-error-codes",
											"value": "organization.user_organization_already_belongs"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
								}
							]
						}
					],
					"_postman_id": "2b04fb51-9f5d-4d4a-a2b7-b459342cfe23",
					"_postman_isSubFolder": true
				},
				{
					"name": "{organization id}",
					"item": [
						{
							"name": "invitations",
							"item": [
								{
									"name": "Create organization invitations",
									"_postman_id": "d1d3bb34-62c1-4a1d-9ac9-cd383de1bab4",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"emails\": [\n    \"dolore dolore adipisicing\",\n    \"sit ex cillum eiusmod\"\n  ],\n  \"expires_in\": \"sunt Excepteur ea\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/organizations/:organization_id/invitations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organizations",
												":organization_id",
												"invitations"
											],
											"variable": [
												{
													"id": "35a1cacc-65b6-4629-a847-c310f1a42598",
													"key": "organization_id",
													"value": "cupidatat adipisicing",
													"description": "(Required) Identifier for the Organization",
													"type": "string"
												}
											]
										},
										"description": "Creates or refreshes organization invitations. Currently unavailable in self-hosted ECE."
									},
									"response": [
										{
											"id": "0a4293aa-5cd5-460f-b9e7-1473f5e9ce70",
											"name": "Organization invitations created successfully",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"emails\": [\n    \"dolor dolore dolore eu\",\n    \"esse proident dolor veniam\"\n  ],\n  \"expires_in\": \"et cillum irure\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/organizations/:organization_id/invitations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"invitations"
													],
													"variable": [
														{
															"key": "organization_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) Identifier for the Organization"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"invitations\": [\n    {\n      \"created_at\": \"1984-03-29T01:25:32.454Z\",\n      \"email\": \"amet eu voluptate sit veniam\",\n      \"expired\": false,\n      \"expires_at\": \"1998-07-05T06:49:25.698Z\",\n      \"organization\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"token\": \"in exercitation nisi\",\n      \"accepted_at\": \"1957-02-28T11:15:09.065Z\"\n    },\n    {\n      \"created_at\": \"2003-06-28T02:17:57.227Z\",\n      \"email\": \"mollit in amet elit Excepteur\",\n      \"expired\": true,\n      \"expires_at\": \"1993-12-15T01:27:47.275Z\",\n      \"organization\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"token\": \"irure e\",\n      \"accepted_at\": \"1955-01-31T04:04:35.833Z\"\n    }\n  ]\n}"
										},
										{
											"id": "85ce7c0a-0041-4a57-8854-52b20b2dac56",
											"name": "* Organization not found. (code: `organization.not_found`)\n* User not found. (code: `user.not_found`)\n* Invitation sender does not belong to organization. (code: `organization.user_organization_does_not_belong`)",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"emails\": [\n    \"dolor dolore dolore eu\",\n    \"esse proident dolor veniam\"\n  ],\n  \"expires_in\": \"et cillum irure\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/organizations/:organization_id/invitations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"invitations"
													],
													"variable": [
														{
															"key": "organization_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) Identifier for the Organization"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"disabled": false,
													"description": "The error codes associated with the response",
													"key": "x-cloud-error-codes",
													"value": "organization.user_organization_does_not_belong"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
										},
										{
											"id": "987f951c-4ffd-44df-8d8a-7549fed5335d",
											"name": "* Invitation email was not valid. (code: `organization.invitation_invalid_email`)\n* Invitation already sent. (code: `organization.invitation_already_exists`)\n* User already belongs to organization. (code: `organization.user_organization_already_belongs`)",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"emails\": [\n    \"dolor dolore dolore eu\",\n    \"esse proident dolor veniam\"\n  ],\n  \"expires_in\": \"et cillum irure\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/organizations/:organization_id/invitations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"invitations"
													],
													"variable": [
														{
															"key": "organization_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) Identifier for the Organization"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"disabled": false,
													"description": "The error codes associated with the response",
													"key": "x-cloud-error-codes",
													"value": "organization.user_organization_already_belongs"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
										},
										{
											"id": "9e99bbc1-fba0-47a5-9d30-c0aa1f1fbfe7",
											"name": "The current user authentication is not valid. (code: `root.invalid_authentication`)",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"emails\": [\n    \"dolor dolore dolore eu\",\n    \"esse proident dolor veniam\"\n  ],\n  \"expires_in\": \"et cillum irure\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/organizations/:organization_id/invitations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"invitations"
													],
													"variable": [
														{
															"key": "organization_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) Identifier for the Organization"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"disabled": false,
													"description": "The error codes associated with the response",
													"key": "x-cloud-error-codes",
													"value": "root.invalid_authentication"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
										},
										{
											"id": "bf884d12-ec07-4a9e-9924-75103beef70d",
											"name": "Request exceeds organization invitation creation rate limits. (code: `organization.invitations_rate_limit_exceeded`)",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"emails\": [\n    \"dolor dolore dolore eu\",\n    \"esse proident dolor veniam\"\n  ],\n  \"expires_in\": \"et cillum irure\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/organizations/:organization_id/invitations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"invitations"
													],
													"variable": [
														{
															"key": "organization_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) Identifier for the Organization"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"disabled": false,
													"description": "The error codes associated with the response",
													"key": "x-cloud-error-codes",
													"value": "organization.invitations_rate_limit_exceeded"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "List organization invitations",
									"_postman_id": "c740ecf4-4c39-43ba-8392-1704e6e2c61c",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/organizations/:organization_id/invitations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organizations",
												":organization_id",
												"invitations"
											],
											"variable": [
												{
													"id": "458c3e65-7ba6-464b-83c8-142f1f4eae22",
													"key": "organization_id",
													"value": "cupidatat adipisicing",
													"description": "(Required) Identifier for the Organization",
													"type": "string"
												}
											]
										},
										"description": "Fetch open invitations to the selected organization. Currently unavailable in self-hosted ECE."
									},
									"response": [
										{
											"id": "86d619b1-1fa0-49ca-b6b8-c5dc7dbb42ac",
											"name": "Organization not found. (code: `organization.not_found`)",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/organizations/:organization_id/invitations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"invitations"
													],
													"variable": [
														{
															"key": "organization_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) Identifier for the Organization"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"disabled": false,
													"description": "The error codes associated with the response",
													"key": "x-cloud-error-codes",
													"value": "organization.not_found"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
										},
										{
											"id": "a6e7b5d3-3a81-434b-a277-19490596ca10",
											"name": "Organization invitations fetched successfully",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/organizations/:organization_id/invitations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"invitations"
													],
													"variable": [
														{
															"key": "organization_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) Identifier for the Organization"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"invitations\": [\n    {\n      \"created_at\": \"1993-05-12T00:36:07.168Z\",\n      \"email\": \"elit cupidatat deserunt\",\n      \"expired\": false,\n      \"expires_at\": \"1969-06-12T15:20:40.028Z\",\n      \"organization\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"token\": \"cupidatat ea dolore do\",\n      \"accepted_at\": \"1951-01-15T05:05:50.057Z\"\n    },\n    {\n      \"created_at\": \"1976-11-26T06:31:01.760Z\",\n      \"email\": \"labore laboris officia ipsum\",\n      \"expired\": false,\n      \"expires_at\": \"2003-03-18T22:33:21.889Z\",\n      \"organization\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"token\": \"Duis aliquip ea Exce\",\n      \"accepted_at\": \"1962-08-02T10:18:50.201Z\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Delete organization invitations",
									"_postman_id": "7d59fbf1-f694-4caf-81f0-f5477449d990",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/organizations/:organization_id/invitations/:invitation_tokens",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organizations",
												":organization_id",
												"invitations",
												":invitation_tokens"
											],
											"variable": [
												{
													"id": "7cec8cbc-ecaf-4cff-8c2e-e9d6df28fa63",
													"key": "organization_id",
													"value": "cupidatat adipisicing",
													"description": "(Required) Identifier for the Organization",
													"type": "string"
												},
												{
													"id": "9e3d5013-6595-40fc-a580-3fbf9c604322",
													"key": "invitation_tokens",
													"value": "cupidatat adipisicing",
													"description": "(Required) CSV list of Invitation tokens",
													"type": "string"
												}
											]
										},
										"description": "Deletes one or more organization invitations. Currently unavailable in self-hosted ECE."
									},
									"response": [
										{
											"id": "40aefdae-eb0e-432e-903f-6dfc132db863",
											"name": "Organization invitations deleted successfully",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/organizations/:organization_id/invitations/:invitation_tokens",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"invitations",
														":invitation_tokens"
													],
													"variable": [
														{
															"key": "organization_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) Identifier for the Organization"
														},
														{
															"key": "invitation_tokens",
															"value": "cupidatat adipisicing",
															"description": "(Required) CSV list of Invitation tokens"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{}"
										},
										{
											"id": "47ff26f3-0277-49fb-b52a-f69d2e32f015",
											"name": "No valid invitation token was supplied. (code: `root.invalid_data`)",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/organizations/:organization_id/invitations/:invitation_tokens",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"invitations",
														":invitation_tokens"
													],
													"variable": [
														{
															"key": "organization_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) Identifier for the Organization"
														},
														{
															"key": "invitation_tokens",
															"value": "cupidatat adipisicing",
															"description": "(Required) CSV list of Invitation tokens"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"disabled": false,
													"description": "The error codes associated with the response",
													"key": "x-cloud-error-codes",
													"value": "root.invalid_data"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
										},
										{
											"id": "67753dad-b809-4409-9d15-bc7cce2b9644",
											"name": "* Organization not found. (code: `organization.not_found`)\n* Invitation not found. (code: `organization.invitation_not_found`)",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/organizations/:organization_id/invitations/:invitation_tokens",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"invitations",
														":invitation_tokens"
													],
													"variable": [
														{
															"key": "organization_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) Identifier for the Organization"
														},
														{
															"key": "invitation_tokens",
															"value": "cupidatat adipisicing",
															"description": "(Required) CSV list of Invitation tokens"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"disabled": false,
													"description": "The error codes associated with the response",
													"key": "x-cloud-error-codes",
													"value": "organization.not_found"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
										}
									]
								}
							],
							"_postman_id": "b69f5e51-5dfe-49f2-b350-8ba16ed95185",
							"_postman_isSubFolder": true
						},
						{
							"name": "members",
							"item": [
								{
									"name": "List organization members",
									"_postman_id": "7c1f68ce-1878-43a5-91a2-2831e67f2ed2",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/organizations/:organization_id/members",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organizations",
												":organization_id",
												"members"
											],
											"variable": [
												{
													"id": "7ad4f273-9168-4de5-b351-1c60757bfacb",
													"key": "organization_id",
													"value": "cupidatat adipisicing",
													"description": "(Required) Identifier for the Organization",
													"type": "string"
												}
											]
										},
										"description": "Fetch users belonging to the selected organization. Currently unavailable in self-hosted ECE."
									},
									"response": [
										{
											"id": "1d2cd33f-0345-42a7-bb9e-123ead5a2cd4",
											"name": "Organization not found. (code: `organization.not_found`)",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/organizations/:organization_id/members",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"members"
													],
													"variable": [
														{
															"key": "organization_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) Identifier for the Organization"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"disabled": false,
													"description": "The error codes associated with the response",
													"key": "x-cloud-error-codes",
													"value": "organization.not_found"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
										},
										{
											"id": "205168df-ae5e-4cd3-8e0d-441db96e0897",
											"name": "Organization members fetched successfully",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/organizations/:organization_id/members",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"members"
													],
													"variable": [
														{
															"key": "organization_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) Identifier for the Organization"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"members\": [\n    {\n      \"member_since\": \"1953-01-05T10:59:56.758Z\",\n      \"organization_id\": \"officia minim eu in Duis\",\n      \"user_id\": \"non eu proident veniam sit\",\n      \"name\": \"nostrud veniam offic\",\n      \"email\": \"sed in dolore Excepteur laboris\"\n    },\n    {\n      \"member_since\": \"2017-09-01T12:14:34.402Z\",\n      \"organization_id\": \"commodo in cillum minim pariatur\",\n      \"user_id\": \"deserunt ex occaecat\",\n      \"name\": \"proident eu in non id\",\n      \"email\": \"in ipsum ei\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Delete organization memberships",
									"_postman_id": "8b9f9f0b-9951-4a4d-bc15-6f357a018466",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/organizations/:organization_id/members/:user_ids?force=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organizations",
												":organization_id",
												"members",
												":user_ids"
											],
											"query": [
												{
													"key": "force",
													"value": "false",
													"description": "Whether or not to force the removal of Org memberships (effective only for Platform Admins)"
												}
											],
											"variable": [
												{
													"id": "d6d9c5b8-95a0-42a1-969f-94dda888d0e2",
													"key": "organization_id",
													"value": "cupidatat adipisicing",
													"description": "(Required) Identifier for the Organization",
													"type": "string"
												},
												{
													"id": "2a06f08e-6906-4024-9757-f2fcd9669d9a",
													"key": "user_ids",
													"value": "cupidatat adipisicing",
													"description": "(Required) CSV list of User identifiers",
													"type": "string"
												}
											]
										},
										"description": "Deletes one or more organization memberships. Currently unavailable in self-hosted ECE."
									},
									"response": [
										{
											"id": "035824b8-f803-4537-bda9-975811d97492",
											"name": "Organization membership deleted successfully",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/organizations/:organization_id/members/:user_ids?force=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"members",
														":user_ids"
													],
													"query": [
														{
															"key": "force",
															"value": "false"
														}
													],
													"variable": [
														{
															"key": "organization_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) Identifier for the Organization"
														},
														{
															"key": "user_ids",
															"value": "cupidatat adipisicing",
															"description": "(Required) CSV list of User identifiers"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{}"
										},
										{
											"id": "3c4f1428-e5f3-472d-beac-9ff22a692084",
											"name": "* User not found. (code: `user.not_found`)\n* Organization not found. (code: `organization.not_found`)\n* Organization membership not found. (code: `organization.membership_not_found`)",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/organizations/:organization_id/members/:user_ids?force=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"members",
														":user_ids"
													],
													"query": [
														{
															"key": "force",
															"value": "false"
														}
													],
													"variable": [
														{
															"key": "organization_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) Identifier for the Organization"
														},
														{
															"key": "user_ids",
															"value": "cupidatat adipisicing",
															"description": "(Required) CSV list of User identifiers"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"disabled": false,
													"description": "The error codes associated with the response",
													"key": "x-cloud-error-codes",
													"value": "user.not_found"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
										}
									]
								}
							],
							"_postman_id": "867874b1-d383-4fca-8508-f7f77f8d8312",
							"_postman_isSubFolder": true
						},
						{
							"name": "Update organization",
							"_postman_id": "afc97df2-913b-44dc-9144-b3075e8609fb",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"aute commodo consectetur\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/organizations/:organization_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":organization_id"
									],
									"variable": [
										{
											"id": "7fc50afd-bcb8-4ffd-b657-8c13723e4750",
											"key": "organization_id",
											"value": "cupidatat adipisicing",
											"description": "(Required) Identifier for the Organization",
											"type": "string"
										}
									]
								},
								"description": "> WARNING\n> This endpoint is deprecated and scheduled to be removed in the next major version.\n\nUpdates an existing organization. Currently unavailable in self-hosted ECE."
							},
							"response": [
								{
									"id": "6a54cec3-f87a-43b2-8fdc-fd801ddb258f",
									"name": "Organization not found. (code: `organization.not_found`)",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"aute commodo consectetur\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/organizations/:organization_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organizations",
												":organization_id"
											],
											"variable": [
												{
													"key": "organization_id",
													"value": "cupidatat adipisicing",
													"description": "(Required) Identifier for the Organization"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"disabled": false,
											"description": "The error codes associated with the response",
											"key": "x-cloud-error-codes",
											"value": "organization.not_found"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
								},
								{
									"id": "c6d59ffa-80fe-4890-9785-2a279809feac",
									"name": "* Name must be between 2 and 30 characters. (code: `organization.invalid_name`)\n* User already has an organization. (code: `organization.user_organization_already_exists`)",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"aute commodo consectetur\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/organizations/:organization_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organizations",
												":organization_id"
											],
											"variable": [
												{
													"key": "organization_id",
													"value": "cupidatat adipisicing",
													"description": "(Required) Identifier for the Organization"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"disabled": false,
											"description": "The error codes associated with the response",
											"key": "x-cloud-error-codes",
											"value": "organization.user_organization_already_exists"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
								},
								{
									"id": "e00d90cb-7365-4ab0-a226-1f5c4a69c2d4",
									"name": "You are not authorized to perform this action",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"aute commodo consectetur\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/organizations/:organization_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organizations",
												":organization_id"
											],
											"variable": [
												{
													"key": "organization_id",
													"value": "cupidatat adipisicing",
													"description": "(Required) Identifier for the Organization"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
								},
								{
									"id": "e16c4ad5-7eb5-42a3-b858-967cb2d95cfe",
									"name": "The current user does not have access to the requested organization. (code: `organization.invalid_access`)",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"aute commodo consectetur\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/organizations/:organization_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organizations",
												":organization_id"
											],
											"variable": [
												{
													"key": "organization_id",
													"value": "cupidatat adipisicing",
													"description": "(Required) Identifier for the Organization"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"disabled": false,
											"description": "The error codes associated with the response",
											"key": "x-cloud-error-codes",
											"value": "organization.invalid_access"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
								},
								{
									"id": "f1b52ae8-aad3-4c75-9456-3cf7f48e76a9",
									"name": "Organization updated successfully",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"aute commodo consectetur\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/organizations/:organization_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organizations",
												":organization_id"
											],
											"variable": [
												{
													"key": "organization_id",
													"value": "cupidatat adipisicing",
													"description": "(Required) Identifier for the Organization"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"id\": \"anim ad enim proident\",\n  \"name\": \"sunt do adipisicing nulla enim\"\n}"
								}
							]
						},
						{
							"name": "Fetch organization information",
							"_postman_id": "6705938f-504a-49fe-9e8a-f8ce166a6772",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organizations/:organization_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":organization_id"
									],
									"variable": [
										{
											"id": "95bea9db-f3f1-48a7-8b1b-ef2f9e56c7a5",
											"key": "organization_id",
											"value": "cupidatat adipisicing",
											"description": "(Required) Identifier for the Organization",
											"type": "string"
										}
									]
								},
								"description": "Fetch a single organization by id. Currently unavailable in self-hosted ECE."
							},
							"response": [
								{
									"id": "638c2d4d-2dbc-4df1-8888-3ff5e50e5d01",
									"name": "User not found. (code: `user.not_found`)",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/organizations/:organization_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organizations",
												":organization_id"
											],
											"variable": [
												{
													"key": "organization_id",
													"value": "cupidatat adipisicing",
													"description": "(Required) Identifier for the Organization"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"disabled": false,
											"description": "The error codes associated with the response",
											"key": "x-cloud-error-codes",
											"value": "user.not_found"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
								},
								{
									"id": "776401ca-377b-41f8-a9b7-47a10269b80c",
									"name": "Organization not found. (code: `organization.not_found`)",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/organizations/:organization_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organizations",
												":organization_id"
											],
											"variable": [
												{
													"key": "organization_id",
													"value": "cupidatat adipisicing",
													"description": "(Required) Identifier for the Organization"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"disabled": false,
											"description": "The error codes associated with the response",
											"key": "x-cloud-error-codes",
											"value": "organization.not_found"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
								},
								{
									"id": "bd3cac04-b846-41c3-b599-8d04ffc85aec",
									"name": "The current user does not have access to the requested organization. (code: `organization.invalid_access`)",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/organizations/:organization_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organizations",
												":organization_id"
											],
											"variable": [
												{
													"key": "organization_id",
													"value": "cupidatat adipisicing",
													"description": "(Required) Identifier for the Organization"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"disabled": false,
											"description": "The error codes associated with the response",
											"key": "x-cloud-error-codes",
											"value": "organization.invalid_access"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
								},
								{
									"id": "c3accd71-900c-458d-b050-d1b5ae33e643",
									"name": "Organization fetched successfully",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/organizations/:organization_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organizations",
												":organization_id"
											],
											"variable": [
												{
													"key": "organization_id",
													"value": "cupidatat adipisicing",
													"description": "(Required) Identifier for the Organization"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"id\": \"anim ad enim proident\",\n  \"name\": \"sunt do adipisicing nulla enim\"\n}"
								}
							]
						}
					],
					"_postman_id": "c6fb9cad-69ee-429d-a04e-23eaf50e84ac",
					"_postman_isSubFolder": true
				},
				{
					"name": "List organizations",
					"_postman_id": "bdeaf635-f1bc-48f7-be73-556151f4e51c",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": "{{baseUrl}}/organizations",
						"description": "Fetch organizations available to the current user. Currently unavailable in self-hosted ECE."
					},
					"response": [
						{
							"id": "70ff9f9f-71ba-49f9-b1b8-39a0d5f0bb98",
							"name": "User not found. (code: `user.not_found`)",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": "{{baseUrl}}/organizations"
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"disabled": false,
									"description": "The error codes associated with the response",
									"key": "x-cloud-error-codes",
									"value": "user.not_found"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
						},
						{
							"id": "747f6e60-7075-493d-89bf-fee674e53997",
							"name": "Organizations fetched successfully",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": "{{baseUrl}}/organizations"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"organizations\": [\n    {\n      \"id\": \"ex Lorem nulla\",\n      \"name\": \"in adipisicing eu sunt id\"\n    },\n    {\n      \"id\": \"voluptate id dolore incididunt ad\",\n      \"name\": \"reprehenderit occaecat quis\"\n    }\n  ],\n  \"next_page\": \"ea mollit offic\"\n}"
						}
					]
				}
			],
			"_postman_id": "f58d1a32-5fcf-4030-87ac-a4addf1c3dd1"
		},
		{
			"name": "users/auth/keys",
			"item": [
				{
					"name": "{api key id}",
					"item": [
						{
							"name": "Delete API key",
							"_postman_id": "d12fcdd7-435a-4d27-b807-a9164a87b2a9",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users/auth/keys/:api_key_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"auth",
										"keys",
										":api_key_id"
									],
									"variable": [
										{
											"id": "7cd7a8c4-433d-4737-8332-c36ea61a4260",
											"key": "api_key_id",
											"value": "cupidatat adipisicing",
											"description": "(Required) The API Key ID.",
											"type": "string"
										}
									]
								},
								"description": "Delete or invalidate the API key."
							},
							"response": [
								{
									"id": "d7f17389-d172-4a51-9617-814986b6215a",
									"name": "Elevated permissions are required. (code: `root.unauthorized.rbac.elevated_permissions_required`)",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/auth/keys/:api_key_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												"auth",
												"keys",
												":api_key_id"
											],
											"variable": [
												{
													"key": "api_key_id",
													"value": "cupidatat adipisicing",
													"description": "(Required) The API Key ID."
												}
											]
										}
									},
									"status": "Retry With",
									"code": 449,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"disabled": false,
											"description": "The error codes associated with the response",
											"key": "x-cloud-error-codes",
											"value": "root.unauthorized.rbac.elevated_permissions_required"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
								},
								{
									"id": "db488a43-e66a-4adf-bfac-e1b0cfb3031a",
									"name": "The {api_key_id} can't be found. (code: `api_keys.key_not_found`)",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/auth/keys/:api_key_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												"auth",
												"keys",
												":api_key_id"
											],
											"variable": [
												{
													"key": "api_key_id",
													"value": "cupidatat adipisicing",
													"description": "(Required) The API Key ID."
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"disabled": false,
											"description": "The error codes associated with the response",
											"key": "x-cloud-error-codes",
											"value": "api_keys.key_not_found"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
								},
								{
									"id": "e76eaf6a-bcb8-4591-a3a7-dced7310c83a",
									"name": "The API key is deleted.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/auth/keys/:api_key_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												"auth",
												"keys",
												":api_key_id"
											],
											"variable": [
												{
													"key": "api_key_id",
													"value": "cupidatat adipisicing",
													"description": "(Required) The API Key ID."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{}"
								}
							]
						},
						{
							"name": "Get API key",
							"_postman_id": "1b40d2a0-3c51-4c02-8d90-341eec792908",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users/auth/keys/:api_key_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"auth",
										"keys",
										":api_key_id"
									],
									"variable": [
										{
											"id": "b8d583b3-fef3-474a-af70-38f7455b9476",
											"key": "api_key_id",
											"value": "cupidatat adipisicing",
											"description": "(Required) The API Key ID.",
											"type": "string"
										}
									]
								},
								"description": "Retrieves the metadata for an API key."
							},
							"response": [
								{
									"id": "556d5d9b-febb-47f6-8db2-080ebc52d0d7",
									"name": "The API key metadata is retrieved.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/auth/keys/:api_key_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												"auth",
												"keys",
												":api_key_id"
											],
											"variable": [
												{
													"key": "api_key_id",
													"value": "cupidatat adipisicing",
													"description": "(Required) The API Key ID."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"creation_date\": \"2008-03-08T00:23:58.347Z\",\n  \"description\": \"dolor aute ea in quis\",\n  \"id\": \"reprehenderit exercitation officia\",\n  \"user_id\": \"incididunt \",\n  \"key\": \"sit pariatur\"\n}"
								},
								{
									"id": "d8a99eed-3a66-4710-9fc6-7971ba24495b",
									"name": "The {api_key_id} can't be found. (code: `api_keys.key_not_found`)",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/auth/keys/:api_key_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												"auth",
												"keys",
												":api_key_id"
											],
											"variable": [
												{
													"key": "api_key_id",
													"value": "cupidatat adipisicing",
													"description": "(Required) The API Key ID."
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"disabled": false,
											"description": "The error codes associated with the response",
											"key": "x-cloud-error-codes",
											"value": "api_keys.key_not_found"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
								}
							]
						}
					],
					"_postman_id": "4f982bcf-df9e-4602-91d7-8d43dc79444e",
					"_postman_isSubFolder": true
				},
				{
					"name": "Create API key",
					"_postman_id": "3f45cc91-c3b6-441f-9f2f-19800ba41a5e",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"description\": \"aliquip sint nisi enim\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/users/auth/keys",
						"description": "Creates a new API key."
					},
					"response": [
						{
							"id": "5d251d66-9632-4910-90b0-c5f6c3852a23",
							"name": "The request is invalid. Specify a different request, then try again. (code: `api_keys.invalid_input`)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"description\": \"aliquip sint nisi enim\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/users/auth/keys"
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"disabled": false,
									"description": "The error codes associated with the response",
									"key": "x-cloud-error-codes",
									"value": "api_keys.invalid_input"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
						},
						{
							"id": "749b0beb-5f8f-4da2-8115-7b605f0f0854",
							"name": "Elevated permissions are required. (code: `root.unauthorized.rbac.elevated_permissions_required`)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"description\": \"aliquip sint nisi enim\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/users/auth/keys"
							},
							"status": "Retry With",
							"code": 449,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"disabled": false,
									"description": "The error codes associated with the response",
									"key": "x-cloud-error-codes",
									"value": "root.unauthorized.rbac.elevated_permissions_required"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
						},
						{
							"id": "cd2e54bb-1b92-4b67-8591-191a4e264014",
							"name": "The API key is created and returned in the body of the response.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"description\": \"aliquip sint nisi enim\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/users/auth/keys"
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"creation_date\": \"2008-03-08T00:23:58.347Z\",\n  \"description\": \"dolor aute ea in quis\",\n  \"id\": \"reprehenderit exercitation officia\",\n  \"user_id\": \"incididunt \",\n  \"key\": \"sit pariatur\"\n}"
						}
					]
				},
				{
					"name": "Delete API keys",
					"_postman_id": "2fe41108-a500-4d1a-886b-dcddfa2f7598",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"keys\": [\n    \"qui Excepteur\",\n    \"Duis cupidatat sunt proident\"\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/users/auth/keys",
						"description": "Delete or invalidate API keys."
					},
					"response": [
						{
							"id": "50572c63-320a-4e5f-8883-a304d83bc940",
							"name": "Elevated permissions are required. (code: `root.unauthorized.rbac.elevated_permissions_required`)",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"keys\": [\n    \"minim aliqua proident Ut\",\n    \"amet veniam\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/users/auth/keys"
							},
							"status": "Retry With",
							"code": 449,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"disabled": false,
									"description": "The error codes associated with the response",
									"key": "x-cloud-error-codes",
									"value": "root.unauthorized.rbac.elevated_permissions_required"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
						},
						{
							"id": "c6f0e835-57fe-4d50-92ee-f1587519ff86",
							"name": "The API keys are deleted.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"keys\": [\n    \"minim aliqua proident Ut\",\n    \"amet veniam\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/users/auth/keys"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{}"
						}
					]
				},
				{
					"name": "Get all API keys",
					"_postman_id": "0a21c30d-5e11-4171-8025-3cf41b40f52f",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": "{{baseUrl}}/users/auth/keys",
						"description": "Retrieves the metadata for all of the API keys that the user generated."
					},
					"response": [
						{
							"id": "df1fbc0a-ae13-47f0-99be-1304a8fd683a",
							"name": "The metadata for the API keys is retrieved.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": "{{baseUrl}}/users/auth/keys"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"keys\": [\n    {\n      \"creation_date\": \"1971-12-16T10:04:29.747Z\",\n      \"description\": \"elit o\",\n      \"id\": \"aliqua tempor\",\n      \"user_id\": \"in ullamco\",\n      \"key\": \"reprehenderit deserunt \"\n    },\n    {\n      \"creation_date\": \"1949-08-18T09:23:00.881Z\",\n      \"description\": \"magna dolore quis\",\n      \"id\": \"in\",\n      \"user_id\": \"proident\",\n      \"key\": \"deserunt dolore ut in eu\"\n    }\n  ]\n}"
						}
					]
				}
			],
			"_postman_id": "c90841ab-a513-4f48-a544-dbba4c07dfba"
		},
		{
			"name": "account",
			"item": [
				{
					"name": "Updates the current account",
					"_postman_id": "0823b7ba-921a-43d4-a81e-86c3320553eb",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"trust\": {\n    \"trust_all\": false\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/account",
						"description": "Updates the current account."
					},
					"response": [
						{
							"id": "0593c79d-77a5-4958-a932-7fb9bf0a5ea8",
							"name": "Account not found. (code: `accounts.not_found`)",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"trust\": {\n    \"trust_all\": false\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/account"
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"disabled": false,
									"description": "The error codes associated with the response",
									"key": "x-cloud-error-codes",
									"value": "accounts.not_found"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
						},
						{
							"id": "fef78d3c-2b18-4d29-bac6-5e43f0b1670c",
							"name": "Account updated successfully",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"trust\": {\n    \"trust_all\": false\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/account"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"id\": \"amet reprehende\",\n  \"trust\": {\n    \"trust_all\": false\n  }\n}"
						}
					]
				},
				{
					"name": "Updates the current account",
					"_postman_id": "60182596-a0cf-4593-be7e-52fe4a17d43a",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "\"cupidatat adipisicing\"",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/account",
						"description": "Updates the current account."
					},
					"response": [
						{
							"id": "33fdf871-af5f-4dfc-ad89-241e6325b4ca",
							"name": "Account updated successfully",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "\"cupidatat adipisicing\"",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/account"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"id\": \"amet reprehende\",\n  \"trust\": {\n    \"trust_all\": false\n  }\n}"
						},
						{
							"id": "bb4c7097-e98b-4430-8ee1-b6974c24d85a",
							"name": "Account not found. (code: `accounts.not_found`)",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "\"cupidatat adipisicing\"",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/account"
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"disabled": false,
									"description": "The error codes associated with the response",
									"key": "x-cloud-error-codes",
									"value": "accounts.not_found"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Fetch current account information",
					"_postman_id": "9e7c53f9-1089-4f27-a2b2-d4a0bc58a46d",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": "{{baseUrl}}/account",
						"description": "Fetch current account information."
					},
					"response": [
						{
							"id": "011b0eee-99c8-4560-83e0-5e1cf082189f",
							"name": "Account not found. (code: `accounts.not_found`)",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": "{{baseUrl}}/account"
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"disabled": false,
									"description": "The error codes associated with the response",
									"key": "x-cloud-error-codes",
									"value": "accounts.not_found"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
						},
						{
							"id": "5e5e85a2-e4ad-4125-8540-8f203080b816",
							"name": "Account fetched successfully",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": "{{baseUrl}}/account"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"id\": \"amet reprehende\",\n  \"trust\": {\n    \"trust_all\": false\n  }\n}"
						}
					]
				}
			],
			"_postman_id": "4cc02bfb-06f2-479c-a3cf-9cbfa0df03af"
		},
		{
			"name": "billing/costs/{organization id}",
			"item": [
				{
					"name": "deployments",
					"item": [
						{
							"name": "{deployment id}",
							"item": [
								{
									"name": "Get itemized costs by deployments. Currently unavailable in self-hosted ECE.",
									"_postman_id": "1e4daad9-8a20-4a47-9bb7-909faa82ab5a",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/billing/costs/:organization_id/deployments/:deployment_id/items?from=cupidatat adipisicing&to=cupidatat adipisicing",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"billing",
												"costs",
												":organization_id",
												"deployments",
												":deployment_id",
												"items"
											],
											"query": [
												{
													"key": "from",
													"value": "cupidatat adipisicing",
													"description": "A datetime for the beginning of the desired range for which to fetch costs. Defaults to start of current month."
												},
												{
													"key": "to",
													"value": "cupidatat adipisicing",
													"description": "A datetime for the end of the desired range for which to fetch costs. Defaults to the current date."
												}
											],
											"variable": [
												{
													"id": "c5e7dc78-3bf2-4b5d-b029-0daed92e163b",
													"key": "organization_id",
													"value": "cupidatat adipisicing",
													"description": "(Required) Identifier for the organization",
													"type": "string"
												},
												{
													"id": "8e954018-ad7f-49f7-9117-c53c0f96a45c",
													"key": "deployment_id",
													"value": "cupidatat adipisicing",
													"description": "(Required) Id of a Deployment",
													"type": "string"
												}
											]
										},
										"description": "EXPERIMENTAL (it may change in future versions): Retrieves the itemized costs for the given deployment."
									},
									"response": [
										{
											"id": "837447d8-ee67-49db-93f4-ed5255f296c8",
											"name": "The current user does not have access to the requested organization. (code: `organization.invalid_access`)",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													},
													{
														"description": "Determines the response body format. Can be either application/json or text/csv.",
														"key": "Accept",
														"value": "cupidatat adipisicing"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/billing/costs/:organization_id/deployments/:deployment_id/items?from=cupidatat adipisicing&to=cupidatat adipisicing",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"billing",
														"costs",
														":organization_id",
														"deployments",
														":deployment_id",
														"items"
													],
													"query": [
														{
															"key": "from",
															"value": "cupidatat adipisicing"
														},
														{
															"key": "to",
															"value": "cupidatat adipisicing"
														}
													],
													"variable": [
														{
															"key": "organization_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) Identifier for the organization"
														},
														{
															"key": "deployment_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) Id of a Deployment"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"disabled": false,
													"description": "The error codes associated with the response",
													"key": "x-cloud-error-codes",
													"value": "organization.invalid_access"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
										},
										{
											"id": "9a482409-1079-45bc-8ef9-3f745e899b0d",
											"name": "The specified date range is invalid. (code: `costs.invalid_date_range`)",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													},
													{
														"description": "Determines the response body format. Can be either application/json or text/csv.",
														"key": "Accept",
														"value": "cupidatat adipisicing"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/billing/costs/:organization_id/deployments/:deployment_id/items?from=cupidatat adipisicing&to=cupidatat adipisicing",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"billing",
														"costs",
														":organization_id",
														"deployments",
														":deployment_id",
														"items"
													],
													"query": [
														{
															"key": "from",
															"value": "cupidatat adipisicing"
														},
														{
															"key": "to",
															"value": "cupidatat adipisicing"
														}
													],
													"variable": [
														{
															"key": "organization_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) Identifier for the organization"
														},
														{
															"key": "deployment_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) Id of a Deployment"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"disabled": false,
													"description": "The error codes associated with the response",
													"key": "x-cloud-error-codes",
													"value": "costs.invalid_date_range"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
										},
										{
											"id": "c8b32bd7-e361-4628-a604-0c4b91bcb2bb",
											"name": "The costs associated to a set items billed for a single deployment.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													},
													{
														"description": "Determines the response body format. Can be either application/json or text/csv.",
														"key": "Accept",
														"value": "cupidatat adipisicing"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/billing/costs/:organization_id/deployments/:deployment_id/items?from=cupidatat adipisicing&to=cupidatat adipisicing",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"billing",
														"costs",
														":organization_id",
														"deployments",
														":deployment_id",
														"items"
													],
													"query": [
														{
															"key": "from",
															"value": "cupidatat adipisicing"
														},
														{
															"key": "to",
															"value": "cupidatat adipisicing"
														}
													],
													"variable": [
														{
															"key": "organization_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) Identifier for the organization"
														},
														{
															"key": "deployment_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) Id of a Deployment"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"costs\": {\n    \"dimensions\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"total\": 10572776.219730824\n  },\n  \"data_transfer_and_storage\": [\n    {\n      \"cost\": -96317237.12517175,\n      \"name\": \"occaecat pariatur est \",\n      \"quantity\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"rate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"sku\": \"ex incididunt elit fugiat\",\n      \"type\": \"Excepteur in dolor eu\"\n    },\n    {\n      \"cost\": -73135020.36210844,\n      \"name\": \"est anim velit\",\n      \"quantity\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"rate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"sku\": \"minim consequat vel\",\n      \"type\": \"et eiusmod amet\"\n    }\n  ],\n  \"resources\": [\n    {\n      \"hours\": -18309468,\n      \"instance_count\": -17991884,\n      \"kind\": \"cil\",\n      \"name\": \"sunt nisi dolor et\",\n      \"period\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"price\": -52336025.8616298,\n      \"price_per_hour\": -62058116.9684574,\n      \"sku\": \"laboris aute in\"\n    },\n    {\n      \"hours\": -89463704,\n      \"instance_count\": -87534342,\n      \"kind\": \"minim sit\",\n      \"name\": \"commodo est cillum\",\n      \"period\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"price\": 60760455.75954962,\n      \"price_per_hour\": -88001469.26263648,\n      \"sku\": \"nostrud aliquip nisi\"\n    }\n  ]\n}"
										},
										{
											"id": "ea44124c-b810-42af-bc27-02265486db81",
											"name": "An error occurred when fetching the itemized costs for the given deployment of the organization. (code: `billing_service.failed_request`)",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													},
													{
														"description": "Determines the response body format. Can be either application/json or text/csv.",
														"key": "Accept",
														"value": "cupidatat adipisicing"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/billing/costs/:organization_id/deployments/:deployment_id/items?from=cupidatat adipisicing&to=cupidatat adipisicing",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"billing",
														"costs",
														":organization_id",
														"deployments",
														":deployment_id",
														"items"
													],
													"query": [
														{
															"key": "from",
															"value": "cupidatat adipisicing"
														},
														{
															"key": "to",
															"value": "cupidatat adipisicing"
														}
													],
													"variable": [
														{
															"key": "organization_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) Identifier for the organization"
														},
														{
															"key": "deployment_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) Id of a Deployment"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"disabled": false,
													"description": "The error codes associated with the response",
													"key": "x-cloud-error-codes",
													"value": "billing_service.failed_request"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
										},
										{
											"id": "ee3cc8d2-01b2-455e-a6d7-15ad343abd37",
											"name": "* The organization was not found. (code: `organization.not_found`)\n* The Elasticsearch cluster was not found. (code: `billing_service.es_cluster_id_not_found`)",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													},
													{
														"description": "Determines the response body format. Can be either application/json or text/csv.",
														"key": "Accept",
														"value": "cupidatat adipisicing"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/billing/costs/:organization_id/deployments/:deployment_id/items?from=cupidatat adipisicing&to=cupidatat adipisicing",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"billing",
														"costs",
														":organization_id",
														"deployments",
														":deployment_id",
														"items"
													],
													"query": [
														{
															"key": "from",
															"value": "cupidatat adipisicing"
														},
														{
															"key": "to",
															"value": "cupidatat adipisicing"
														}
													],
													"variable": [
														{
															"key": "organization_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) Identifier for the organization"
														},
														{
															"key": "deployment_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) Id of a Deployment"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"disabled": false,
													"description": "The error codes associated with the response",
													"key": "x-cloud-error-codes",
													"value": "organization.not_found"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Get charts by deployment. Currently unavailable in self-hosted ECE.",
									"_postman_id": "e68ff654-fa57-497e-811e-921a6d9586c7",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/billing/costs/:organization_id/deployments/:deployment_id/charts?from=cupidatat adipisicing&to=cupidatat adipisicing&bucketing_strategy=Daily",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"billing",
												"costs",
												":organization_id",
												"deployments",
												":deployment_id",
												"charts"
											],
											"query": [
												{
													"key": "from",
													"value": "cupidatat adipisicing",
													"description": "A datetime for the beginning of the desired range for which to fetch costs. Defaults to start of current month."
												},
												{
													"key": "to",
													"value": "cupidatat adipisicing",
													"description": "A datetime for the end of the desired range for which to fetch costs. Defaults to the current date."
												},
												{
													"key": "bucketing_strategy",
													"value": "Daily",
													"description": "The desired bucketing strategy for the charts. Defaults to `daily`."
												}
											],
											"variable": [
												{
													"id": "962632c8-4204-40e9-9a5d-c0d77cba107d",
													"key": "organization_id",
													"value": "cupidatat adipisicing",
													"description": "(Required) Identifier for the organization",
													"type": "string"
												},
												{
													"id": "4faf2c18-9961-4197-96e1-e989768eeae2",
													"key": "deployment_id",
													"value": "cupidatat adipisicing",
													"description": "(Required) Id of a Deployment",
													"type": "string"
												}
											]
										},
										"description": "EXPERIMENTAL (it may change in future versions): Retrieves the usage charts for the given  deployment."
									},
									"response": [
										{
											"id": "26213866-ecb6-4d4f-b531-5eac7d427b6c",
											"name": "The specified date range is invalid. (code: `costs.invalid_date_range`)",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/billing/costs/:organization_id/deployments/:deployment_id/charts?from=cupidatat adipisicing&to=cupidatat adipisicing&bucketing_strategy=Daily",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"billing",
														"costs",
														":organization_id",
														"deployments",
														":deployment_id",
														"charts"
													],
													"query": [
														{
															"key": "from",
															"value": "cupidatat adipisicing"
														},
														{
															"key": "to",
															"value": "cupidatat adipisicing"
														},
														{
															"key": "bucketing_strategy",
															"value": "Daily"
														}
													],
													"variable": [
														{
															"key": "organization_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) Identifier for the organization"
														},
														{
															"key": "deployment_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) Id of a Deployment"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"disabled": false,
													"description": "The error codes associated with the response",
													"key": "x-cloud-error-codes",
													"value": "costs.invalid_date_range"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
										},
										{
											"id": "38f2d915-d4cd-4e97-b1bf-8d5d38c177fd",
											"name": "Error fetching the itemized costs for the organization. (code: `billing_service.failed_request`)",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/billing/costs/:organization_id/deployments/:deployment_id/charts?from=cupidatat adipisicing&to=cupidatat adipisicing&bucketing_strategy=Daily",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"billing",
														"costs",
														":organization_id",
														"deployments",
														":deployment_id",
														"charts"
													],
													"query": [
														{
															"key": "from",
															"value": "cupidatat adipisicing"
														},
														{
															"key": "to",
															"value": "cupidatat adipisicing"
														},
														{
															"key": "bucketing_strategy",
															"value": "Daily"
														}
													],
													"variable": [
														{
															"key": "organization_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) Identifier for the organization"
														},
														{
															"key": "deployment_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) Id of a Deployment"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"disabled": false,
													"description": "The error codes associated with the response",
													"key": "x-cloud-error-codes",
													"value": "billing_service.failed_request"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
										},
										{
											"id": "5438fa82-9d6f-412f-b7ba-9ab4d52c8796",
											"name": "Organization not found. (code: `organization.not_found`)",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/billing/costs/:organization_id/deployments/:deployment_id/charts?from=cupidatat adipisicing&to=cupidatat adipisicing&bucketing_strategy=Daily",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"billing",
														"costs",
														":organization_id",
														"deployments",
														":deployment_id",
														"charts"
													],
													"query": [
														{
															"key": "from",
															"value": "cupidatat adipisicing"
														},
														{
															"key": "to",
															"value": "cupidatat adipisicing"
														},
														{
															"key": "bucketing_strategy",
															"value": "Daily"
														}
													],
													"variable": [
														{
															"key": "organization_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) Identifier for the organization"
														},
														{
															"key": "deployment_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) Id of a Deployment"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"disabled": false,
													"description": "The error codes associated with the response",
													"key": "x-cloud-error-codes",
													"value": "organization.not_found"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
										},
										{
											"id": "d8eba048-4ce2-49d6-a34e-a14d3f82503b",
											"name": "The current user does not have access to the requested organization. (code: `organization.invalid_access`)",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/billing/costs/:organization_id/deployments/:deployment_id/charts?from=cupidatat adipisicing&to=cupidatat adipisicing&bucketing_strategy=Daily",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"billing",
														"costs",
														":organization_id",
														"deployments",
														":deployment_id",
														"charts"
													],
													"query": [
														{
															"key": "from",
															"value": "cupidatat adipisicing"
														},
														{
															"key": "to",
															"value": "cupidatat adipisicing"
														},
														{
															"key": "bucketing_strategy",
															"value": "Daily"
														}
													],
													"variable": [
														{
															"key": "organization_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) Identifier for the organization"
														},
														{
															"key": "deployment_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) Id of a Deployment"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"disabled": false,
													"description": "The error codes associated with the response",
													"key": "x-cloud-error-codes",
													"value": "organization.invalid_access"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
										},
										{
											"id": "f25c5784-77fd-4f2c-9e4f-8acd20412e10",
											"name": "The usage charts of a deployment.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/billing/costs/:organization_id/deployments/:deployment_id/charts?from=cupidatat adipisicing&to=cupidatat adipisicing&bucketing_strategy=Daily",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"billing",
														"costs",
														":organization_id",
														"deployments",
														":deployment_id",
														"charts"
													],
													"query": [
														{
															"key": "from",
															"value": "cupidatat adipisicing"
														},
														{
															"key": "to",
															"value": "cupidatat adipisicing"
														},
														{
															"key": "bucketing_strategy",
															"value": "Daily"
														}
													],
													"variable": [
														{
															"key": "organization_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) Identifier for the organization"
														},
														{
															"key": "deployment_id",
															"value": "cupidatat adipisicing",
															"description": "(Required) Id of a Deployment"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"data\": [\n    {\n      \"timestamp\": 51047409,\n      \"values\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"timestamp\": -83059597,\n      \"values\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
										}
									]
								}
							],
							"_postman_id": "ed28fcc2-22ae-4d61-a6b3-0c371416aae8",
							"_postman_isSubFolder": true
						},
						{
							"name": "Get deployments costs for the organization. Currently unavailable in self-hosted ECE.",
							"_postman_id": "2bd929d8-85e4-4277-8918-3afb3dcf56f3",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/billing/costs/:organization_id/deployments?from=cupidatat adipisicing&to=cupidatat adipisicing",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"billing",
										"costs",
										":organization_id",
										"deployments"
									],
									"query": [
										{
											"key": "from",
											"value": "cupidatat adipisicing",
											"description": "A datetime for the beginning of the desired range for which to fetch activity. Defaults to start of current month."
										},
										{
											"key": "to",
											"value": "cupidatat adipisicing",
											"description": "A datetime for the end of the desired range for which to fetch activity. Defaults to the current date."
										}
									],
									"variable": [
										{
											"id": "2e4db7eb-b66b-4753-ae99-769932dbc996",
											"key": "organization_id",
											"value": "cupidatat adipisicing",
											"description": "(Required) Identifier for the organization",
											"type": "string"
										}
									]
								},
								"description": "EXPERIMENTAL (it may change in future versions): Retrieves the costs associated with all deployments for the organization."
							},
							"response": [
								{
									"id": "292b7efb-f4b0-4a42-bf0d-32d5849631e5",
									"name": "An error occurred when fetching the costs associated with all deployments for the organization. (code: `billing_service.failed_request`)",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											},
											{
												"description": "Accept header containing the content preference.",
												"key": "Accept",
												"value": "cupidatat adipisicing"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/billing/costs/:organization_id/deployments?from=cupidatat adipisicing&to=cupidatat adipisicing",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"billing",
												"costs",
												":organization_id",
												"deployments"
											],
											"query": [
												{
													"key": "from",
													"value": "cupidatat adipisicing"
												},
												{
													"key": "to",
													"value": "cupidatat adipisicing"
												}
											],
											"variable": [
												{
													"key": "organization_id",
													"value": "cupidatat adipisicing",
													"description": "(Required) Identifier for the organization"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"disabled": false,
											"description": "The error codes associated with the response",
											"key": "x-cloud-error-codes",
											"value": "billing_service.failed_request"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
								},
								{
									"id": "2bb019a9-e1bd-4159-aa0d-20bd4183642b",
									"name": "Organization not found. (code: `organization.not_found`)",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											},
											{
												"description": "Accept header containing the content preference.",
												"key": "Accept",
												"value": "cupidatat adipisicing"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/billing/costs/:organization_id/deployments?from=cupidatat adipisicing&to=cupidatat adipisicing",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"billing",
												"costs",
												":organization_id",
												"deployments"
											],
											"query": [
												{
													"key": "from",
													"value": "cupidatat adipisicing"
												},
												{
													"key": "to",
													"value": "cupidatat adipisicing"
												}
											],
											"variable": [
												{
													"key": "organization_id",
													"value": "cupidatat adipisicing",
													"description": "(Required) Identifier for the organization"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"disabled": false,
											"description": "The error codes associated with the response",
											"key": "x-cloud-error-codes",
											"value": "organization.not_found"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
								},
								{
									"id": "8459c7f1-9fb6-4476-bc62-7760e54ca154",
									"name": "The current user does not have access to the requested organization. (code: `organization.invalid_access`)",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											},
											{
												"description": "Accept header containing the content preference.",
												"key": "Accept",
												"value": "cupidatat adipisicing"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/billing/costs/:organization_id/deployments?from=cupidatat adipisicing&to=cupidatat adipisicing",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"billing",
												"costs",
												":organization_id",
												"deployments"
											],
											"query": [
												{
													"key": "from",
													"value": "cupidatat adipisicing"
												},
												{
													"key": "to",
													"value": "cupidatat adipisicing"
												}
											],
											"variable": [
												{
													"key": "organization_id",
													"value": "cupidatat adipisicing",
													"description": "(Required) Identifier for the organization"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"disabled": false,
											"description": "The error codes associated with the response",
											"key": "x-cloud-error-codes",
											"value": "organization.invalid_access"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
								},
								{
									"id": "abeed665-e4e0-478d-adb1-e2a53eea79a8",
									"name": "The costs associated to a set of products",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											},
											{
												"description": "Accept header containing the content preference.",
												"key": "Accept",
												"value": "cupidatat adipisicing"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/billing/costs/:organization_id/deployments?from=cupidatat adipisicing&to=cupidatat adipisicing",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"billing",
												"costs",
												":organization_id",
												"deployments"
											],
											"query": [
												{
													"key": "from",
													"value": "cupidatat adipisicing"
												},
												{
													"key": "to",
													"value": "cupidatat adipisicing"
												}
											],
											"variable": [
												{
													"key": "organization_id",
													"value": "cupidatat adipisicing",
													"description": "(Required) Identifier for the organization"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"deployments\": [\n    {\n      \"costs\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"deployment_id\": \"aute sunt\",\n      \"deployment_name\": \"officia magna ea\",\n      \"hourly_rate\": 70558686.51089048,\n      \"period\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"costs\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"deployment_id\": \"laborum\",\n      \"deployment_name\": \"proident laboris qui\",\n      \"hourly_rate\": -50904600.04649424,\n      \"period\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"total_cost\": 57435221.429982066\n}"
								},
								{
									"id": "d032a3ee-7000-43b7-bf61-f6d29c5539c6",
									"name": "Invalid date range specified. (code: `costs.invalid_date_range`)",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											},
											{
												"description": "Accept header containing the content preference.",
												"key": "Accept",
												"value": "cupidatat adipisicing"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/billing/costs/:organization_id/deployments?from=cupidatat adipisicing&to=cupidatat adipisicing",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"billing",
												"costs",
												":organization_id",
												"deployments"
											],
											"query": [
												{
													"key": "from",
													"value": "cupidatat adipisicing"
												},
												{
													"key": "to",
													"value": "cupidatat adipisicing"
												}
											],
											"variable": [
												{
													"key": "organization_id",
													"value": "cupidatat adipisicing",
													"description": "(Required) Identifier for the organization"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"disabled": false,
											"description": "The error codes associated with the response",
											"key": "x-cloud-error-codes",
											"value": "costs.invalid_date_range"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
								}
							]
						}
					],
					"_postman_id": "deb8a765-37bc-4c71-bf10-22e0c7be1055",
					"_postman_isSubFolder": true
				},
				{
					"name": "Get costs overview for the organization. Currently unavailable in self-hosted ECE.",
					"_postman_id": "52265ff0-7557-425e-a4e9-8307d23b6ed7",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/billing/costs/:organization_id?from=cupidatat adipisicing&to=cupidatat adipisicing",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"billing",
								"costs",
								":organization_id"
							],
							"query": [
								{
									"key": "from",
									"value": "cupidatat adipisicing",
									"description": "A datetime for the beginning of the desired range for which to fetch costs. Defaults to start of current month."
								},
								{
									"key": "to",
									"value": "cupidatat adipisicing",
									"description": "A datetime for the end of the desired range for which to fetch costs. Defaults to the current date."
								}
							],
							"variable": [
								{
									"id": "303e2731-dbbf-4775-816e-1cd9faf92264",
									"key": "organization_id",
									"value": "cupidatat adipisicing",
									"description": "(Required) Identifier for the organization",
									"type": "string"
								}
							]
						},
						"description": "EXPERIMENTAL (it may change in future versions): Retrieves an overview of the costs by organization ID."
					},
					"response": [
						{
							"id": "078bf49e-d3d6-450a-8dc9-75ac5e61caf4",
							"name": "Organization not found. (code: `organization.not_found`)",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/billing/costs/:organization_id?from=cupidatat adipisicing&to=cupidatat adipisicing",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"billing",
										"costs",
										":organization_id"
									],
									"query": [
										{
											"key": "from",
											"value": "cupidatat adipisicing"
										},
										{
											"key": "to",
											"value": "cupidatat adipisicing"
										}
									],
									"variable": [
										{
											"key": "organization_id",
											"value": "cupidatat adipisicing",
											"description": "(Required) Identifier for the organization"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"disabled": false,
									"description": "The error codes associated with the response",
									"key": "x-cloud-error-codes",
									"value": "organization.not_found"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
						},
						{
							"id": "1f170214-cd2a-40ee-875f-66506268cc03",
							"name": "The current user does not have access to the requested organization. (code: `organization.invalid_access`)",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/billing/costs/:organization_id?from=cupidatat adipisicing&to=cupidatat adipisicing",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"billing",
										"costs",
										":organization_id"
									],
									"query": [
										{
											"key": "from",
											"value": "cupidatat adipisicing"
										},
										{
											"key": "to",
											"value": "cupidatat adipisicing"
										}
									],
									"variable": [
										{
											"key": "organization_id",
											"value": "cupidatat adipisicing",
											"description": "(Required) Identifier for the organization"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"disabled": false,
									"description": "The error codes associated with the response",
									"key": "x-cloud-error-codes",
									"value": "organization.invalid_access"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
						},
						{
							"id": "64553e78-1ff7-421f-b9f6-65f09c6d08c5",
							"name": "An error occurred when fetching an overview of the costs for the organization. (code: `billing_service.failed_request`)",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/billing/costs/:organization_id?from=cupidatat adipisicing&to=cupidatat adipisicing",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"billing",
										"costs",
										":organization_id"
									],
									"query": [
										{
											"key": "from",
											"value": "cupidatat adipisicing"
										},
										{
											"key": "to",
											"value": "cupidatat adipisicing"
										}
									],
									"variable": [
										{
											"key": "organization_id",
											"value": "cupidatat adipisicing",
											"description": "(Required) Identifier for the organization"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"disabled": false,
									"description": "The error codes associated with the response",
									"key": "x-cloud-error-codes",
									"value": "billing_service.failed_request"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
						},
						{
							"id": "810e4b62-c68e-4611-bc5a-655647a8e079",
							"name": "The specified date range is invalid. (code: `costs.invalid_date_range`)",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/billing/costs/:organization_id?from=cupidatat adipisicing&to=cupidatat adipisicing",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"billing",
										"costs",
										":organization_id"
									],
									"query": [
										{
											"key": "from",
											"value": "cupidatat adipisicing"
										},
										{
											"key": "to",
											"value": "cupidatat adipisicing"
										}
									],
									"variable": [
										{
											"key": "organization_id",
											"value": "cupidatat adipisicing",
											"description": "(Required) Identifier for the organization"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"disabled": false,
									"description": "The error codes associated with the response",
									"key": "x-cloud-error-codes",
									"value": "costs.invalid_date_range"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
						},
						{
							"id": "c19eef9c-c428-433f-b97a-bb9901d2395d",
							"name": "Top-level cost overview for the organization",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/billing/costs/:organization_id?from=cupidatat adipisicing&to=cupidatat adipisicing",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"billing",
										"costs",
										":organization_id"
									],
									"query": [
										{
											"key": "from",
											"value": "cupidatat adipisicing"
										},
										{
											"key": "to",
											"value": "cupidatat adipisicing"
										}
									],
									"variable": [
										{
											"key": "organization_id",
											"value": "cupidatat adipisicing",
											"description": "(Required) Identifier for the organization"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"costs\": {\n    \"dimensions\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"total\": 61672481.15435156\n  },\n  \"hourly_rate\": -97100848.38476014,\n  \"trials\": 81219869.64167789,\n  \"balance\": {\n    \"available\": 68659045.773276,\n    \"line_items\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"remaining\": -33716412.0834788\n  }\n}"
						}
					]
				},
				{
					"name": "Get itemized costs for the organization. Currently unavailable in self-hosted ECE.",
					"_postman_id": "7548ee3b-1968-47d6-bd06-dbd2037ef7be",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/billing/costs/:organization_id/items?from=cupidatat adipisicing&to=cupidatat adipisicing",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"billing",
								"costs",
								":organization_id",
								"items"
							],
							"query": [
								{
									"key": "from",
									"value": "cupidatat adipisicing",
									"description": "A datetime for the beginning of the desired range for which to fetch costs. Defaults to start of current month."
								},
								{
									"key": "to",
									"value": "cupidatat adipisicing",
									"description": "A datetime for the end of the desired range for which to fetch costs. Defaults to the current date."
								}
							],
							"variable": [
								{
									"id": "a9345289-2a6c-4329-8339-80f963987dec",
									"key": "organization_id",
									"value": "cupidatat adipisicing",
									"description": "(Required) Identifier for the organization",
									"type": "string"
								}
							]
						},
						"description": "EXPERIMENTAL (it may change in future versions): Retrieves the itemized costs for the organization."
					},
					"response": [
						{
							"id": "384a3731-3d8a-4cca-8e8e-2fcfc8be67d4",
							"name": "The costs associated to a set of items",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/billing/costs/:organization_id/items?from=cupidatat adipisicing&to=cupidatat adipisicing",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"billing",
										"costs",
										":organization_id",
										"items"
									],
									"query": [
										{
											"key": "from",
											"value": "cupidatat adipisicing"
										},
										{
											"key": "to",
											"value": "cupidatat adipisicing"
										}
									],
									"variable": [
										{
											"key": "organization_id",
											"value": "cupidatat adipisicing",
											"description": "(Required) Identifier for the organization"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"costs\": {\n    \"dimensions\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"total\": -27946798.016886815\n  },\n  \"data_transfer_and_storage\": [\n    {\n      \"cost\": 41565520.08735904,\n      \"name\": \"labore in irure aliquip\",\n      \"quantity\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"rate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"sku\": \"proident laboris qui enim anim\",\n      \"type\": \"reprehenderit qui dolor aliquip\"\n    },\n    {\n      \"cost\": 38186563.80718824,\n      \"name\": \"reprehenderit culpa\",\n      \"quantity\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"rate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"sku\": \"do eu dolore\",\n      \"type\": \"eiusmod amet magna sed\"\n    }\n  ],\n  \"resources\": [\n    {\n      \"hours\": 9376069,\n      \"instance_count\": -2836254,\n      \"kind\": \"nostrud officia commodo sit\",\n      \"name\": \"amet\",\n      \"period\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"price\": 69483821.00608233,\n      \"price_per_hour\": 60856255.116009265,\n      \"sku\": \"labore esse laborum dolor\"\n    },\n    {\n      \"hours\": 47255232,\n      \"instance_count\": -61561463,\n      \"kind\": \"c\",\n      \"name\": \"Excepteur sed\",\n      \"period\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"price\": -9425116.437100783,\n      \"price_per_hour\": 81266372.53375608,\n      \"sku\": \"sed ullamco sint dolore culpa\"\n    }\n  ]\n}"
						},
						{
							"id": "446139ef-90f4-4d15-aa80-3e766b211922",
							"name": "The current user does not have access to the requested organization. (code: `organization.invalid_access`)",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/billing/costs/:organization_id/items?from=cupidatat adipisicing&to=cupidatat adipisicing",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"billing",
										"costs",
										":organization_id",
										"items"
									],
									"query": [
										{
											"key": "from",
											"value": "cupidatat adipisicing"
										},
										{
											"key": "to",
											"value": "cupidatat adipisicing"
										}
									],
									"variable": [
										{
											"key": "organization_id",
											"value": "cupidatat adipisicing",
											"description": "(Required) Identifier for the organization"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"disabled": false,
									"description": "The error codes associated with the response",
									"key": "x-cloud-error-codes",
									"value": "organization.invalid_access"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
						},
						{
							"id": "558c952b-b1e6-405e-9af3-84fb77e6dfe7",
							"name": "Organization not found. (code: `organization.not_found`)",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/billing/costs/:organization_id/items?from=cupidatat adipisicing&to=cupidatat adipisicing",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"billing",
										"costs",
										":organization_id",
										"items"
									],
									"query": [
										{
											"key": "from",
											"value": "cupidatat adipisicing"
										},
										{
											"key": "to",
											"value": "cupidatat adipisicing"
										}
									],
									"variable": [
										{
											"key": "organization_id",
											"value": "cupidatat adipisicing",
											"description": "(Required) Identifier for the organization"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"disabled": false,
									"description": "The error codes associated with the response",
									"key": "x-cloud-error-codes",
									"value": "organization.not_found"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
						},
						{
							"id": "cdd43d64-be17-40f1-bdb6-14c50c938345",
							"name": "Error fetching the itemized costs for the organization. (code: `billing_service.failed_request`)",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/billing/costs/:organization_id/items?from=cupidatat adipisicing&to=cupidatat adipisicing",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"billing",
										"costs",
										":organization_id",
										"items"
									],
									"query": [
										{
											"key": "from",
											"value": "cupidatat adipisicing"
										},
										{
											"key": "to",
											"value": "cupidatat adipisicing"
										}
									],
									"variable": [
										{
											"key": "organization_id",
											"value": "cupidatat adipisicing",
											"description": "(Required) Identifier for the organization"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"disabled": false,
									"description": "The error codes associated with the response",
									"key": "x-cloud-error-codes",
									"value": "billing_service.failed_request"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
						},
						{
							"id": "fcae3daf-f119-4a3b-a672-a9e597845698",
							"name": "The specified date range is invalid. (code: `costs.invalid_date_range`)",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/billing/costs/:organization_id/items?from=cupidatat adipisicing&to=cupidatat adipisicing",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"billing",
										"costs",
										":organization_id",
										"items"
									],
									"query": [
										{
											"key": "from",
											"value": "cupidatat adipisicing"
										},
										{
											"key": "to",
											"value": "cupidatat adipisicing"
										}
									],
									"variable": [
										{
											"key": "organization_id",
											"value": "cupidatat adipisicing",
											"description": "(Required) Identifier for the organization"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"disabled": false,
									"description": "The error codes associated with the response",
									"key": "x-cloud-error-codes",
									"value": "costs.invalid_date_range"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Get charts for the organization. Currently unavailable in self-hosted ECE.",
					"_postman_id": "f9edeb0c-0720-41db-8934-5be5247bc641",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/billing/costs/:organization_id/charts?from=cupidatat adipisicing&to=cupidatat adipisicing&bucketing_strategy=Daily",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"billing",
								"costs",
								":organization_id",
								"charts"
							],
							"query": [
								{
									"key": "from",
									"value": "cupidatat adipisicing",
									"description": "A datetime for the beginning of the desired range for which to fetch costs. Defaults to start of current month."
								},
								{
									"key": "to",
									"value": "cupidatat adipisicing",
									"description": "A datetime for the end of the desired range for which to fetch costs. Defaults to the current date."
								},
								{
									"key": "bucketing_strategy",
									"value": "Daily",
									"description": "The desired bucketing strategy for the charts. Defaults to `daily`."
								}
							],
							"variable": [
								{
									"id": "a2a14dac-73bb-45be-9289-23dcd161cce4",
									"key": "organization_id",
									"value": "cupidatat adipisicing",
									"description": "(Required) Identifier for the organization",
									"type": "string"
								}
							]
						},
						"description": "EXPERIMENTAL (it may change in future versions): Retrieves the usage charts for the organization."
					},
					"response": [
						{
							"id": "1977c093-1d8a-442c-bbd6-7da72d8b7426",
							"name": "The current user does not have access to the requested organization. (code: `organization.invalid_access`)",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/billing/costs/:organization_id/charts?from=cupidatat adipisicing&to=cupidatat adipisicing&bucketing_strategy=Daily",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"billing",
										"costs",
										":organization_id",
										"charts"
									],
									"query": [
										{
											"key": "from",
											"value": "cupidatat adipisicing"
										},
										{
											"key": "to",
											"value": "cupidatat adipisicing"
										},
										{
											"key": "bucketing_strategy",
											"value": "Daily"
										}
									],
									"variable": [
										{
											"key": "organization_id",
											"value": "cupidatat adipisicing",
											"description": "(Required) Identifier for the organization"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"disabled": false,
									"description": "The error codes associated with the response",
									"key": "x-cloud-error-codes",
									"value": "organization.invalid_access"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
						},
						{
							"id": "222c5b45-8c96-4b59-a610-3ce4edd20cd6",
							"name": "The usage charts of an organization.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/billing/costs/:organization_id/charts?from=cupidatat adipisicing&to=cupidatat adipisicing&bucketing_strategy=Daily",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"billing",
										"costs",
										":organization_id",
										"charts"
									],
									"query": [
										{
											"key": "from",
											"value": "cupidatat adipisicing"
										},
										{
											"key": "to",
											"value": "cupidatat adipisicing"
										},
										{
											"key": "bucketing_strategy",
											"value": "Daily"
										}
									],
									"variable": [
										{
											"key": "organization_id",
											"value": "cupidatat adipisicing",
											"description": "(Required) Identifier for the organization"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"data\": [\n    {\n      \"timestamp\": -50054749,\n      \"values\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"timestamp\": 45831142,\n      \"values\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
						},
						{
							"id": "336fb86d-9dbc-4f8d-8705-8a82e1872e72",
							"name": "Error fetching the itemized costs for the organization. (code: `billing_service.failed_request`)",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/billing/costs/:organization_id/charts?from=cupidatat adipisicing&to=cupidatat adipisicing&bucketing_strategy=Daily",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"billing",
										"costs",
										":organization_id",
										"charts"
									],
									"query": [
										{
											"key": "from",
											"value": "cupidatat adipisicing"
										},
										{
											"key": "to",
											"value": "cupidatat adipisicing"
										},
										{
											"key": "bucketing_strategy",
											"value": "Daily"
										}
									],
									"variable": [
										{
											"key": "organization_id",
											"value": "cupidatat adipisicing",
											"description": "(Required) Identifier for the organization"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"disabled": false,
									"description": "The error codes associated with the response",
									"key": "x-cloud-error-codes",
									"value": "billing_service.failed_request"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
						},
						{
							"id": "5ae8fc85-4a2a-4eca-b7aa-d397d28d4f85",
							"name": "Organization not found. (code: `organization.not_found`)",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/billing/costs/:organization_id/charts?from=cupidatat adipisicing&to=cupidatat adipisicing&bucketing_strategy=Daily",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"billing",
										"costs",
										":organization_id",
										"charts"
									],
									"query": [
										{
											"key": "from",
											"value": "cupidatat adipisicing"
										},
										{
											"key": "to",
											"value": "cupidatat adipisicing"
										},
										{
											"key": "bucketing_strategy",
											"value": "Daily"
										}
									],
									"variable": [
										{
											"key": "organization_id",
											"value": "cupidatat adipisicing",
											"description": "(Required) Identifier for the organization"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"disabled": false,
									"description": "The error codes associated with the response",
									"key": "x-cloud-error-codes",
									"value": "organization.not_found"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
						},
						{
							"id": "dd1db0d7-63fb-4492-ba01-d15b064e90f3",
							"name": "The specified date range is invalid. (code: `costs.invalid_date_range`)",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/billing/costs/:organization_id/charts?from=cupidatat adipisicing&to=cupidatat adipisicing&bucketing_strategy=Daily",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"billing",
										"costs",
										":organization_id",
										"charts"
									],
									"query": [
										{
											"key": "from",
											"value": "cupidatat adipisicing"
										},
										{
											"key": "to",
											"value": "cupidatat adipisicing"
										},
										{
											"key": "bucketing_strategy",
											"value": "Daily"
										}
									],
									"variable": [
										{
											"key": "organization_id",
											"value": "cupidatat adipisicing",
											"description": "(Required) Identifier for the organization"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"disabled": false,
									"description": "The error codes associated with the response",
									"key": "x-cloud-error-codes",
									"value": "costs.invalid_date_range"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
						}
					]
				}
			],
			"_postman_id": "7e304d62-2306-46e7-927c-b4e221170842"
		},
		{
			"name": "Get stack versions",
			"_postman_id": "4b45ac29-dfb4-4858-a98b-884268201ab4",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/stack/versions?show_deleted=false&show_unusable=false",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"stack",
						"versions"
					],
					"query": [
						{
							"key": "show_deleted",
							"value": "false",
							"description": "Whether to show deleted stack versions or not"
						},
						{
							"key": "show_unusable",
							"value": "false",
							"description": "Whether to show versions that are unusable by the authenticated user"
						}
					]
				},
				"description": "By default, retrieves only the available Elastic Stack versions. To retrieve all of the Elastic Stack versions, use the `show_deleted parameter`."
			},
			"response": [
				{
					"id": "e3486d14-9d17-4eb2-8695-615a81965312",
					"name": "The list of all available Elastic Stack versions are retrieved, including the template version and structure.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "Authorization",
								"value": "<API Key>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/stack/versions?show_deleted=false&show_unusable=false",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"stack",
								"versions"
							],
							"query": [
								{
									"key": "show_deleted",
									"value": "false"
								},
								{
									"key": "show_unusable",
									"value": "false"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"responseTime": null,
					"body": "{\n  \"stacks\": [\n    {\n      \"elasticsearch\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"kibana\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"template\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"upgradable_to\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"accessible\": true,\n      \"min_upgradable_from\": \"6.7.0\",\n      \"deleted\": false,\n      \"whitelisted\": false,\n      \"version\": \"ullamco enim\",\n      \"apm\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"appsearch\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"elasticsearch\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"kibana\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"template\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"upgradable_to\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"accessible\": true,\n      \"min_upgradable_from\": \"6.7.0\",\n      \"deleted\": false,\n      \"whitelisted\": true,\n      \"version\": \"anim esse\",\n      \"apm\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"appsearch\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ]\n}"
				}
			]
		},
		{
			"name": "Get trusted environments",
			"_postman_id": "d22e5754-1acf-4877-9f6b-e00f52405493",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": "{{baseUrl}}/trusted-environments",
				"description": "Returns the list of trusted environments for the organization. If no organization is passed in, the organization attached to the user is assumed."
			},
			"response": [
				{
					"id": "046b27d6-2cb5-4980-9a3a-b0a0f9e9c84b",
					"name": "Trusted environments for this organization",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "Authorization",
								"value": "<API Key>"
							}
						],
						"url": "{{baseUrl}}/trusted-environments"
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"responseTime": null,
					"body": "{\n  \"accounts\": [\n    {\n      \"account_id\": \"veniam non est fugiat\",\n      \"trust_all\": false,\n      \"trust_allowlist\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"name\": \"labore minim\"\n    },\n    {\n      \"account_id\": \"aliquip elit pariatur Lorem\",\n      \"trust_all\": false,\n      \"trust_allowlist\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"name\": \"velit ad\"\n    }\n  ],\n  \"external\": [\n    {\n      \"trust_all\": true,\n      \"trust_relationship_id\": \"officia\",\n      \"trust_allowlist\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"name\": \"ullamco ut deserunt\"\n    },\n    {\n      \"trust_all\": true,\n      \"trust_relationship_id\": \"occaecat velit amet nisi\",\n      \"trust_allowlist\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"name\": \"voluptate dolore\"\n    }\n  ],\n  \"direct\": [\n    {\n      \"certificates\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"name\": \"quis aliquip in sunt cupidatat\",\n      \"trust_all\": false,\n      \"uid\": \"nostrud dolore non ut magna\",\n      \"additional_node_names\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"scope_id\": \"abc123\",\n      \"type\": \"ESS\",\n      \"trust_allowlist\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"certificates\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"name\": \"nulla fugiat officia in\",\n      \"trust_all\": false,\n      \"uid\": \"cupidatat officia velit fugiat\",\n      \"additional_node_names\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"scope_id\": \"abc123\",\n      \"type\": \"generic\",\n      \"trust_allowlist\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
				},
				{
					"id": "3df462e1-ce5c-4dea-99d4-1ad5075e969e",
					"name": "Organization not found. (code: `organization.not_found`)",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "Authorization",
								"value": "<API Key>"
							}
						],
						"url": "{{baseUrl}}/trusted-environments"
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"disabled": false,
							"description": "The error codes associated with the response",
							"key": "x-cloud-error-codes",
							"value": "organization.not_found"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"responseTime": null,
					"body": "{\n  \"errors\": [\n    {\n      \"code\": \"tempor commodo ipsum \",\n      \"message\": \"consectetur\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"code\": \"amet Lorem culpa\",\n      \"message\": \"quis\",\n      \"fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
				}
			]
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": {
			"value": "{{apiKey}}",
			"key": "Authorization"
		}
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "66ef5623-8c5e-4888-9cac-7376fb5f5a9f",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "fc15674c-3285-4b5e-a816-a6eb222eb1c5",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "c13aa3e2-b8bd-416d-b2f7-eaf15ff175b0",
			"key": "baseUrl",
			"value": "https://api.elastic-cloud.com/api/v1",
			"type": "string"
		}
	]
}